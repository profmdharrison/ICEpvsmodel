ICE_templates_rsce_th[maxrate: posnat, 
          maxinfuse: posnat, 
          maxtime: {maxtime: posnat | maxinfuse <= maxtime}]:

THEORY 
BEGIN 
IMPORTING system_th[maxrate, 
          maxinfuse, 
          maxtime]

reflect_device_to_patient(d: device, p: patient, st: state): state =
tick_pan_patient(p, tick_pan_device(d, p, st))

reflect_device_to_coordinator(d: device, p: patient, st: state): state =
tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, st)))

p_fun_act(a: action_id, d: device, p: patient, st: state): state =
LET st = patient_enter_action(a, p, st),
    st1 = patient_act_mono(p, st),
    st2 = tick_act_device(d, p, st1) IN st2

p_fun_actx(d: device, p: patient, st: state): state =
LET st1 = patient_act_mono(p, st),
    st2 = tick_act_device(d, p, st1) IN st2

c_fun_act(a: action_id, d: device, p: patient, st: state): state =
 LET st1 = coordinator_enter_action(a, st),
     st2 = coord_act_mono(st1),
     st3 = tick_act_patient(p, st2),
     st4 = tick_act_device(d, p, st3) IN st4

p_d_per_action(a: action_id, ps: p_state): boolean =
(ps`p_disp_device)`cmds(a)

p_d_fun_action(a: action_id, p: patient, st: state): state =
LET ps = st`pdb(p), pnde = nde(ps), 
    d = ((ps`p_disp_top)`sel_device)`dv,
    dnde = nde(ps`ip_state(d)), 
    st1 = patient_enter_action(a, p, st),
    st2 = patient_act_mono(p, st1),
    st3 = tick_act_device(d, p, st2),
    st4 = tick_pan_device(d, p, st3),
    st5 = tick_pan_patient(p, st4) IN 
    st5

p_d_fun_actionx(a: action_id, p: patient, st: state): state =
LET ps = st`pdb(p), pnde = nde(ps), 
    d = ((ps`p_disp_top)`sel_device)`dv IN
    reflect_device_to_patient(d, p, p_fun_act(a, d, p, st))

c_d_per_action(a: action_id, is: i_state): boolean =
is`disp_device`av_c_disp(a) AND 
 is`coord_db(is`disp_patient`current_patient)`coord_devices(is`disp_device`current_device)`cmds(a)

c_d_per_actionx(a: action_id, d: device, p: patient, is: i_state): boolean =
is`disp_device`av_c_disp(a) AND 
is`disp_patient`current_patient = p AND
is`disp_device`current_device = d AND
is`disp_focus = device_focus AND
is`mode = d_mode AND
is`coord_db(p)`coord_devices(d)`cmds(a)

c_p_per_actionx(a: action_id, d: device, p: patient, is: i_state): boolean =
is`disp_patient`av_main_act(d)(a) AND 
is`disp_patient`current_patient = p AND
is`disp_patient`selected_device = d AND
is`disp_focus = patient_focus AND
is`mode = p_mode AND
is`coord_db(p)`p_av_actions(d)(a)


c_d_fun_action(a: action_id, st: state): state =
LET is = st`coord_st, 
    p = (is`disp_patient)`current_patient,
    d = (is`disp_device)`current_device,
    st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    st3 = tick_act_patient(p, st2),
    st4 = tick_act_device(d, p, st3),
    st5 = tick_pan_device(d, p, st4),
    st6 = tick_pan_patient(p, st5),
    st7 = tick_pan_coordinator(st6) IN 
    st7

c_p_fun_action(a: action_id, st: state): state =
LET is = st`coord_st, 
    p = (is`disp_patient)`current_patient,
    d = (is`disp_patient)`selected_device,
    st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    st3 = tick_act_patient(p, st2),
    st4 = tick_act_device(d, p, st3),
    st5 = tick_pan_device(d, p, st4),
    st6 = tick_pan_patient(p, st5),
    st7 = tick_pan_coordinator(st6) IN 
    st7

c_d_fun_actionx(a: action_id, st: state): state =
LET is = st`coord_st, 
    p = (is`disp_patient)`current_patient,
    d = (is`disp_device)`current_device IN
    reflect_device_to_coordinator(d, p, c_fun_act(a, d, p, st))

c_p_fun_actionx(a: action_id, st: state): state =
LET is = st`coord_st, 
    p = (is`disp_patient)`current_patient,
    d = (is`disp_patient)`selected_device IN
    reflect_device_to_coordinator(d, p, c_fun_act(a, d, p, st))


consistent_patient_d(d: device, p: patient, st: state): boolean =
LET pan = IF st`pdb(p)`p_disp_top`devs(d) = infusion_pump THEN st`pdb(p)`ip_state(d)`pan
           ELSE st`pdb(p)`vital_signs`pan ENDIF
IN
IF st`pdb(p)`p_disp_top`devs(d) = infusion_pump THEN
LET panx = available_act(pan, st`pdb(p)`ip_state(d)) IN
(st`pdb(p)`p_disp_device = panx) AND (st`pdb(p)`patient_panels(d) = panx) ELSE
LET panx = available_act(pan, st`pdb(p)`vital_signs) IN 
(st`pdb(p)`p_disp_device = panx) AND (st`pdb(p)`patient_panels(d) = panx)
ENDIF


consistent_coordinator_d(d: device, p: patient, st: state): boolean =
LET is = st`coord_st, 
pan = IF st`pdb(p)`p_disp_top`devs(d) = infusion_pump THEN st`pdb(p)`ip_state(d)`pan
           ELSE st`pdb(p)`vital_signs`pan ENDIF,
apan = IF st`pdb(p)`p_disp_top`devs(d) = infusion_pump THEN
        available_act(pan, st`pdb(p)`ip_state(d))
        ELSE available_act(pan, st`pdb(p)`vital_signs) ENDIF,
fpan = filter_panel(apan, 
            is`coord_db(p)`coord_devices(d)`pars,
            is`coord_db(p)`d_available_actions(d))
IN
is`coord_db(p)`coord_devices(d) = fpan

% QED pdfa_lemma proved by nmdh4 on Wed, 13 Jul 2022 10:10:20 GMT
% @QED pdfa_lemma proved by nmdh4 on Mon, 24 Oct 2022 13:26:19 GMT
pdfa_lemma: LEMMA
FORALL (a: action_id, p: patient, st: state):
   p_d_fun_action(a, p, st) = p_d_fun_actionx(a, p, st)

% (lemma "cdfa_lemma" ("a" "a!1" "st" "st!1"))
% 
% QED cdfa_lemma proved by nmdh4 on Fri, 29 Apr 2022 15:41:55 GMT
% @QED cdfa_lemma proved by nmdh4 on Tue, 18 Oct 2022 11:29:38 GMT
cdfa_lemma: LEMMA
FORALL (a: action_id, st: state):
   c_d_fun_action(a, st) = c_d_fun_actionx(a, st)

% @QED cpfa_lemma proved by nmdh4 on Tue, 20 Jun 2023 14:56:05 GMT
cpfa_lemma: LEMMA
FORALL (a: action_id, st: state):
   c_p_fun_action(a, st) = c_p_fun_actionx(a, st)




% QED lemma2ippannpd proved by nmdh4 on Fri, 08 Apr 2022 09:04:32 GMT
% QED lemma2ippannpdv proved by nmdh4 on Wed, 13 Jul 2022 11:34:04 GMT
% QED lemma2ippannpdv proved by nmdh4 on Mon, 24 Oct 2022 14:07:27 GMT
% QED lemma2ippannpdv proved by nmdh4 on Fri, 13 Jan 2023 14:29:05 GMT
% @QED lemma2ippannpdv proved by nmdh4 on Wed, 15 Mar 2023 10:39:15 GMT
lemma2ippannpdv: LEMMA
FORALL (p: patient, d: device, st: state):
LET st1 = tick_pan_device(d, p, st),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    vs = ps`vital_signs,
    is = st`coord_st, 
    vc = (is`coord_db)(p), 
    ps1 = st1`pdb(p),
    ns1 = st1`nde_state,
    is1 = st1`coord_st,
    vc1 = (is1`coord_db)(p), 
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top`devs(d) = infusion_pump) THEN
         ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF,
    %vnde = vs`nde,
    pnde_pan_q = ns`pan_msg_waiting(pnde),
    coord_pan_q1 = ns1`pan_msg_waiting(coord_node),
    %nde1 = ps`nde,
    %nde2 = ds`nde,
    tds = tick(ds),
    tvs = tick_vs(ps`vital_signs),
   % tickdev = IF (ps`p_disp_top`devs(d) = infusion_pump) THEN tds
   %           ELSE tvs ENDIF,
    pa = tds`pan,
    va = tvs`pan,
   % tpa = IF (ps`p_disp_top`devs(d) = infusion_pump) THEN pa
    %          ELSE va ENDIF,
    dmsg = (# mhdr := updmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             pan := available_act(pa, tds)
           #),
    vmsg = (# mhdr := updmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             pan := available_act(va, tvs)
           #),
    ns = st`nde_state,
    ns1 = st1`nde_state,
    pat_buff1 = ns1`pan_msg_waiting(pnde)
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     (pnde_pan_q`buf_status /= full) AND
    % (coord_pan_q1`buf_status /= full)
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     ((ps`p_disp_top`devs(d) = infusion_pump) OR
     (ps`p_disp_top`devs(d) = vital_signs_device)) AND
     %((ps`ip_state(d))`m /= off) AND
     
(ns`pan_msg_waiting(pnde)`last_pos = ns1`pan_msg_waiting(pnde)`current_pos) %AND
%(ns`pan_msg_waiting(pnde)`last_pos < mindex)
IMPLIES
((ps`p_disp_top`devs(d) = infusion_pump) IMPLIES
    next_pan_pm(pnde, ns1)`current_pan_msg = dmsg) AND
((ps`p_disp_top`devs(d) = vital_signs_device) IMPLIES
    next_pan_pm(pnde, ns1)`current_pan_msg = vmsg) AND
(pat_buff1`buff(pat_buff1`current_pos)`mhdr = updmsg) AND 
(pat_buff1`buff(pat_buff1`current_pos)`pat_nd = pnde) AND
(pat_buff1`buff(pat_buff1`current_pos)`msg_nd = dnde) AND 
((ps`p_disp_top`devs(d) = infusion_pump) IMPLIES
(pat_buff1`buff(pat_buff1`current_pos)`pan = available_act(pa, tds))) AND
((ps`p_disp_top`devs(d) = vital_signs_device) IMPLIES
(pat_buff1`buff(pat_buff1`current_pos)`pan = available_act(va, tvs))) AND
 ((ps`p_disp_top`devs(d) = infusion_pump) IMPLIES
    ((ns1`pan_msg_waiting(pnde)`buff)(ns1`pan_msg_waiting(pnde)`current_pos) = dmsg)) AND
((ps`p_disp_top`devs(d) = vital_signs_device) IMPLIES
    ((ns1`pan_msg_waiting(pnde)`buff)(ns1`pan_msg_waiting(pnde)`current_pos) = vmsg)) 

% @QED lemma2xnpp proved by nmdh4 on Tue, 16 May 2023 15:34:42 GMT
lemma2xnpp: LEMMA
FORALL (p: patient, d: device, st: state):
LET st1 = tick_pan_device(d, p, st),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    vs = ps`vital_signs,
    is = st`coord_st, 
    vc = (is`coord_db)(p), 
    ps1 = st1`pdb(p),
    ns1 = st1`nde_state,
    is1 = st1`coord_st,
    vc1 = (is1`coord_db)(p), 
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top`devs(d) = infusion_pump) THEN
         ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF,
    %vnde = vs`nde,
   % pnde_pan_q = ns`pan_msg_waiting(pnde),
   % coord_pan_q1 = ns1`pan_msg_waiting(coord_node),
    %nde1 = ps`nde,
    %nde2 = ds`nde,
    tds = tick(ds),
    tvs = tick_vs(ps`vital_signs),
   % tickdev = IF (ps`p_disp_top`devs(d) = infusion_pump) THEN tds
   %           ELSE tvs ENDIF,
    pa = tds`pan,
    va = tvs`pan,
   % tpa = IF (ps`p_disp_top`devs(d) = infusion_pump) THEN pa
    %          ELSE va ENDIF,
    dmsg = (# mhdr := updmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             pan := available_act(pa, tds)
           #),
    vmsg = (# mhdr := updmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             pan := available_act(va, tvs)
           #),
    ns = st`nde_state,
    ns1 = st1`nde_state%,
   % pat_buff1 = ns1`pan_msg_waiting(pnde)
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     (ns`pan_msg_waiting(pnde)`buf_status /= full) AND
    % (coord_pan_q1`buf_status /= full)
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     ((ps`p_disp_top`devs(d) = infusion_pump) OR
     (ps`p_disp_top`devs(d) = vital_signs_device)) AND
     %((ps`ip_state(d))`m /= off) AND
     
(ns`pan_msg_waiting(pnde)`last_pos = ns1`pan_msg_waiting(pnde)`current_pos) %AND
%(ns`pan_msg_waiting(pnde)`last_pos < mindex)
IMPLIES
((ps`p_disp_top`devs(d) = infusion_pump) IMPLIES
    next_pan_pm(pnde, ns1)`current_pan_msg = dmsg) AND
((ps`p_disp_top`devs(d) = vital_signs_device) IMPLIES
    next_pan_pm(pnde, ns1)`current_pan_msg = vmsg) 










 


%  (lemma "panlemma1np" ("p" "p!1" "d" "d!1" "st" "st!1"))
%  (with-labels (flatten -1) (pl1nde1 pl1nde2 pl1nde3 pl1devs1 pl1devs2 pl1devs3 pl1dnodes1 pl1dnodes2 pl1dnodes3 pl1pnodes1 pl1pnodes2 pl1pnodes3 pl1pdevis1 pl1pdevis2 pl1pdevis3))


% QED panlemma1np proved by nmdh4 on Wed, 11 May 2022 16:05:53 GMT
% QED panlemma1np proved by nmdh4 on Tues, 18 Oct 2022 13:27:31 GMT
% @QED panlemma1np proved by nmdh4 on Mon, 13 Mar 2023 17:46:06 GMT
panlemma1np: LEMMA
FORALL (d: device, p: patient, st: state):
LET is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF 
   
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     %(a /= nil_action) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     ((ps`p_disp_top)`devs(d) /= no_device) %AND
    % ((ps`p_disp_top)`sel_device) = (# dv := d, dt := infusion_pump #)
     IMPLIES
nde(tick_pan_device(d, p, st)`pdb(p)) = nde(st`pdb(p)) AND
nde(tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)) =
nde(tick_pan_device(d, p, st)`pdb(p)) AND
nde(tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, st)))`pdb(p)) =
nde(tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)) AND
(tick_pan_device(d, p, st)`pdb(p)`p_disp_top)`devs = (st`pdb(p)`p_disp_top)`devs AND
(tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`p_disp_top)`devs = 
(tick_pan_device(d, p, st)`pdb(p)`p_disp_top)`devs AND
(tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, st))))`pdb
              (p)`p_disp_top`devs = 
              (tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`p_disp_top)`devs AND
tick_pan_device(d, p, st)`d_nodes = st`d_nodes AND
tick_pan_patient(p, tick_pan_device(d, p, st))`d_nodes = tick_pan_device(d, p, st)`d_nodes  AND
tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, st)))`d_nodes =
     tick_pan_patient(p, tick_pan_device(d, p, st))`d_nodes AND
tick_pan_device(d, p, st)`p_nodes = st`p_nodes AND
tick_pan_patient(p, tick_pan_device(d, p, st))`p_nodes = tick_pan_device(d, p, st)`p_nodes  AND
tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, st)))`p_nodes =
     tick_pan_patient(p, tick_pan_device(d, p, st))`p_nodes AND
tick_pan_device(d, p, st)`coord_st`coord_db(p)`p_devices = st`coord_st`coord_db(p)`p_devices AND
tick_pan_patient(p, tick_pan_device(d, p, st))`coord_st`coord_db(p)`p_devices = tick_pan_device(d, p, st)`coord_st`coord_db(p)`p_devices  AND
tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, st)))`coord_st`coord_db(p)`p_devices =
     tick_pan_patient(p, tick_pan_device(d, p, st))`coord_st`coord_db(p)`p_devices

%  (lemma "panlemma1npx" ("p" "p!1" "d" "d!1" "st" "st!1"))
%  (with-labels (flatten -1) ((pl1xcoorddb1 pl1xcoorddb2)))

%
% QED panlemma1npx proved by nmdh4 on Thu, 12 May 2022 11:49:20 GMT
% QED panlemma1npx proved by nmdh4 on Thu, 16 Jun 2022 15:37:32 GMT
% QED panlemma1npx proved by nmdh4 on Wed, 19 Oct 2022 08:01:10 GMT
% @QED panlemma1npx proved by nmdh4 on Mon, 13 Mar 2023 18:14:17 GMT
panlemma1npx: LEMMA
FORALL (d: device, p: patient, st: state):
LET is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF 
   
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     %(a /= nil_action) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     ((ps`p_disp_top)`devs(d) /= no_device) %AND
    % ((ps`p_disp_top)`sel_device) = (# dv := d, dt := infusion_pump #)
     IMPLIES
 tick_pan_device(d, p, st)`coord_st = st`coord_st AND
tick_pan_patient(p, tick_pan_device(d, p, st))`coord_st = 
   tick_pan_device(d, p, st)`coord_st



% QED panlemma1npexec proved by nmdh4 on Thu, 16 Jun 2022 15:42:33 GMT
% QED panlemma1npexec proved by nmdh4 on Thu, 14 Jul 2022 15:24:42 GMT
% QED panlemma1npexec proved by nmdh4 on Thu, 20 Oct 2022 13:33:24 GMT
% QED panlemma1npexec proved by nmdh4 on Mon, 24 Oct 2022 14:28:32 GMT
% @QED panlemma1npexec proved by nmdh4 on Mon, 13 Mar 2023 18:17:01 GMT
panlemma1npexec: LEMMA
FORALL (d: device, p: patient, st: state):
LET is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF 
   
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     %(a /= nil_action) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     (( %(is`coord_db)(p)`p_devices(d) = infusion_pump AND
       ((ps`p_disp_top)`devs(d) = infusion_pump) AND
       (ds`m /= off)) OR
       ( %(is`coord_db)(p)`p_devices(d) = vital_signs_device AND
       ((ps`p_disp_top)`devs(d) = vital_signs_device) AND
       ps`vital_signs`power))  %AND
    % ((ps`p_disp_top)`sel_device) = (# dv := d, dt := infusion_pump #)
     IMPLIES
((ps`p_disp_top)`devs(d) = infusion_pump IMPLIES 
     tick_pan_device(d, p, st)`pdb(p)`ip_state(d) = tick(st`pdb(p)`ip_state(d))) 
AND
((ps`p_disp_top)`devs(d) = vital_signs_device IMPLIES 
     tick_pan_device(d, p, st)`pdb(p)`vital_signs = tick_vs(st`pdb(p)`vital_signs)) AND
((ps`p_disp_top)`devs(d) = infusion_pump IMPLIES 
tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`ip_state(d) = 
   tick_pan_device(d, p, st)`pdb(p)`ip_state(d)) AND
((ps`p_disp_top)`devs(d) = vital_signs_device IMPLIES 
tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`vital_signs = 
   tick_pan_device(d, p, st)`pdb(p)`vital_signs)
%  (lemma "panlemma1ip" ("p" "p!1" "d" "d!1" "st" "st!1"))
%  (with-labels (flatten -1) ((pl1ipnde1 pl1ipnde2 pl1ipnde3 pl1ippmode pl1ipseld)))

% QED panlemma1ip proved by nmdh4 on Fri, 28 Jan 2022 09:59:43 GMT
% QED panlemma1ip proved by nmdh4 on Mon, 17 October 2022 18:00:29 GMT
% @QED panlemma1ip proved by nmdh4 on Mon, 13 Mar 2023 20:15:06 GMT
panlemma1ip: LEMMA
FORALL (d: device, p: patient, st: state):
LET is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF 
   
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
    
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     %(a /= nil_action) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     ((ps`p_disp_top)`devs(d) /= no_device) % AND
    % ((ps`p_disp_top)`sel_device) = (# dv := d, dt := infusion_pump #)
     IMPLIES
     (ps`p_disp_top`devs(d) = infusion_pump IMPLIES
      nde(tick_pan_device(d, p, st)`pdb(p)`ip_state(d)) = nde(st`pdb(p)`ip_state(d))) AND
     (ps`p_disp_top`devs(d) = infusion_pump IMPLIES
         nde(tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`ip_state(d)) =
               nde(tick_pan_device(d, p, st)`pdb(p)`ip_state(d))) AND
     (ps`p_disp_top`devs(d) = infusion_pump IMPLIES
      nde(tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, st)))`pdb(p)`ip_state(d)) =
      nde(tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`ip_state(d))) AND
      (ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
      nde(tick_pan_device(d, p, st)`pdb(p)`vital_signs) = nde(st`pdb(p)`vital_signs)) AND
     (ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
         nde(tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`vital_signs) =
               nde(tick_pan_device(d, p, st)`pdb(p)`vital_signs)) AND
     (ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
      nde(tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, st)))`pdb(p)`vital_signs) =
      nde(tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`vital_signs)) AND
      (tick_pan_device(d, p, st)`pdb(p)`pmode = st`pdb(p)`pmode) AND
      (tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`pmode = 
           tick_pan_device(d, p, st)`pdb(p)`pmode) AND
      (tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, st)))`pdb(p)`pmode = 
           tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`pmode) AND
      (tick_pan_device(d, p, st)`pdb(p)`p_disp_top`sel_device = st`pdb(p)`p_disp_top`sel_device) AND
      (tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`p_disp_top`sel_device = 
           tick_pan_device(d, p, st)`pdb(p)`p_disp_top`sel_device) AND
      (tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, st)))`pdb(p)`p_disp_top`sel_device = 
           tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`p_disp_top`sel_device) AND
      (tick_pan_device(d, p, st)`pdb(p)`emode = st`pdb(p)`emode) AND
      (tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`emode = 
           tick_pan_device(d, p, st)`pdb(p)`emode) AND
      (tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, st)))`pdb(p)`emode = 
           tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`emode) AND
       (tick_pan_device(d, p, st)`nde_state`n_links = st`nde_state`n_links) AND
      (tick_pan_patient(p, tick_pan_device(d, p, st))`nde_state`n_links = 
           tick_pan_device(d, p, st)`nde_state`n_links) AND
      (tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, st)))`nde_state`n_links = 
           tick_pan_patient(p, tick_pan_device(d, p, st))`nde_state`n_links) %AND
    %  (tick_pan_device(d, p, st)`coord_st`mode = st`coord_st`mode) AND
    %  (tick_pan_patient(p, tick_pan_device(d, p, st))`coord_st`mode = 
     %      tick_pan_device(d, p, st)`coord_st`mode) %AND
     % (tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, st)))`coord_st`mode = 
        %   tick_pan_patient(p, tick_pan_device(d, p, st))`coord_st`mode)

% QED panlemma1ipx proved by nmdh4 on Fri, 29 Apr 2022 14:32:32 GMT
% QED panlemma1ipx proved by nmdh4 on Thu, 12 May 2022 11:45:36 GMT
% QED panlemma1ipx proved by nmdh4 on Tue, 18 Oct 2022 16:04:37 GMT
% @QED panlemma1ipx proved by nmdh4 on Tue, 14 Mar 2023 10:56:27 GMT
panlemma1ipx: LEMMA
FORALL (d: device, p: patient, st: state):
LET st1 = tick_pan_device(d, p, st),
    st2 = tick_pan_patient(p, st1),
    st3 = tick_pan_coordinator(st2),
    is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    is1 = st1`coord_st,
    is2 = st2`coord_st,
    is3 = st3`coord_st,
    ps1 = st1`pdb(p),
    ps2 = st2`pdb(p),
    ps3 = st3`pdb(p),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF 
   
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
    
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     %(a /= nil_action) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     ((ps`p_disp_top)`devs(d) /= no_device) % AND
    % ((ps`p_disp_top)`sel_device) = (# dv := d, dt := infusion_pump #)
     IMPLIES
     (tick_pan_device(d, p, st)`ps = st`ps) AND
      (tick_pan_patient(p, tick_pan_device(d, p, st))`ps = 
           tick_pan_device(d, p, st)`ps) AND
      (tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, st)))`ps = 
           tick_pan_patient(p, tick_pan_device(d, p, st))`ps) AND
     (ps`p_disp_top`devs(d) = infusion_pump IMPLIES
      tick_pan_device(d, p, st)`pdb(p)`ip_state(d)`m = st`pdb(p)`ip_state(d)`m) AND
     (ps`p_disp_top`devs(d) = infusion_pump IMPLIES
         tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`ip_state(d)`m =
               tick_pan_device(d, p, st)`pdb(p)`ip_state(d)`m) AND
     (ps`p_disp_top`devs(d) = infusion_pump IMPLIES
      tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, st)))`pdb(p)`ip_state(d)`m =
      tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`ip_state(d)`m) AND
       (ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
      tick_pan_device(d, p, st)`pdb(p)`vital_signs`power = st`pdb(p)`vital_signs`power) AND
     (ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
         tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`vital_signs`power =
               tick_pan_device(d, p, st)`pdb(p)`vital_signs`power) AND
     (ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
      tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, st)))`pdb(p)`vital_signs`power =
      tick_pan_patient(p, tick_pan_device(d, p, st))`pdb(p)`vital_signs`power) AND
      is1`disp_focus = is`disp_focus AND
     is2`disp_focus = is1`disp_focus AND
     is3`disp_focus = is2`disp_focus 

% QED panlemma1ipy proved by nmdh4 on Thu, 12 May 2022 14:52:53 GMT
% QED panlemma1ipy proved by nmdh4 on Mon, 13 Jun 2022 13:37:35 GMT
% QED panlemma1ipy proved by nmdh4 on Tue, 18 Oct 2022 17:31:07 GMT
% QED panlemma1ipy proved by nmdh4 on Tue, 01 Nov 2022 13:01:05 GMT
% QED panlemma1ipy proved by nmdh4 on Tue, 01 Nov 2022 14:28:26 GMT
% @QED panlemma1ipy proved by nmdh4 on Tue, 14 Mar 2023 11:13:08 GMT
panlemma1ipy: LEMMA
FORALL (p: patient, d: device, st: state):
LET st1 = tick_pan_device(d, p, st),
    st2 = tick_pan_patient(p, st1),
    st3 = tick_pan_coordinator(st2),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    vs = ps`vital_signs,
    is = st`coord_st, 
    vc = (is`coord_db)(p), 
    ps1 = st1`pdb(p),
    ns1 = st1`nde_state,
    is1 = st1`coord_st,
    %vc1 = (is1`coord_db)(p), 
    ps2 = st2`pdb(p),
    ns2 = st2`nde_state,
    is2 = st2`coord_st,
    ps3 = st3`pdb(p),
    ns3 = st3`nde_state,
    is3 = st3`coord_st,
    %vc2 = (is2`coord_db)(p), 
    pnde = ps`nde,
    dnde = IF ps`p_disp_top`devs(d) = infusion_pump THEN ps`ip_state(d)`nde
           ELSE ps`vital_signs`nde ENDIF,
    pnde_pan_q = ns`pan_msg_waiting(pnde),
    coord_pan_q1 = ns1`pan_msg_waiting(coord_node),
    
    ns = st`nde_state,
    ns1 = st1`nde_state,
    pat_buff1 = ns1`pan_msg_waiting(pnde)
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     (pnde_pan_q`buf_status /= full) AND
     (coord_pan_q1`buf_status /= full)
    % patient known to the system
     AND (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     (( (is`coord_db)(p)`p_devices(d) = infusion_pump AND
       ((ps`p_disp_top)`devs(d) = infusion_pump)) %AND
      % (ds`m /= off)) 
       OR
       ( (is`coord_db)(p)`p_devices(d) = vital_signs_device AND
       ((ps`p_disp_top)`devs(d) = vital_signs_device))) %AND
      % ps`vital_signs`power)) AND
    % patient controller assumptions
    % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
   % (st`patient_menus = init_patient_menu) AND 
   % ((is`disp_top)`patients)(p) AND 
   %  (ns3`pan_msg_waiting(coord_node)`last_pos < mindex) AND
   % (ns3`pan_msg_waiting(coord_node)`buf_status /= full) AND
  %  (ns2`pan_msg_waiting(coord_node)`last_pos < mindex) AND
  %  (ns2`pan_msg_waiting(coord_node)`buf_status /= full) AND
  %  (ns1`pan_msg_waiting(coord_node)`last_pos < mindex) AND
  %  (ns1`pan_msg_waiting(coord_node)`buf_status /= full) AND
  %   (ns1`pan_msg_waiting(pnde)`last_pos = ns2`pan_msg_waiting(pnde)`current_pos) AND
  % (ns1`pan_msg_waiting(coord_node)`last_pos = ns2`pan_msg_waiting(coord_node)`current_pos) AND
  %  (ns`pan_msg_waiting(pnde)`last_pos = ns1`pan_msg_waiting(pnde)`current_pos) AND
  %  (ns`pan_msg_waiting(pnde)`buf_status /= full) AND
  %  (ns`pan_msg_waiting(pnde)`last_pos < mindex) AND
  %  (ns1`pan_msg_waiting(pnde)`buf_status /= full) AND
  %   (ns1`pan_msg_waiting(pnde)`last_pos < mindex) % AND
   IMPLIES
     is1`mode = is`mode AND
     is2`mode = is1`mode AND
     is3`mode = is2`mode AND
     (is1`disp_patient)`current_patient = (is`disp_patient)`current_patient AND
     (is2`disp_patient)`current_patient = (is1`disp_patient)`current_patient AND
     (is3`disp_patient)`current_patient = (is2`disp_patient)`current_patient AND
     (is1`disp_device)`current_device  = (is`disp_device)`current_device AND
     (is2`disp_device)`current_device  = (is1`disp_device)`current_device AND
     (is3`disp_device)`current_device  = (is2`disp_device)`current_device AND
     is1`disp_top`patients = is`disp_top`patients AND
     is2`disp_top`patients = is1`disp_top`patients AND
     is3`disp_top`patients = is2`disp_top`patients
     
    

% QED lemma2ippan proved by nmdh4 on Fri, 28 Jan 2022 10:51:47 GMT
 % QED lemma2ippan proved by nmdh4 on Mon, 25 Apr 2022 11:55:34 GMT
 % QED lemma2ippan proved by nmdh4 on Mon, 14 June 2022 15:30:19 GMT
 % QED lemma2ippan proved by nmdh4 on Wed, 19 Oct 2022 08:41:22 GMT
 % QED lemma2ippan proved by nmdh4 on Fri, 13 Jan 2023 15:09:01 GMT
 % QED lemma2ippan proved by nmdh4 on Fri, 13 Jan 2023 15:37:11 GMT
 % QED lemma2ippan proved by nmdh4 on Tue, 31 Jan 2023 18:58:56 GMT
 % @QED lemma2ippan proved by nmdh4 on Tue, 14 Mar 2023 11:54:01 GMT
 lemma2ippan: LEMMA
FORALL (p: patient, d: device, st: state):
LET st1 = tick_pan_device(d, p, st),
    st2 = tick_pan_patient(p, st1),
    st3 = tick_pan_coordinator(st2),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    %vs = ps`vital_signs,
    is = st`coord_st, 
    vc = (is`coord_db)(p), 
    ps1 = st1`pdb(p),
    ns1 = st1`nde_state,
    is1 = st1`coord_st,
    vc1 = (is1`coord_db)(p), 
    ps2 = st2`pdb(p),
    ns2 = st2`nde_state,
    is2 = st2`coord_st,
    vc2 = (is2`coord_db)(p), 
    is3 = st3`coord_st, 
    vc3 = (is3`coord_db)(p), 
    ns3 = st3`nde_state,
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF,
    %vnde = vs`nde,
    pnde_pan_q = ns`pan_msg_waiting(pnde),
    coord_pan_q1 = ns1`pan_msg_waiting(coord_node),
    %nde1 = ps`nde,
    %nde2 = ds`nde,
    tds = tick(ds),
    tvs = tick_vs(ps`vital_signs),
  %  tst = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
  %         tds ELSE tvs ENDIF,
  %  pa = tst`pan,
   % va = tick(vs)`pan,
    msgd = (# mhdr := updmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             pan := available_act(tds`pan, tds)
           #),
    msgv = (# mhdr := updmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             pan := available_act(tvs`pan, tvs)
           #),
    ns = st`nde_state,
    ns1 = st1`nde_state,
    pat_buff1 = ns1`pan_msg_waiting(pnde)
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
    % (pnde_pan_q`buf_status /= full) AND
    % (coord_pan_q1`buf_status /= full)
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     (((ps`p_disp_top`devs(d) = infusion_pump) AND
     ((ps`ip_state(d))`m /= off) AND
     (is`coord_db(p)`p_devices(d) = infusion_pump)) OR
     ((ps`p_disp_top`devs(d) = vital_signs_device) AND
     (ps`vital_signs)`power AND
     (is`coord_db(p)`p_devices(d) = vital_signs_device)))
      AND
  %   (ns3`pan_msg_waiting(coord_node)`last_pos < mindex) AND
  %  (ns3`pan_msg_waiting(coord_node)`buf_status /= full) AND
   % (ns2`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns2`pan_msg_waiting(coord_node)`buf_status /= full) AND
   % (ns1`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns1`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns1`pan_msg_waiting(coord_node)`last_pos = ns2`pan_msg_waiting(coord_node)`current_pos) AND
 %    (ns1`pan_msg_waiting(pnde)`last_pos = ns2`pan_msg_waiting(pnde)`current_pos) AND
  %  (ns1`pan_msg_waiting(pnde)`last_pos < mindex) AND
   % (ns1`pan_msg_waiting(pnde)`buf_status /= full) AND
    (ns`pan_msg_waiting(pnde)`last_pos = ns1`pan_msg_waiting(pnde)`current_pos) AND
    (ns`pan_msg_waiting(pnde)`buf_status /= full) % AND
    %(ns`pan_msg_waiting(pnde)`last_pos < mindex)
IMPLIES
(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
    next_pan_pm(pnde, ns1)`current_pan_msg = msgd) AND
(((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES
    next_pan_pm(pnde, ns1)`current_pan_msg = msgv) AND
(pat_buff1`buff(pat_buff1`current_pos)`mhdr = updmsg) AND 
(pat_buff1`buff(pat_buff1`current_pos)`pat_nd = pnde) AND
(pat_buff1`buff(pat_buff1`current_pos)`msg_nd = dnde) AND 
(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
   (pat_buff1`buff(pat_buff1`current_pos)`pan = available_act(tds`pan, tds))) AND 
(((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES   
      (pat_buff1`buff(pat_buff1`current_pos)`pan = available_act(tvs`pan, tvs))) AND
(nde_state(st2)`current_pan_msg`mhdr = updmsg) AND
(nde_state(st2)`current_pan_msg`pat_nd = pnde) AND
(nde_state(st2)`current_pan_msg`msg_nd = dnde) AND
(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
(nde_state(st2)`current_pan_msg`pan = available_act(tds`pan, tds))) AND
(((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES 
   (nde_state(st2)`current_pan_msg`pan = available_act(tvs`pan, tvs))) AND
(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES 
(ps2`patient_panels(d) = available_act(tds`pan, tds))) AND
(((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES 
(ps2`patient_panels(d) = available_act(tvs`pan, tvs))) AND
(((ps`p_disp_top)`devs(d) = infusion_pump)  IMPLIES
((ns1`pan_msg_waiting(pnde)`buff)(ns1`pan_msg_waiting(pnde)`current_pos) = msgd)) AND
(((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES 
((ns1`pan_msg_waiting(pnde)`buff)(ns1`pan_msg_waiting(pnde)`current_pos) = msgv)) AND
(((ps`p_disp_top)`devs(d) = infusion_pump)  IMPLIES
   next_cm(ns2)`current_pan_msg = msgd ) AND
 (((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES  
       next_cm(ns2)`current_pan_msg = msgv) AND
(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
((ns2`pan_msg_waiting(coord_node)`buff)(ns2`pan_msg_waiting(coord_node)`current_pos) = msgd)) AND
(((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES 
   ((ns2`pan_msg_waiting(coord_node)`buff)(ns2`pan_msg_waiting(coord_node)`current_pos) = msgv)) AND
(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
is3`coord_db(p)`coord_devices(d) 
      = filter_panel(msgd`pan, 
                             is`coord_db(p)`coord_devices(d)`pars,
                             is`coord_db(p)`d_available_actions(d))) AND
 (((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES 
       is3`coord_db(p)`coord_devices(d) 
      = filter_panel(msgv`pan, 
                             is`coord_db(p)`coord_devices(d)`pars,
                             is`coord_db(p)`d_available_actions(d)))

% @QED lemma2xnqq proved by nmdh4 on Tue, 16 May 2023 17:58:49 GMT
lemma2xnqq: LEMMA
FORALL (p: patient, d: device, st: state):
LET st1 = tick_pan_device(d, p, st),
    st2 = tick_pan_patient(p, st1),
    st3 = tick_pan_coordinator(st2),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    %vs = ps`vital_signs,
    is = st`coord_st, 
   % vc = (is`coord_db)(p), 
    ps1 = st1`pdb(p),
    ns1 = st1`nde_state,
    is1 = st1`coord_st,
   % vc1 = (is1`coord_db)(p), 
    ps2 = st2`pdb(p),
    ns2 = st2`nde_state,
    is2 = st2`coord_st,
   % vc2 = (is2`coord_db)(p), 
    is3 = st3`coord_st, 
    %vc3 = (is3`coord_db)(p), 
    ns3 = st3`nde_state,
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF,
    %vnde = vs`nde,
   % pnde_pan_q = ns`pan_msg_waiting(pnde),
   % coord_pan_q1 = ns1`pan_msg_waiting(coord_node),
    %nde1 = ps`nde,
    %nde2 = ds`nde,
    tds = tick(ds),
    tvs = tick_vs(ps`vital_signs),
  %  tst = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
  %         tds ELSE tvs ENDIF,
  %  pa = tst`pan,
   % va = tick(vs)`pan,
    msgd = (# mhdr := updmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             pan := available_act(tds`pan, tds)
           #),
    msgv = (# mhdr := updmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             pan := available_act(tvs`pan, tvs)
           #),
    ns = st`nde_state,
    ns1 = st1`nde_state%,
   % pat_buff1 = ns1`pan_msg_waiting(pnde)
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
    % (pnde_pan_q`buf_status /= full) AND
    % (coord_pan_q1`buf_status /= full)
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     (((ps`p_disp_top`devs(d) = infusion_pump) AND
     ((ps`ip_state(d))`m /= off) AND
     (is`coord_db(p)`p_devices(d) = infusion_pump)) OR
     ((ps`p_disp_top`devs(d) = vital_signs_device) AND
     (ps`vital_signs)`power AND
     (is`coord_db(p)`p_devices(d) = vital_signs_device)))
      AND
  %   (ns3`pan_msg_waiting(coord_node)`last_pos < mindex) AND
  %  (ns3`pan_msg_waiting(coord_node)`buf_status /= full) AND
   % (ns2`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns2`pan_msg_waiting(coord_node)`buf_status /= full) AND
   % (ns1`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns1`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns1`pan_msg_waiting(coord_node)`last_pos = ns2`pan_msg_waiting(coord_node)`current_pos) AND
 %    (ns1`pan_msg_waiting(pnde)`last_pos = ns2`pan_msg_waiting(pnde)`current_pos) AND
  %  (ns1`pan_msg_waiting(pnde)`last_pos < mindex) AND
   % (ns1`pan_msg_waiting(pnde)`buf_status /= full) AND
    (ns`pan_msg_waiting(pnde)`last_pos = ns1`pan_msg_waiting(pnde)`current_pos) AND
    (ns`pan_msg_waiting(pnde)`buf_status /= full) % AND
    %(ns`pan_msg_waiting(pnde)`last_pos < mindex)
IMPLIES
(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
    next_pan_pm(pnde, ns1)`current_pan_msg = msgd) AND
(((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES
    next_pan_pm(pnde, ns1)`current_pan_msg = msgv) AND
%(pat_buff1`buff(pat_buff1`current_pos)`mhdr = updmsg) AND 
%(pat_buff1`buff(pat_buff1`current_pos)`pat_nd = pnde) AND
%(pat_buff1`buff(pat_buff1`current_pos)`msg_nd = dnde) AND 
%(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
 %  (pat_buff1`buff(pat_buff1`current_pos)`pan = available_act(tds`pan, tds))) AND 
%(((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES   
%      (pat_buff1`buff(pat_buff1`current_pos)`pan = available_act(tvs`pan, tvs))) AND
%(nde_state(st2)`current_pan_msg`mhdr = updmsg) AND
%(nde_state(st2)`current_pan_msg`pat_nd = pnde) AND
%(nde_state(st2)`current_pan_msg`msg_nd = dnde) AND
%(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
%(nde_state(st2)`current_pan_msg`pan = available_act(tds`pan, tds))) AND
%(((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES 
%   (nde_state(st2)`current_pan_msg`pan = available_act(tvs`pan, tvs))) AND
(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES 
(ps2`patient_panels(d) = available_act(tds`pan, tds))) AND
(((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES 
(ps2`patient_panels(d) = available_act(tvs`pan, tvs))) AND
%(((ps`p_disp_top)`devs(d) = infusion_pump)  IMPLIES
%((ns1`pan_msg_waiting(pnde)`buff)(ns1`pan_msg_waiting(pnde)`current_pos) = msgd)) AND
%(((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES 
%((ns1`pan_msg_waiting(pnde)`buff)(ns1`pan_msg_waiting(pnde)`current_pos) = msgv)) AND
(((ps`p_disp_top)`devs(d) = infusion_pump)  IMPLIES
   next_cm(ns2)`current_pan_msg = msgd ) AND
 (((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES  
       next_cm(ns2)`current_pan_msg = msgv) AND
%(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
%((ns2`pan_msg_waiting(coord_node)`buff)(ns2`pan_msg_waiting(coord_node)`current_pos) = msgd)) AND
%(((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES 
%   ((ns2`pan_msg_waiting(coord_node)`buff)(ns2`pan_msg_waiting(coord_node)`current_pos) = msgv)) AND
(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
is3`coord_db(p)`coord_devices(d) 
      = filter_panel(msgd`pan, 
                             is`coord_db(p)`coord_devices(d)`pars,
                             is`coord_db(p)`d_available_actions(d))) AND
 (((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES 
       is3`coord_db(p)`coord_devices(d) 
      = filter_panel(msgv`pan, 
                             is`coord_db(p)`coord_devices(d)`pars,
                             is`coord_db(p)`d_available_actions(d)))


% QED panlemma1ipz proved by nmdh4 on Fri, 28 Oct 2022 15:45:53 GMT
% QED panlemma1ipz proved by nmdh4 on Fri, 13 Jan 2023 16:24:58 GMT
% @QED panlemma1ipz proved by nmdh4 on Tue, 14 Mar 2023 12:00:41 GMT
panlemma1ipz: LEMMA
FORALL (p: patient, d: device, st: state):
LET st1 = tick_pan_device(d, p, st),
    st2 = tick_pan_patient(p, st1),
    st3 = tick_pan_coordinator(st2),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    vs = ps`vital_signs,
    is = st`coord_st, 
    vc = (is`coord_db)(p), 
    ps1 = st1`pdb(p),
    ns1 = st1`nde_state,
    is1 = st1`coord_st,
    %vc1 = (is1`coord_db)(p), 
    ps2 = st2`pdb(p),
    ns2 = st2`nde_state,
    is2 = st2`coord_st,
    ps3 = st3`pdb(p),
    ns3 = st3`nde_state,
    is3 = st3`coord_st,
    %vc2 = (is2`coord_db)(p), 
    pnde = ps`nde,
    dnde = IF ps`p_disp_top`devs(d) = infusion_pump THEN ps`ip_state(d)`nde
           ELSE ps`vital_signs`nde ENDIF,
    pnde_pan_q = ns`pan_msg_waiting(pnde),
    coord_pan_q1 = ns1`pan_msg_waiting(coord_node),
    
    ns = st`nde_state,
    ns1 = st1`nde_state,
    pat_buff1 = ns1`pan_msg_waiting(pnde)
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     (pnde_pan_q`buf_status /= full) AND
     (coord_pan_q1`buf_status /= full)
    % patient known to the system
     AND (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     (( (is`coord_db)(p)`p_devices(d) = infusion_pump AND
       ((ps`p_disp_top)`devs(d) = infusion_pump)) %AND
      % (ds`m /= off)) 
       OR
       ( (is`coord_db)(p)`p_devices(d) = vital_signs_device AND
       ((ps`p_disp_top)`devs(d) = vital_signs_device))) AND
      % ps`vital_signs`power)) AND
    % patient controller assumptions
    % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
   % (st`patient_menus = init_patient_menu) AND 
   % ((is`disp_top)`patients)(p) AND 
  %   (ns3`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns3`pan_msg_waiting(coord_node)`buf_status /= full) AND
  %  (ns2`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns2`pan_msg_waiting(coord_node)`buf_status /= full) AND
 %   (ns1`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns1`pan_msg_waiting(coord_node)`buf_status /= full) AND
     (ns1`pan_msg_waiting(pnde)`last_pos = ns2`pan_msg_waiting(pnde)`current_pos) AND
   (ns1`pan_msg_waiting(coord_node)`last_pos = ns2`pan_msg_waiting(coord_node)`current_pos) AND
    (ns`pan_msg_waiting(pnde)`last_pos = ns1`pan_msg_waiting(pnde)`current_pos) AND
    (ns`pan_msg_waiting(pnde)`buf_status /= full) AND
  %  (ns`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns1`pan_msg_waiting(pnde)`buf_status /= full) %AND
   %  (ns1`pan_msg_waiting(pnde)`last_pos < mindex) % AND
IMPLIES
ps1`filter_device_panels = ps`filter_device_panels AND
ps1`patient_panels = ps`patient_panels AND
ps1`p_disp_main = ps`p_disp_main


%  (lemma "actcoordlemma1np" ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
%  (with-labels (flatten -1) ((apl1nde1 apl1nde2 apl1nde3 apl1nde4 apl1devs1 apl1devs2 apl1devs3 apl1devs4 apl1lnks4 apl1lnks3 apl1lnks2 apl1lnks1 apl1ipnde1 apl1ipnde2 apl1ipnde3 apl1ipnde4 apl1vsnde1 apl1vsnde2 apl1vsnde3 apl1vsnde4)))


% QED actcoordlemma1np proved by nmdh4 on Fri, 06 May 2022 10:42:36 GMT
% QED actcoordlemma1np proved by nmdh4 on Fri, 27 May 2022 16:39:44 GMT
% QED actcoordlemma1np proved by nmdh4 on Tue, 18 Oct 2022 14:06:23 GMT
% QED actcoordlemma1np proved by nmdh4 on Fri, 13 Jan 2023 18:22:18 GMT
% @QED actcoordlemma1np proved by nmdh4 on Tue, 14 Mar 2023 13:26:53 GMT
actcoordlemma1np: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    st3 = tick_act_patient(p, st2),
    st4 = tick_act_device(d, p, st3), 
    is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    ns2 = st2`nde_state,
    ns3 = st3`nde_state,
    ns4 = st4`nde_state,
    ds = ps`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF,
    msg = (# mhdr := actmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             act := a 
           #)%,
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     %(ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
   %  (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
    % (ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
   %  (ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
  %  (ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     ((ps`p_disp_top)`devs(d) /= no_device) AND
     (is`mode = d_mode) AND
     (is`disp_focus = device_focus) AND
     (is`coord_db)(p)`p_devices(d) /= no_device AND
     ((is`disp_patient)`current_patient = p) AND
     (is`disp_device)`current_device = d %AND
    % is`disp_device`av_c_disp(a)
     IMPLIES
      nde(coordinator_enter_action(a, st)`pdb(p)) = nde(st`pdb(p)) AND
      nde(coord_act_mono(coordinator_enter_action
                                       (a, st))`pdb(p)) = 
      nde(coordinator_enter_action(a, st)`pdb(p)) AND
      nde(tick_act_patient(p, coord_act_mono( 
                               coordinator_enter_action
                                       (a, st)))`pdb(p)) =
      nde(coord_act_mono(coordinator_enter_action(a, st))`pdb(p)) AND
      nde(tick_act_device(d, p, tick_act_patient(p, 
         coord_act_mono(
            coordinator_enter_action(a, st))))`pdb(p)) =
         nde(tick_act_patient(p, coord_act_mono( 
                               coordinator_enter_action
                                       (a, st)))`pdb(p)) AND
(coordinator_enter_action(a, st)`pdb(p)`p_disp_top)`devs =
       (st`pdb(p)`p_disp_top)`devs AND
(coord_act_mono(coordinator_enter_action(a, st))`pdb
              (p)`p_disp_top)`devs = (coordinator_enter_action(a, st)`pdb
              (p)`p_disp_top)`devs AND
tick_act_patient(p, (coord_act_mono(coordinator_enter_action(a, st))))`pdb
              (p)`p_disp_top`devs = 
              (coord_act_mono(coordinator_enter_action(a, st))`pdb
              (p)`p_disp_top)`devs AND
tick_act_device(d, p, tick_act_patient(p, 
         coord_act_mono(
            coordinator_enter_action(a, st))))`pdb(p)`p_disp_top`devs =
   tick_act_patient(p, coord_act_mono( 
                               coordinator_enter_action
                                       (a, st)))`pdb(p)`p_disp_top`devs AND
tick_act_device(d, p, tick_act_patient(p, 
         coord_act_mono(
            coordinator_enter_action(a, st))))`nde_state`n_links =
   tick_act_patient(p, coord_act_mono( 
                               coordinator_enter_action
                                       (a, st)))`nde_state`n_links AND
tick_act_patient(p, coord_act_mono(coordinator_enter_action
                                       (a, st)))`nde_state`n_links =
                 coord_act_mono(coordinator_enter_action
                                       (a, st))`nde_state`n_links AND
coord_act_mono(coordinator_enter_action
                                       (a, st))`nde_state`n_links =
                coordinator_enter_action(a, st)`nde_state`n_links AND
coordinator_enter_action(a, st)`nde_state`n_links = st`nde_state`n_links AND
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
nde(coordinator_enter_action(a, st)`pdb(p)`ip_state(d)) = nde(st`pdb(p)`ip_state(d))) AND
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
      nde(coord_act_mono(coordinator_enter_action
                                       (a, st))`pdb(p)`ip_state(d)) = 
      nde(coordinator_enter_action(a, st)`pdb(p)`ip_state(d))) AND
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
      nde(tick_act_patient(p, coord_act_mono( 
                               coordinator_enter_action
                                       (a, st)))`pdb(p)`ip_state(d)) =
      nde(coord_act_mono(coordinator_enter_action(a, st))`pdb(p)`ip_state(d))) AND
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
      nde(tick_act_device(d, p, tick_act_patient(p, 
         coord_act_mono(
            coordinator_enter_action(a, st))))`pdb(p)`ip_state(d)) =
         nde(tick_act_patient(p, coord_act_mono( 
                               coordinator_enter_action
                                       (a, st)))`pdb(p)`ip_state(d))) AND
(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
nde(coordinator_enter_action(a, st)`pdb(p)`vital_signs) = 
                    nde(st`pdb(p)`vital_signs)) AND

(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
      nde(coord_act_mono(coordinator_enter_action
                                       (a, st))`pdb(p)`vital_signs) = 
      nde(coordinator_enter_action(a, st)`pdb(p)`vital_signs)) AND
(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
      nde(tick_act_patient(p, coord_act_mono( 
                               coordinator_enter_action
                                       (a, st)))`pdb(p)`vital_signs) =
      nde(coord_act_mono(coordinator_enter_action(a, st))`pdb(p)`vital_signs)) AND
(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
      nde(tick_act_device(d, p, tick_act_patient(p, 
         coord_act_mono(
            coordinator_enter_action(a, st))))`pdb(p)`vital_signs) =
         nde(tick_act_patient(p, coord_act_mono( 
                               coordinator_enter_action
                                       (a, st)))`pdb(p)`vital_signs)) %AND
%(next_act_pm(dnde,
%   nde_state(tick_act_patient(p, coord_act_mono(
%         coordinator_enter_action(a, st)))))`current_act_msg = msg) AND
%(ps`p_disp_top`devs(d) = infusion_pump IMPLIES 
%  tick_act_patient(p, coord_act_mono(
%     coordinator_enter_action(a, st)))`pdb(p)`ip_state(d) = 
%        st`pdb(p)`ip_state(d))

% QED actcoordlemma1npx proved by nmdh4 on Wed, 11 Jan 2023 20:22:59 GMT
% QED actcoordlemma1npx proved by nmdh4 on Tue, 14 Mar 2023 15:33:38 GMT
% QED actcoordlemma1npx proved by nmdh4 on Tue, 06 Jun 2023 21:57:37 GMT
% @QED actcoordlemma1npx proved by nmdh4 on Thu, 15 Jun 2023 07:55:14 GMT 19 hours
actcoordlemma1npx: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    st3 = tick_act_patient(p, st2),
    st4 = tick_act_device(d, p, st3), 
    is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    ns2 = st2`nde_state,
    ns3 = st3`nde_state,
    ns4 = st4`nde_state,
    ds = ps`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF,
    msg = (# mhdr := actmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             act := a 
           #)%,
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     %(ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     % (ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
     % (ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    %(ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     ((ps`p_disp_top)`devs(d) /= no_device) AND
     %(is`mode = d_mode) AND
    % (is`disp_focus = device_focus) AND
     (is`coord_db)(p)`p_devices(d) /= no_device %AND
    % ((is`disp_patient)`current_patient = p) AND
    % (is`disp_device)`current_device = d %AND
    % is`disp_device`av_c_disp(a)
     IMPLIES
      nde(coordinator_enter_action(a, st)`pdb(p)) = nde(st`pdb(p)) AND
      nde(coord_act_mono(coordinator_enter_action
                                       (a, st))`pdb(p)) = 
      nde(coordinator_enter_action(a, st)`pdb(p)) AND
      nde(tick_act_patient(p, coord_act_mono( 
                               coordinator_enter_action
                                       (a, st)))`pdb(p)) =
      nde(coord_act_mono(coordinator_enter_action(a, st))`pdb(p)) AND
      nde(tick_act_device(d, p, tick_act_patient(p, 
         coord_act_mono(
            coordinator_enter_action(a, st))))`pdb(p)) =
         nde(tick_act_patient(p, coord_act_mono( 
                               coordinator_enter_action
                                       (a, st)))`pdb(p)) AND
(coordinator_enter_action(a, st)`pdb(p)`p_disp_top)`devs =
       (st`pdb(p)`p_disp_top)`devs AND
(coord_act_mono(coordinator_enter_action(a, st))`pdb
              (p)`p_disp_top)`devs = (coordinator_enter_action(a, st)`pdb
              (p)`p_disp_top)`devs AND
tick_act_patient(p, (coord_act_mono(coordinator_enter_action(a, st))))`pdb
              (p)`p_disp_top`devs = 
              (coord_act_mono(coordinator_enter_action(a, st))`pdb
              (p)`p_disp_top)`devs AND
tick_act_device(d, p, tick_act_patient(p, 
         coord_act_mono(
            coordinator_enter_action(a, st))))`pdb(p)`p_disp_top`devs =
   tick_act_patient(p, coord_act_mono( 
                               coordinator_enter_action
                                       (a, st)))`pdb(p)`p_disp_top`devs AND
tick_act_device(d, p, tick_act_patient(p, 
         coord_act_mono(
            coordinator_enter_action(a, st))))`nde_state`n_links =
   tick_act_patient(p, coord_act_mono( 
                               coordinator_enter_action
                                       (a, st)))`nde_state`n_links AND
tick_act_patient(p, coord_act_mono(coordinator_enter_action
                                       (a, st)))`nde_state`n_links =
                 coord_act_mono(coordinator_enter_action
                                       (a, st))`nde_state`n_links AND
coord_act_mono(coordinator_enter_action
                                       (a, st))`nde_state`n_links =
                coordinator_enter_action(a, st)`nde_state`n_links AND
coordinator_enter_action(a, st)`nde_state`n_links = st`nde_state`n_links AND
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
nde(coordinator_enter_action(a, st)`pdb(p)`ip_state(d)) = nde(st`pdb(p)`ip_state(d))) AND
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
      nde(coord_act_mono(coordinator_enter_action
                                       (a, st))`pdb(p)`ip_state(d)) = 
      nde(coordinator_enter_action(a, st)`pdb(p)`ip_state(d))) AND
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
      nde(tick_act_patient(p, coord_act_mono( 
                               coordinator_enter_action
                                       (a, st)))`pdb(p)`ip_state(d)) =
      nde(coord_act_mono(coordinator_enter_action(a, st))`pdb(p)`ip_state(d))) AND
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
      nde(tick_act_device(d, p, tick_act_patient(p, 
         coord_act_mono(
            coordinator_enter_action(a, st))))`pdb(p)`ip_state(d)) =
         nde(tick_act_patient(p, coord_act_mono( 
                               coordinator_enter_action
                                       (a, st)))`pdb(p)`ip_state(d))) AND
(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
nde(coordinator_enter_action(a, st)`pdb(p)`vital_signs) = 
                    nde(st`pdb(p)`vital_signs)) AND

(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
      nde(coord_act_mono(coordinator_enter_action
                                       (a, st))`pdb(p)`vital_signs) = 
      nde(coordinator_enter_action(a, st)`pdb(p)`vital_signs)) AND
(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
      nde(tick_act_patient(p, coord_act_mono( 
                               coordinator_enter_action
                                       (a, st)))`pdb(p)`vital_signs) =
      nde(coord_act_mono(coordinator_enter_action(a, st))`pdb(p)`vital_signs)) AND
(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
      nde(tick_act_device(d, p, tick_act_patient(p, 
         coord_act_mono(
            coordinator_enter_action(a, st))))`pdb(p)`vital_signs) =
         nde(tick_act_patient(p, coord_act_mono( 
                               coordinator_enter_action
                                       (a, st)))`pdb(p)`vital_signs))

% (lemma "actcoordiplemma3x" ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
%  (with-labels (flatten -1) ((aplip3dndes1 aplip3dndes2 aplip3dndes3 aplip3dndes4 aplip3ps1 aplip3ps2 aplip3ps3 aplip3pndes1 aplip3pndes2 aplip3pndes3 aplip3pndes4 aplip3mde1 aplip3mde2 aplip3mde3 aplip3mde4 aplip3ds1 aplip3ds2 aplip3ds3 aplip3sd1 aplip3sd2 aplip3sd3 aplip3sd4 aplip3pdev1 aplip3pdev2 aplip3pdev3 aplip3pats1 aplip3pats2 aplip3pats3 aplip3pats4 aplip3emode1 aplip3emode2 aplip3emode3 aplip3emode4 )))

% QED actcoordiplemma3x proved by nmdh4 on Tue, 26 Apr 2022 10:29:54 GMT
% QED actcoordiplemma3x proved by nmdh4 on Mon, 30 May 2022 13:59:58 GMT
% QED actcoordiplemma3x proved by nmdh4 on Wed, 19 Oct 2022 14:05:20 GMT
% QED actcoordiplemma3x proved by nmdh4 on Thu, 12 Jan 2023 15:12:04 GMT
% QED actcoordiplemma3x proved by nmdh4 on Tue, 14 Mar 2023 18:28:38 GMT
% QED actcoordiplemma3x proved by nmdh4 on Wed, 07 Jun 2023 22:34:29 GMT
% @QED actcoordiplemma3x proved by nmdh4 on Thu, 15 Jun 2023 13:43:00 GMT
actcoordiplemma3x: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    st3 = tick_act_patient(p, st2),
    st4 = tick_act_device(d, p, st3), 
    is = st`coord_st,
    ps = st`pdb(p),
    ps1 = st1`pdb(p),
    ps2 = st2`pdb(p),
    ps3 = st3`pdb(p),
    ns = st`nde_state,
    ns2 = st2`nde_state,
    ns3 = st3`nde_state,
    ns4 = st4`nde_state,
    is1 = st1`coord_st,
    is2 = st2`coord_st,
    is3 = st3`coord_st,
    is4 = st4`coord_st,
    ds = ps`ip_state(d),
    ds1 = ps1`ip_state(d),
    ds2 = ps2`ip_state(d),
    ds3 = ps3`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF 
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     %(ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
   %  (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
     %(ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    %(ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     ((ps`p_disp_top)`devs(d) /= no_device) AND
   %  (is`mode = d_mode) AND
   %  (is`disp_focus = device_focus) AND
     (is`coord_db)(p)`p_devices(d) /= no_device %AND
    % ((is`disp_patient)`current_patient = p) AND
   %  (is`disp_device)`current_device = d %AND
    % is`disp_device`av_c_disp(a)
     IMPLIES
     st1`d_nodes = st`d_nodes AND
     st2`d_nodes = st1`d_nodes AND
     st3`d_nodes = st2`d_nodes  AND
     st4`d_nodes = st3`d_nodes AND
     st1`ps = st`ps AND
     st2`ps = st1`ps AND
     st3`ps = st2`ps AND
     st4`ps = st3`ps AND
     st1`p_nodes = st`p_nodes AND
     st2`p_nodes = st1`p_nodes AND
     st3`p_nodes = st2`p_nodes AND
     st4`p_nodes = st3`p_nodes AND
     st1`pdb(p)`pmode = st`pdb(p)`pmode AND
     st2`pdb(p)`pmode = st1`pdb(p)`pmode AND
     st3`pdb(p)`pmode = st2`pdb(p)`pmode AND
     st4`pdb(p)`pmode = st3`pdb(p)`pmode AND
     st1`pdb(p)`ip_state = st`pdb(p)`ip_state AND
     st2`pdb(p)`ip_state = st1`pdb(p)`ip_state AND
     st3`pdb(p)`ip_state = st1`pdb(p)`ip_state AND
     st1`pdb(p)`p_disp_top`sel_device = st`pdb(p)`p_disp_top`sel_device AND
     st2`pdb(p)`p_disp_top`sel_device = st1`pdb(p)`p_disp_top`sel_device AND
     st3`pdb(p)`p_disp_top`sel_device = st2`pdb(p)`p_disp_top`sel_device AND
     st4`pdb(p)`p_disp_top`sel_device = st2`pdb(p)`p_disp_top`sel_device AND
     is1`coord_db(p)`p_devices = is`coord_db(p)`p_devices AND
     is2`coord_db(p)`p_devices = is1`coord_db(p)`p_devices AND
     is3`coord_db(p)`p_devices = is2`coord_db(p)`p_devices AND
     is4`coord_db(p)`p_devices = is3`coord_db(p)`p_devices AND
     is1`disp_top`patients = is`disp_top`patients AND
     is2`disp_top`patients = is1`disp_top`patients AND
     is3`disp_top`patients = is2`disp_top`patients AND
     is4`disp_top`patients = is3`disp_top`patients AND
     st1`pdb(p)`emode = st`pdb(p)`emode AND
     st2`pdb(p)`emode = st1`pdb(p)`emode AND
     st3`pdb(p)`emode = st2`pdb(p)`emode AND
     st4`pdb(p)`emode = st3`pdb(p)`emode


% (lemma "actcoordiplemma3y" ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
%  (with-labels (flatten -1) (ac3ymode1 ac3ymode2 ac3ymode3 ac3ymode4 ac3ydf1 ac3ydf2 ac3ydf3 ac3ydf4 ac3ycp1 ac3ycp2 ac3ycp3 ac3ycp4 ac3ycd1 ac3ycd2 ac3ycd3 ac3ycd4))
% QED actcoordiplemma3y proved by nmdh4 on Tue, 11 Jan 2022 11:37:44 GMT
% QED actcoordiplemma3y proved by nmdh4 on Tue, 26 Apr 2022 10:59:10 GMT
% QED actcoordiplemma3y proved by nmdh4 on Tue, 26 Apr 2022 18:44:40 GMT
% QED actcoordiplemma3y proved by nmdh4 on Mon, 30 May 2022 15:32:04 GMT
% QED actcoordiplemma3y proved by nmdh4 on Wed, 19 Oct 2022 21:24:03 GMT
% QED actcoordiplemma3y proved by nmdh4 on Thu, 12 Jan 2023 17:33:59 GMT
% QED actcoordiplemma3y proved by nmdh4 on Tue, 14 Mar 2023 20:11:09 GMT
% QED actcoordiplemma3y proved by nmdh4 on Thu, 08 Jun 2023 16:27:17 GMT
% @QED actcoordiplemma3y proved by nmdh4 on Thu, 15 Jun 2023 14:53:01 GMT
actcoordiplemma3y: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    st3 = tick_act_patient(p, st2),
    st4 = tick_act_device(d, p, st3), 
    is = st`coord_st,
    ps = st`pdb(p),
    ps1 = st1`pdb(p),
    ps2 = st2`pdb(p),
    ps3 = st3`pdb(p),
    ns = st`nde_state,
    ns2 = st2`nde_state,
    ns3 = st3`nde_state,
    ns4 = st4`nde_state,
    is1 = st1`coord_st,
    is2 = st2`coord_st,
    is3 = st3`coord_st,
    is4 = st4`coord_st,
    ds = ps`ip_state(d),
    ds1 = ps1`ip_state(d),
    ds2 = ps2`ip_state(d),
    ds3 = ps3`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF 
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     %(ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
   %  (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     % (ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
     % (ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    % (ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
    % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
    % (is`mode = d_mode) AND
    % (is`disp_focus = device_focus) AND
     (is`coord_db)(p)`p_devices(d) /= no_device %AND
    % ((is`disp_patient)`current_patient = p) AND
    % (is`disp_device)`current_device = d %AND
     %is`disp_device`av_c_disp(a)
     IMPLIES
     is1`mode = is`mode AND
     is2`mode = is1`mode AND
     is3`mode = is2`mode AND
     is4`mode = is3`mode AND
     is1`disp_focus = is`disp_focus AND
     is2`disp_focus = is1`disp_focus AND
     is3`disp_focus = is2`disp_focus AND
     is4`disp_focus = is3`disp_focus AND
     is1`disp_patient`current_patient = is`disp_patient`current_patient AND
     is2`disp_patient`current_patient = is1`disp_patient`current_patient AND
     is3`disp_patient`current_patient = is2`disp_patient`current_patient AND
     is4`disp_patient`current_patient = is3`disp_patient`current_patient AND
     is1`disp_device`current_device = is`disp_device`current_device AND
     is2`disp_device`current_device = is1`disp_device`current_device AND
     is3`disp_device`current_device = is2`disp_device`current_device AND
     is4`disp_device`current_device = is3`disp_device`current_device AND
     is1`disp_top`patients = is`disp_top`patients AND
     is2`disp_top`patients = is1`disp_top`patients AND
     is3`disp_top`patients = is2`disp_top`patients AND
     is4`disp_top`patients = is3`disp_top`patients 

% QED actlemma2ipenter_coord proved by nmdh4 on Tue, 03 May 2022 13:35:12 GMT
% QED actlemma2ipenter_coord proved by nmdh4 on Fri, 06 May 2022 11:59:42 GMT
% QED actlemma2ipenter_coord proved by nmdh4 on Mon, 30 May 2022 15:36:41 GMT
% QED actlemma2ipenter_coord proved by nmdh4 on Wed, 15 Jun 2022 11:34:05 GMT
% QED actlemma2ipenter_coord proved by nmdh4 on Tue, 18 Oct 2022 11:35:54 GMT
% QED actlemma2ipenter_coord proved by nmdh4 on Thu, 12 Jan 2023 17:39:07 GMT
% QED actlemma2ipenter_coord proved by nmdh4 on Wed, 15 Mar 2023 08:44:36 GMT
% QED actlemma2ipenter_coord proved by nmdh4 on Fri, 09 Jun 2023 08:25:47 GMT
% QED actlemma2ipenter_coord proved by nmdh4 on Wed, 14 Jun 2023 08:43:20 GMT
% @QED actlemma2ipenter_coord proved by nmdh4 on Wed, 14 Jun 2023 09:41:07 GMT
actlemma2ipenter_coord: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET %ns1 = tick_act_patient(p, tick_act_coordinator(coord_act_mono(st)))`nde_state,
    %ns2 = tick_act_patient(p, patient_act_mono(p, st))`nde_state,
    is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    %ins1 = coord_act_mono(st)`nde_state,
    %ins2 = patient_act_mono(p, st)`nde_state,
   % ds = ps`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF,
    msg = (# mhdr := actmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             act := a 
           #)
    IN
 % channel assumptions
    ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     ((ns`act_msg_waiting(pnde))`buf_status /= full) AND
     %((ns`act_msg_waiting(dnde))`buf_status /= full)
    % patient known to the system
     (p /= p_null) AND 
     st`ps(p) AND 
     (d /= nil_device) AND
     (a /= nil_action) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     %(ps`p_disp_top)`devs(d) = infusion_pump) AND
     %(ps`emode = edit_none) AND
     %(((ps`pmode = d_mode) AND ps`p_disp_device`cmds(a)) OR 
     %((ps`pmode = p_mode) AND (ps`p_disp_main`p_actions(d))(a))) AND
    % ((ps`p_entry_window)`ent_act = a)  AND
    %(((ps`p_disp_top)`sel_device)`dv = d) AND 
   %(((ps`p_disp_top)`sel_device)`dt = infusion_pump) AND 
    %((is`entry_window)`ent_action = a) AND
    (is`mode = d_mode) AND
   (is`disp_focus = device_focus) AND
   ((is`disp_top)`patients)(p) AND 
   ((((is`coord_db)(p)`p_devices(d) = infusion_pump) AND
     ((ps`p_disp_top)`devs(d) = infusion_pump)) OR
    (((is`coord_db)(p)`p_devices(d) = vital_signs_device) AND
      (ps`p_disp_top)`devs(d) = vital_signs_device)) AND
   ((is`disp_patient)`current_patient = p) AND
   (is`disp_device)`current_device = d AND
 %   is`disp_device`av_c_disp(a) AND
   (nde_state(coord_act_mono(coordinator_enter_action(a, st)))`act_msg_waiting(pnde)`current_pos =
          ns`act_msg_waiting(pnde)`last_pos) AND
%(ns`act_msg_waiting(pnde)`last_pos < mindex) AND
(ns`act_msg_waiting(pnde)`buf_status /= full) AND
(nde_state(coord_act_mono(coordinator_enter_action(a, st)))`act_msg_waiting(pnde)`current_pos =
          ns`act_msg_waiting(pnde)`last_pos) AND
%(nde_state(coord_act_mono(coordinator_enter_action(a, st)))`act_msg_waiting(pnde)`last_pos < mindex) AND
(nde_state(coord_act_mono(coordinator_enter_action(a, st)))`act_msg_waiting(pnde)`buf_status /= full) AND
%(nde_state(coord_act_mono(coordinator_enter_action(a, st)))`act_msg_waiting(dnde)`last_pos < mindex) AND
(nde_state(coord_act_mono(coordinator_enter_action(a, st)))`act_msg_waiting(dnde)`buf_status /= full) AND
%(nde_state(tick_act_patient(p, coord_act_mono(coordinator_enter_action(a, st))))`act_msg_waiting(dnde)`last_pos < mindex) AND
(nde_state(tick_act_patient(p, coord_act_mono(coordinator_enter_action(a, st))))`act_msg_waiting(dnde)`buf_status /= full) AND
(nde_state(tick_act_patient(p, coord_act_mono(coordinator_enter_action(a, st))))`act_msg_waiting(dnde)`current_pos =
(nde_state(coord_act_mono(coordinator_enter_action(a, st)))`act_msg_waiting(dnde)`last_pos)) 
IMPLIES
(st`coord_st`disp_device`av_c_disp(a) %AND 
%c_d_per_action(a, is) 
IMPLIES 
 (next_act_pm(dnde,
   nde_state(tick_act_patient(p, coord_act_mono(
         coordinator_enter_action(a, st)))))`current_act_msg = msg))%) 
   AND
%(nde(tick_act_patient(p, 
%     coord_act_mono(coordinator_enter_action(a, st)))`pdb(p)`ip_state(d)) = 
%            dnde) AND
%(tick_act_patient(p, coord_act_mono(
%      coordinator_enter_action(a, st)))`pdb(p)`p_disp_top`devs = 
%          st`pdb(p)`p_disp_top`devs) AND
%((c_d_per_action(a, is) AND 
((ps`p_disp_top)`devs(d) = infusion_pump IMPLIES 
  (tick_act_patient(p, coord_act_mono(
      coordinator_enter_action(a, st)))`pdb(p)`ip_state(d) = 
         st`pdb(p)`ip_state(d))) AND
%((c_d_per_action(a, is) AND 
((ps`p_disp_top)`devs(d) = vital_signs_device 
    IMPLIES (tick_act_patient(p, coord_act_mono(
      coordinator_enter_action(a, st)))`pdb(p)`vital_signs = 
         st`pdb(p)`vital_signs)) %)     

  

% @QED actlemma2ipenter_coordx proved by nmdh4 on Wed, 14 Jun 2023 10:42:08 GMT
actlemma2ipenter_coordx: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET %ns1 = tick_act_patient(p, tick_act_coordinator(coord_act_mono(st)))`nde_state,
    %ns2 = tick_act_patient(p, patient_act_mono(p, st))`nde_state,
    is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    %ins1 = coord_act_mono(st)`nde_state,
    %ins2 = patient_act_mono(p, st)`nde_state,
   % ds = ps`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF,
    msg = (# mhdr := actmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             act := a 
           #)
    IN
 % channel assumptions
    ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     ((ns`act_msg_waiting(pnde))`buf_status /= full) AND
     %((ns`act_msg_waiting(dnde))`buf_status /= full)
    % patient known to the system
     (p /= p_null) AND 
     st`ps(p) AND 
     (d /= nil_device) AND
     (a /= nil_action) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     %(ps`p_disp_top)`devs(d) = infusion_pump) AND
     %(ps`emode = edit_none) AND
     %(((ps`pmode = d_mode) AND ps`p_disp_device`cmds(a)) OR 
     %((ps`pmode = p_mode) AND (ps`p_disp_main`p_actions(d))(a))) AND
    % ((ps`p_entry_window)`ent_act = a)  AND
    %(((ps`p_disp_top)`sel_device)`dv = d) AND 
   %(((ps`p_disp_top)`sel_device)`dt = infusion_pump) AND 
    %((is`entry_window)`ent_action = a) AND
   % (is`mode = d_mode) AND
  % (is`disp_focus = device_focus) AND
   ((is`disp_top)`patients)(p) AND 
   ((((is`coord_db)(p)`p_devices(d) = infusion_pump) AND
     ((ps`p_disp_top)`devs(d) = infusion_pump)) OR
    (((is`coord_db)(p)`p_devices(d) = vital_signs_device) AND
      (ps`p_disp_top)`devs(d) = vital_signs_device)) AND
  % ((is`disp_patient)`current_patient = p) AND
  % (is`disp_device)`current_device = d AND
 %   is`disp_device`av_c_disp(a) AND
   (nde_state(coord_act_mono(coordinator_enter_action(a, st)))`act_msg_waiting(pnde)`current_pos =
          ns`act_msg_waiting(pnde)`last_pos) AND
%(ns`act_msg_waiting(pnde)`last_pos < mindex) AND
(ns`act_msg_waiting(pnde)`buf_status /= full) AND
(nde_state(coord_act_mono(coordinator_enter_action(a, st)))`act_msg_waiting(pnde)`current_pos =
          ns`act_msg_waiting(pnde)`last_pos) AND
%(nde_state(coord_act_mono(coordinator_enter_action(a, st)))`act_msg_waiting(pnde)`last_pos < mindex) AND
(nde_state(coord_act_mono(coordinator_enter_action(a, st)))`act_msg_waiting(pnde)`buf_status /= full) AND
%(nde_state(coord_act_mono(coordinator_enter_action(a, st)))`act_msg_waiting(dnde)`last_pos < mindex) AND
(nde_state(coord_act_mono(coordinator_enter_action(a, st)))`act_msg_waiting(dnde)`buf_status /= full) AND
%(nde_state(tick_act_patient(p, coord_act_mono(coordinator_enter_action(a, st))))`act_msg_waiting(dnde)`last_pos < mindex) AND
(nde_state(tick_act_patient(p, coord_act_mono(coordinator_enter_action(a, st))))`act_msg_waiting(dnde)`buf_status /= full) AND
(nde_state(tick_act_patient(p, coord_act_mono(coordinator_enter_action(a, st))))`act_msg_waiting(dnde)`current_pos =
(nde_state(coord_act_mono(coordinator_enter_action(a, st)))`act_msg_waiting(dnde)`last_pos)) 
IMPLIES
(c_d_per_actionx(a, d, p, is) 
IMPLIES 
 (next_act_pm(dnde,
   nde_state(tick_act_patient(p, coord_act_mono(
         coordinator_enter_action(a, st)))))`current_act_msg = msg)) AND
(c_p_per_actionx(a, d, p, is) IMPLIES
   (next_act_pm(dnde,
   nde_state(tick_act_patient(p, coord_act_mono(
         coordinator_enter_action(a, st)))))`current_act_msg = msg)) AND

((ps`p_disp_top)`devs(d) = infusion_pump IMPLIES 
  (tick_act_patient(p, coord_act_mono(
      coordinator_enter_action(a, st)))`pdb(p)`ip_state(d) = 
         st`pdb(p)`ip_state(d))) AND
%((c_d_per_action(a, is) AND 
((ps`p_disp_top)`devs(d) = vital_signs_device 
    IMPLIES (tick_act_patient(p, coord_act_mono(
      coordinator_enter_action(a, st)))`pdb(p)`vital_signs = 
         st`pdb(p)`vital_signs)) %)     

% QED lemma_fun_act_p proved by nmdh4 on Mon, 25 Apr 2022 13:19:02 GMT
% QED lemma_fun_act_p proved by nmdh4 on Fri, 29 Apr 2022 09:22:06 GMT
% QED lemma_fun_act_p proved by nmdh4 on Wed, 13 Jul 2022 09:58:07 GMT
% QED lemma_fun_act_p proved by nmdh4 on Mon, 24 Oct 2022 13:34:06 GMT
% QED lemma_fun_act_p proved by nmdh4 on Thu, 12 Jan 2023 17:47:14 GMT
% @QED lemma_fun_act_p proved by nmdh4 on Wed, 15 Mar 2023 08:55:31 GMT
lemma_fun_act_p: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF %,
   
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     (ns`act_msg_waiting(dnde)`buf_status /= full) AND
    % (ns`act_msg_waiting(dnde)`last_pos < mindex) AND
     % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     ((ps`p_disp_top)`devs(d) /= no_device) %AND
    % ((ps`p_disp_top)`sel_device) = (# dv := d, dt := infusion_pump #)
     IMPLIES
p_fun_act(a, d, p, st)`p_nodes = st`p_nodes AND
p_fun_act(a, d, p, st)`d_nodes = st`d_nodes AND
p_fun_act(a, d, p, st)`coord_st = st`coord_st AND
nde(p_fun_act(a, d, p, st)`pdb(p)) = nde(ps) AND
%p_fun_act(a, d, p, st)`pdb(p)`nde = ps`nde AND
p_fun_act(a, d, p, st)`pdb(p)`pmode = ps`pmode AND
p_fun_act(a, d, p, st)`pdb(p)`p_disp_top`sel_device = 
     ps`p_disp_top`sel_device AND
p_fun_act(a, d, p, st)`pdb(p)`emode = ps`emode AND
p_fun_act(a, d, p, st)`nde_state`n_links = ns`n_links AND
p_fun_act(a, d, p, st)`ps = st`ps AND
p_fun_act(a, d, p, st)`pdb(p)`p_disp_top`devs = ps`p_disp_top`devs AND
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
   (nde(p_fun_act(a, d, p, st)`pdb(p)`ip_state(d)) = nde(ds))) AND
(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
   (nde(p_fun_act(a, d, p, st)`pdb(p)`vital_signs) = nde(st`pdb(p)`vital_signs))) 

% QED p_to_act_ip proved by nmdh4 on Thu, 14 Jul 2022 10:14:20 GMT
% QED p_to_act_ip proved by nmdh4 on Mon, 24 Oct 2022 13:41:27 GMT
% QED p_to_act_ip proved by nmdh4 on Tue, 13 Dec 2022 17:33:24 GMT
% QED p_to_act_ip proved by nmdh4 on Thu, 12 Jan 2023 17:56:30 GMT
% @QED p_to_act_ip proved by nmdh4 on Wed, 15 Mar 2023 08:57:04 GMT
p_to_act_ip: LEMMA
  FORALL (a: action_id, d: device, p: patient, st: state):
  LET st1 = patient_enter_action(a, p, st),
      st2 = patient_act_mono(p, st1),
      st3 = tick_act_device(d, p, st2),
      ns = st`nde_state,
      ps = st`pdb(p),
      ds = ps`ip_state(d),
      ns2 = st2`nde_state,
      pnde = ps`nde,
      dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF  
           IN
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     (ns`act_msg_waiting(dnde)`buf_status /= full) AND
    % (ns`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(dnde)`current_pos
      = ns`act_msg_waiting(dnde)`last_pos) AND
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND % (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     % ((ps`ip_state(d))`m /= off) AND 
     (ps`emode = edit_none) AND
    % ((ps`p_entry_window)`ent_act = a) AND
     (((ps`pmode = d_mode) AND ps`p_disp_device`cmds(a)) OR 
     ((ps`pmode = p_mode) AND (ps`p_disp_main`p_actions(d))(a))) AND
     ps`p_disp_top`sel_device`dv = d AND
     (( (ps`p_disp_top)`devs(d) = infusion_pump)
      % (ps`p_disp_top`sel_device = (# dv := d, dt := infusion_pump #))) %AND
      % (ds`m /= off)) 
      OR
       ((ps`p_disp_top)`devs(d) = vital_signs_device))
       %(ps`p_disp_top`sel_device = (# dv := d, dt := vital_signs_device #)))) %AND
      % ps`vital_signs`power)) 
     IMPLIES
     (( (ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
          p_fun_act(a, d, p, st)`pdb(p)`ip_state(d) =
           execute_ip(a, st`pdb(p)`ip_state(d))) AND
      (( (ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES
          p_fun_act(a, d, p, st)`pdb(p)`vital_signs =
           execute_vs(a, st`pdb(p)`vital_signs))

% QED p_to_act_ip_coord proved by nmdh4 on Tue, 03 May 2022 15:44:23 GMT
% QED p_to_act_ip_coord proved by nmdh4 on Fri, 06 May 2022 13:48:58 GMT
% QED p_to_act_ip_coord proved by nmdh4 on Mon, 30 May 2022 18:05:43 GMT
% QED p_to_act_ip_coord proved by nmdh4 on Wed, 15 Jun 2022 13:27:28 GMT
% QED p_to_act_ip_coord proved by nmdh4 on Tue, 18 Oct 2022 14:12:10 GMT
% QED p_to_act_ip_coord proved by nmdh4 on Thu, 12 Jan 2023 18:07:07 GMT
% @QED p_to_act_ip_coord proved by nmdh4 on Wed, 15 Mar 2023 08:58:43 GMT
p_to_act_ip_coord: LEMMA
  FORALL (a: action_id, d: device, p: patient, st: state):
  LET st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    st3 = tick_act_patient(p, st2),
    st4 = tick_act_device(d, p, st3),
      ns = st`nde_state,
      ps = st`pdb(p),
      is = st`coord_st,
      ds = ps`ip_state(d),
      ns2 = st2`nde_state,
      ns3 = st3`nde_state,
      ns4 = st4`nde_state,
      pnde = ps`nde,
      dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF
           IN
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
    % (ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
    % (ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
   % (ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND %(a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     %((ps`ip_state(d))`m /= off) AND 
     (is`mode = d_mode) AND
     (is`disp_focus = device_focus) AND
     ((is`disp_top)`patients)(p) AND 
     ((is`disp_patient)`current_patient = p) AND
     (is`disp_device)`current_device = d AND
    % is`disp_device`av_c_disp(a) AND
     ((((is`coord_db)(p)`p_devices(d) = infusion_pump) AND
     ((ps`p_disp_top)`devs(d) = infusion_pump)) OR
    (((is`coord_db)(p)`p_devices(d) = vital_signs_device) AND
      (ps`p_disp_top)`devs(d) = vital_signs_device))
    % relate_ip_to_pan(ds)
     IMPLIES
     ((is`disp_device`av_c_disp(a) AND 
     (ps`p_disp_top)`devs(d) = infusion_pump)
        IMPLIES c_fun_act(a, d, p, st)`pdb(p)`ip_state(d) =
           execute_ip(a, st`pdb(p)`ip_state(d))) AND
      ((is`disp_device`av_c_disp(a) AND 
      (ps`p_disp_top)`devs(d) = vital_signs_device)
          IMPLIES c_fun_act(a, d, p, st)`pdb(p)`vital_signs =
           execute_vs(a, st`pdb(p)`vital_signs))

% @QED p_to_act_ip_coordx proved by nmdh4 on Fri, 16 Jun 2023 11:57:39 GMT
p_to_act_ip_coordx: LEMMA
  FORALL (a: action_id, d: device, p: patient, st: state):
  LET st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    st3 = tick_act_patient(p, st2),
    st4 = tick_act_device(d, p, st3),
      ns = st`nde_state,
      ps = st`pdb(p),
      is = st`coord_st,
      ds = ps`ip_state(d),
      ns2 = st2`nde_state,
      ns3 = st3`nde_state,
      ns4 = st4`nde_state,
      pnde = ps`nde,
      dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF
           IN
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
    % (ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
    % (ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
   % (ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND %(a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     %((ps`ip_state(d))`m /= off) AND 
    % (is`mode = d_mode) AND
    % (is`disp_focus = device_focus) AND
     ((is`disp_top)`patients)(p) AND 
    % ((is`disp_patient)`current_patient = p) AND
    % (is`disp_device)`current_device = d AND
    % is`disp_device`av_c_disp(a) AND
     ((((is`coord_db)(p)`p_devices(d) = infusion_pump) AND
     ((ps`p_disp_top)`devs(d) = infusion_pump)) OR
    (((is`coord_db)(p)`p_devices(d) = vital_signs_device) AND
      (ps`p_disp_top)`devs(d) = vital_signs_device))
    % relate_ip_to_pan(ds)
     IMPLIES
     ((c_d_per_actionx(a, d, p, is)
        AND (ps`p_disp_top)`devs(d) = infusion_pump)
        IMPLIES c_fun_act(a, d, p, st)`pdb(p)`ip_state(d) =
           execute_ip(a, st`pdb(p)`ip_state(d))) AND
      ((c_p_per_actionx(a, d, p, is) AND
      (ps`p_disp_top)`devs(d) = infusion_pump)
      IMPLIES c_fun_act(a, d, p, st)`pdb(p)`ip_state(d) =
           execute_ip(a, st`pdb(p)`ip_state(d))) AND
      ((c_d_per_actionx(a, d, p, is)
        AND (ps`p_disp_top)`devs(d) = vital_signs_device)
        IMPLIES c_fun_act(a, d, p, st)`pdb(p)`vital_signs =
           execute_vs(a, st`pdb(p)`vital_signs)) AND
      ((c_p_per_actionx(a, d, p, is) AND
      (ps`p_disp_top)`devs(d) = vital_signs_device)
      IMPLIES c_fun_act(a, d, p, st)`pdb(p)`vital_signs =
           execute_vs(a, st`pdb(p)`vital_signs))
     


% QED lemma_fun_act_cp proved by nmdh4 on Fri, 06 May 2022 14:47:40 GMT
% QED lemma_fun_act_cp proved by nmdh4 on Wed, 01 Jun 2022 14:08:51 GMT
% QED lemma_fun_act_cp proved by nmdh4 on Wed, 01 Jun 2022 16:19:21 GMT
% QED lemma_fun_act_cp proved by nmdh4 on Thu, 02 Jun 2022 10:41:45 GMT
% QED lemma_fun_act_cp proved by nmdh4 on Thu, 20 Oct 2022 08:23:44 GMT
% QED lemma_fun_act_cp proved by nmdh4 on Fri, 13 Jan 2023 10:30:01 GMT
% QED lemma_fun_act_cp proved by nmdh4 on Wed, 15 Mar 2023 09:09:22 GMT
% @QED lemma_fun_act_cp proved by nmdh4 on Fri, 09 Jun 2023 13:01:59 GMT
lemma_fun_act_cp: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    st3 = tick_act_patient(p, st2),
    st4 = tick_act_device(d, p, st3), 
    is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    ns2 = st2`nde_state,
    ns3 = st3`nde_state,
    ns4 = st4`nde_state,
    ds = ps`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF %,
   
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     %(ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
     %(ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    %(ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     %((ps`p_disp_top)`devs(d) /= no_device) AND
   % (is`mode = d_mode) AND
    % (is`disp_focus = device_focus) AND
     % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
     % (is`mode = d_mode) AND
     ((((is`coord_db)(p)`p_devices(d) = infusion_pump) AND
     ((ps`p_disp_top)`devs(d) = infusion_pump)) OR
    (((is`coord_db)(p)`p_devices(d) = vital_signs_device) AND
      (ps`p_disp_top)`devs(d) = vital_signs_device)) AND
    % (is`disp_focus = device_focus) AND
     ((is`disp_patient)`current_patient = p) AND
     (is`disp_device)`current_device = d AND
     is`disp_device`av_c_disp(a) AND
     is`disp_top`patients(p)
    % ((ps`p_disp_top)`sel_device) = (# dv := d, dt := infusion_pump #)
IMPLIES
c_fun_act(a, d, p, st)`p_nodes = st`p_nodes AND
c_fun_act(a, d, p, st)`d_nodes = st`d_nodes AND
nde(c_fun_act(a, d, p, st)`pdb(p)) = nde(ps) AND
%p_fun_act(a, d, p, st)`pdb(p)`nde = ps`nde AND
c_fun_act(a, d, p, st)`pdb(p)`pmode = ps`pmode AND
c_fun_act(a, d, p, st)`pdb(p)`p_disp_top`sel_device = 
     ps`p_disp_top`sel_device AND
c_fun_act(a, d, p, st)`pdb(p)`emode = ps`emode AND
c_fun_act(a, d, p, st)`nde_state`n_links = ns`n_links AND
c_fun_act(a, d, p, st)`ps = st`ps AND
c_fun_act(a, d, p, st)`pdb(p)`p_disp_top`devs = ps`p_disp_top`devs AND
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
   (nde(c_fun_act(a, d, p, st)`pdb(p)`ip_state(d)) = nde(ds))) AND
(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
   (nde(c_fun_act(a, d, p, st)`pdb(p)`vital_signs) = nde(st`pdb(p)`vital_signs))) AND
c_fun_act(a, d, p, st)`coord_st`coord_db(p)`p_devices = is`coord_db(p)`p_devices AND 
c_fun_act(a, d, p, st)`coord_st`disp_top`patients = is`disp_top`patients AND
c_fun_act(a, d, p, st)`coord_st`mode = is`mode AND
c_fun_act(a, d, p, st)`coord_st`disp_focus = is`disp_focus AND
c_fun_act(a, d, p, st)`coord_st`disp_patient`current_patient = is`disp_patient`current_patient AND
c_fun_act(a, d, p, st)`coord_st`disp_device`current_device = is`disp_device`current_device AND

c_fun_act(a, d, p, st)`coord_st`coord_db = is`coord_db %AND
%((ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
%   IMPLIES c_fun_act(a, d, p, st)`pdb(p)`ip_state(d)`m /= off) AND
%((ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
%   IMPLIES c_fun_act(a, d, p, st)`pdb(p)`vital_signs`power) 

% @QED lemma_fun_act_cpx proved by nmdh4 on Tue, 20 Jun 2023 13:15:17 GMT
lemma_fun_act_cpx: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    st3 = tick_act_patient(p, st2),
    st4 = tick_act_device(d, p, st3), 
    is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    ns2 = st2`nde_state,
    ns3 = st3`nde_state,
    ns4 = st4`nde_state,
    ds = ps`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF %,
   
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     %(ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
     %(ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    %(ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     %((ps`p_disp_top)`devs(d) /= no_device) AND
    % (is`mode = d_mode) AND
   %  (is`disp_focus = device_focus) AND
     % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
     % (is`mode = d_mode) AND
     ((((is`coord_db)(p)`p_devices(d) = infusion_pump) AND
     ((ps`p_disp_top)`devs(d) = infusion_pump)) OR
    (((is`coord_db)(p)`p_devices(d) = vital_signs_device) AND
      (ps`p_disp_top)`devs(d) = vital_signs_device)) AND
    % (is`disp_focus = device_focus) AND
   %  ((is`disp_patient)`current_patient = p) AND
   %  (is`disp_device)`current_device = d AND
   %  is`disp_device`av_c_disp(a) AND
     is`disp_top`patients(p)
    % ((ps`p_disp_top)`sel_device) = (# dv := d, dt := infusion_pump #)
IMPLIES
c_fun_act(a, d, p, st)`p_nodes = st`p_nodes AND
c_fun_act(a, d, p, st)`d_nodes = st`d_nodes AND
nde(c_fun_act(a, d, p, st)`pdb(p)) = nde(ps) AND
%p_fun_act(a, d, p, st)`pdb(p)`nde = ps`nde AND
c_fun_act(a, d, p, st)`pdb(p)`pmode = ps`pmode AND
c_fun_act(a, d, p, st)`pdb(p)`p_disp_top`sel_device = 
     ps`p_disp_top`sel_device AND
c_fun_act(a, d, p, st)`pdb(p)`emode = ps`emode AND
c_fun_act(a, d, p, st)`nde_state`n_links = ns`n_links AND
c_fun_act(a, d, p, st)`ps = st`ps AND
c_fun_act(a, d, p, st)`pdb(p)`p_disp_top`devs = ps`p_disp_top`devs AND
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
   (nde(c_fun_act(a, d, p, st)`pdb(p)`ip_state(d)) = nde(ds))) AND
(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
   (nde(c_fun_act(a, d, p, st)`pdb(p)`vital_signs) = nde(st`pdb(p)`vital_signs))) AND
c_fun_act(a, d, p, st)`coord_st`coord_db(p)`p_devices = is`coord_db(p)`p_devices AND 
c_fun_act(a, d, p, st)`coord_st`disp_top`patients = is`disp_top`patients AND
c_fun_act(a, d, p, st)`coord_st`mode = is`mode AND
c_fun_act(a, d, p, st)`coord_st`disp_focus = is`disp_focus AND
c_fun_act(a, d, p, st)`coord_st`disp_patient`current_patient = is`disp_patient`current_patient AND
c_fun_act(a, d, p, st)`coord_st`disp_device`current_device = is`disp_device`current_device AND

c_fun_act(a, d, p, st)`coord_st`coord_db = is`coord_db 

% QED lemma_fun_act_cpdisp proved by nmdh4 on Tue, 23 May 2023 13:35:45 GMT
% QED lemma_fun_act_cpdisp proved by nmdh4 on Thu, 25 May 2023 09:47:15 GMT
% QED lemma_fun_act_cpdisp proved by nmdh4 on Mon, 12 Jun 2023 14:18:37 GMT
% @QED lemma_fun_act_cpdisp proved by nmdh4 on Mon, 12 Jun 2023 15:32:17 GMT
lemma_fun_act_cpdisp: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    st3 = tick_act_patient(p, st2),
    st4 = tick_act_device(d, p, st3), 
    is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    ns2 = st2`nde_state,
    ns3 = st3`nde_state,
    ns4 = st4`nde_state,
    ds = ps`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF %,
   
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     %(ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
     %(ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    %(ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     %((ps`p_disp_top)`devs(d) /= no_device) AND
   %  (is`mode = d_mode) AND
    (is`disp_focus = device_focus) AND
     % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
      (is`mode = d_mode) AND
     ((((is`coord_db)(p)`p_devices(d) = infusion_pump) AND
     ((ps`p_disp_top)`devs(d) = infusion_pump)) OR
    (((is`coord_db)(p)`p_devices(d) = vital_signs_device) AND
      (ps`p_disp_top)`devs(d) = vital_signs_device)) AND
    % (is`disp_focus = device_focus) AND
     ((is`disp_patient)`current_patient = p) AND
     (is`disp_device)`current_device = d AND
     is`disp_device`av_c_disp(a) AND
     is`disp_top`patients(p)
    % ((ps`p_disp_top)`sel_device) = (# dv := d, dt := infusion_pump #)
IMPLIES
c_fun_act(a, d, p, st)`pdb(p)`p_disp_main = st`pdb(p)`p_disp_main AND
c_fun_act(a, d, p, st)`pdb(p)`filter_device_panels = st`pdb(p)`filter_device_panels

% QED lemma_fun_act_cpdispx proved by nmdh4 on Mon, 19 Jun 2023 09:56:47 GMT
% QED lemma_fun_act_cpdispx proved by nmdh4 on Tue, 04 Jul 2023 13:10:18 GMT
% @QED lemma_fun_act_cpdispx proved by nmdh4 on Fri, 07 Jul 2023 16:49:26 GMT
lemma_fun_act_cpdispx: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    st3 = tick_act_patient(p, st2),
    st4 = tick_act_device(d, p, st3), 
    is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    ns2 = st2`nde_state,
    ns3 = st3`nde_state,
    ns4 = st4`nde_state,
    ds = ps`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF %,
   
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     %(ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
     %(ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    %(ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     %((ps`p_disp_top)`devs(d) /= no_device) AND
   %  (is`mode = d_mode) AND
   % (is`disp_focus = device_focus) AND
     % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
    %  (is`mode = d_mode) AND
     ((((is`coord_db)(p)`p_devices(d) = infusion_pump) AND
     ((ps`p_disp_top)`devs(d) = infusion_pump)) OR
    (((is`coord_db)(p)`p_devices(d) = vital_signs_device) AND
      (ps`p_disp_top)`devs(d) = vital_signs_device)) AND
    % (is`disp_focus = device_focus) AND
    % ((is`disp_patient)`current_patient = p) AND
    % (is`disp_device)`current_device = d AND
    % is`disp_device`av_c_disp(a) AND
     is`disp_top`patients(p)
    % ((ps`p_disp_top)`sel_device) = (# dv := d, dt := infusion_pump #)
IMPLIES
c_fun_act(a, d, p, st)`pdb(p)`p_disp_main = st`pdb(p)`p_disp_main AND
c_fun_act(a, d, p, st)`pdb(p)`filter_device_panels = st`pdb(p)`filter_device_panels AND
c_fun_act(a, d, p, st)`coord_st`coord_db = st`coord_st`coord_db


% @QED lemma_fun_act_cpdispy proved by nmdh4 on Mon, 10 Jul 2023 09:24:03 GMT
lemma_fun_act_cpdispy: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    st3 = tick_act_patient(p, st2),
    st4 = tick_act_device(d, p, st3), 
    is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    ns2 = st2`nde_state,
    ns3 = st3`nde_state,
    ns4 = st4`nde_state,
    ds = ps`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF %,
   
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     %(ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
     %(ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    %(ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     %((ps`p_disp_top)`devs(d) /= no_device) AND
   %  (is`mode = d_mode) AND
   % (is`disp_focus = device_focus) AND
     % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
    %  (is`mode = d_mode) AND
     ((((is`coord_db)(p)`p_devices(d) = infusion_pump) AND
     ((ps`p_disp_top)`devs(d) = infusion_pump)) OR
    (((is`coord_db)(p)`p_devices(d) = vital_signs_device) AND
      (ps`p_disp_top)`devs(d) = vital_signs_device)) AND
    % (is`disp_focus = device_focus) AND
    % ((is`disp_patient)`current_patient = p) AND
    % (is`disp_device)`current_device = d AND
    % is`disp_device`av_c_disp(a) AND
     is`disp_top`patients(p)
    % ((ps`p_disp_top)`sel_device) = (# dv := d, dt := infusion_pump #)
IMPLIES
c_fun_act(a, d, p, st)`pdb(p)`pmode = st`pdb(p)`pmode AND
tick_pan_device(d, p, c_fun_act(a, d, p, st))`pdb(p)`pmode = st`pdb(p)`pmode AND
tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`pdb(p)`pmode = 
st`pdb(p)`pmode AND
(tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))))`pdb(p)`pmode = 
              st`pdb(p)`pmode  AND
 c_fun_act(a, d, p, st)`pdb(p)`p_disp_top`sel_device = st`pdb(p)`p_disp_top`sel_device  AND
tick_pan_device(d, p, c_fun_act(a, d, p, st))`pdb(p)`p_disp_top`sel_device  = st`pdb(p)`p_disp_top`sel_device  AND
tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`pdb(p)`p_disp_top`sel_device  = 
st`pdb(p)`p_disp_top`sel_device  AND
(tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))))`pdb(p)`p_disp_top`sel_device  = 
             st`pdb(p)`p_disp_top`sel_device  

 % @QED lemma_fun_act_modeddisp proved by nmdh4 on Mon, 10 Jul 2023 15:39:33 GMT
 lemma_fun_act_modeddisp: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    st3 = tick_act_patient(p, st2),
    st4 = tick_act_device(d, p, st3), 
    is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    ns2 = st2`nde_state,
    ns3 = st3`nde_state,
    ns4 = st4`nde_state,
    ds = ps`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF %,
   
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     %(ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
     %(ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    %(ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     %((ps`p_disp_top)`devs(d) /= no_device) AND
   %  (is`mode = d_mode) AND
   % (is`disp_focus = device_focus) AND
     % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
    %  (is`mode = d_mode) AND
     ((((is`coord_db)(p)`p_devices(d) = infusion_pump) AND
     ((ps`p_disp_top)`devs(d) = infusion_pump)) OR
    (((is`coord_db)(p)`p_devices(d) = vital_signs_device) AND
      (ps`p_disp_top)`devs(d) = vital_signs_device)) AND
    % (is`disp_focus = device_focus) AND
    % ((is`disp_patient)`current_patient = p) AND
    % (is`disp_device)`current_device = d AND
    % is`disp_device`av_c_disp(a) AND
     is`disp_top`patients(p)
    % ((ps`p_disp_top)`sel_device) = (# dv := d, dt := infusion_pump #)
IMPLIES
c_fun_act(a, d, p, st)`pdb(p)`p_disp_main = st`pdb(p)`p_disp_main AND
c_fun_act(a, d, p, st)`pdb(p)`filter_device_panels = st`pdb(p)`filter_device_panels AND
c_fun_act(a, d, p, st)`coord_st`coord_db = st`coord_st`coord_db AND
c_fun_act(a, d, p, st)`pdb(p)`pmode = st`pdb(p)`pmode AND
tick_pan_device(d, p, c_fun_act(a, d, p, st))`pdb(p)`pmode = st`pdb(p)`pmode AND
tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`pdb(p)`pmode = 
st`pdb(p)`pmode AND
(tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))))`pdb(p)`pmode = 
              st`pdb(p)`pmode  AND
 c_fun_act(a, d, p, st)`pdb(p)`p_disp_top`sel_device = st`pdb(p)`p_disp_top`sel_device  AND
tick_pan_device(d, p, c_fun_act(a, d, p, st))`pdb(p)`p_disp_top`sel_device  = st`pdb(p)`p_disp_top`sel_device  AND
tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`pdb(p)`p_disp_top`sel_device  = 
st`pdb(p)`p_disp_top`sel_device  AND
(tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))))`pdb(p)`p_disp_top`sel_device  = 
             st`pdb(p)`p_disp_top`sel_device  


% QED lemma_fun_act_cpon proved by nmdh4 on Thu, 02 Jun 2022 17:13:47 GMT
% QED lemma_fun_act_cpon proved by nmdh4 on Thu, 20 Oct 2022 15:00:12 GMT
% QED lemma_fun_act_cpon proved by nmdh4 on Fri, 13 Jan 2023 12:46:42 GMT
% @QED lemma_fun_act_cpon proved by nmdh4 on Wed, 15 Mar 2023 09:24:20 GMT
lemma_fun_act_cpon: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    st3 = tick_act_patient(p, st2),
    st4 = tick_act_device(d, p, st3), 
    is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    ns2 = st2`nde_state,
    ns3 = st3`nde_state,
    ns4 = st4`nde_state,
    ds = ps`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF %,
   
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     %(ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
     %(ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
     %(ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    %(ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     %((ps`p_disp_top)`devs(d) /= no_device) AND
     %(is`mode = d_mode) AND
     %(is`disp_focus = device_focus) AND
     % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
     % (is`mode = d_mode) AND
     ((((is`coord_db)(p)`p_devices(d) = infusion_pump) AND
     ((ps`p_disp_top)`devs(d) = infusion_pump)) OR
    (((is`coord_db)(p)`p_devices(d) = vital_signs_device) AND
      (ps`p_disp_top)`devs(d) = vital_signs_device)) AND
    % (is`disp_focus = device_focus) AND
    % ((is`disp_patient)`current_patient = p) AND
    % (is`disp_device)`current_device = d AND
    % is`disp_device`av_c_disp(a) AND
     is`disp_top`patients(p)
    % ((ps`p_disp_top)`sel_device) = (# dv := d, dt := infusion_pump #)
IMPLIES
%((ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
%   IMPLIES c_fun_act(a, d, p, st)`pdb(p)`ip_state(d)`m /= off) AND
%((ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
  % IMPLIES c_fun_act(a, d, p, st)`pdb(p)`vital_signs`power) %AND
((c_d_per_action(a, is) AND ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
   IMPLIES c_fun_act(a, d, p, st)`pdb(p)`ip_state(d)`m /= off) AND
((c_d_per_action(a, is) AND ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
   IMPLIES c_fun_act(a, d, p, st)`pdb(p)`vital_signs`power) 


% QED lemma_fun_act_cponx proved by nmdh4 on Mon, 19 Jun 2023 12:59:35 GMT
% @QED lemma_fun_act_cponx proved by nmdh4 on Fri, 23 Jun 2023 12:04:02 GMT
lemma_fun_act_cponx: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    st3 = tick_act_patient(p, st2),
    st4 = tick_act_device(d, p, st3), 
    is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    ns2 = st2`nde_state,
    ns3 = st3`nde_state,
    ns4 = st4`nde_state,
    ds = ps`ip_state(d),
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF %,
   
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     %(ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
     %(ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
     %(ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    %(ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     %((ps`p_disp_top)`devs(d) /= no_device) AND
    % (is`mode = d_mode) AND
    % (is`disp_focus = device_focus) AND
     % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
     % (is`mode = d_mode) AND
     ((((is`coord_db)(p)`p_devices(d) = infusion_pump) AND
     ((ps`p_disp_top)`devs(d) = infusion_pump)) OR
    (((is`coord_db)(p)`p_devices(d) = vital_signs_device) AND
      (ps`p_disp_top)`devs(d) = vital_signs_device)) AND
    % (is`disp_focus = device_focus) AND
    % ((is`disp_patient)`current_patient = p) AND
    % (is`disp_device)`current_device = d AND
    % is`disp_device`av_c_disp(a) AND
     is`disp_top`patients(p)
    % ((ps`p_disp_top)`sel_device) = (# dv := d, dt := infusion_pump #)
IMPLIES
%((ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
%   IMPLIES c_fun_act(a, d, p, st)`pdb(p)`ip_state(d)`m /= off) AND
%((ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
  % IMPLIES c_fun_act(a, d, p, st)`pdb(p)`vital_signs`power) %AND
((c_d_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
   IMPLIES c_fun_act(a, d, p, st)`pdb(p)`ip_state(d)`m /= off) AND
((c_d_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
   IMPLIES c_fun_act(a, d, p, st)`pdb(p)`vital_signs`power) AND
((c_p_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
   IMPLIES c_fun_act(a, d, p, st)`pdb(p)`ip_state(d)`m /= off) AND
((c_p_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
   IMPLIES c_fun_act(a, d, p, st)`pdb(p)`vital_signs`power)

% QED lemma2xcfnnqq proved by nmdh4 on Wed, 28 Jun 2023 15:33:45 GMT
% @QED lemma2xcfnnqq proved by nmdh4 on Thu, 29 Jun 2023 13:46:10 GMT
lemma2xcfnnqq: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET st1x = tick_pan_device(d, p, c_fun_act(a, d, p, st)),
    ns1x = st1x`nde_state,
    ps1x = st1x`pdb(p),
    st2x = tick_pan_patient(p, st1x),
    ns2x = st2x`nde_state,
    st3x = tick_pan_coordinator(st2x),
    st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    ns2 = st2`nde_state,
    st3 = tick_act_patient(p, st2),
    ns3 = st3`nde_state,
    st4 = tick_act_device(d, p, st3),
    ns4 = st4`nde_state,
    st5 = tick_pan_device(d, p, st4),
    ns5 = st5`nde_state,
    st6 = tick_pan_patient(p, st5),
    ns6 = st6`nde_state,
    st7 = tick_pan_coordinator(st6),
    ns7 = st7`nde_state,
    is7 = st7`coord_st,
    ps7 = st7`pdb(p),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
   is = st`coord_st,
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF,
    tds = tick(c_fun_act(a, d, p, st)`pdb(p)`ip_state(d)),
    tvs = tick_vs(c_fun_act(a, d, p, st)`pdb(p)`vital_signs),
 
    msgd = (# mhdr := updmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             pan := available_act(tds`pan, tds)
           #),
    msgv = (# mhdr := updmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             pan := available_act(tvs`pan, tvs)
           #)
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
    
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     is`disp_top`patients(p) AND
     (((ps`p_disp_top`devs(d) = infusion_pump) AND
     ((ps`ip_state(d))`m /= off) AND
     (is`coord_db(p)`p_devices(d) = infusion_pump)) OR
     ((ps`p_disp_top`devs(d) = vital_signs_device) AND
     (ps`vital_signs)`power AND
     (is`coord_db(p)`p_devices(d) = vital_signs_device)))
      AND
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
    (ns4`pan_msg_waiting(pnde)`buf_status /= full) AND
    (ns5`pan_msg_waiting(pnde)`buf_status /= full) AND
    (ns5`pan_msg_waiting
           (pnde)`current_pos
        = ns4`pan_msg_waiting(pnde)`last_pos) AND
    (ns5`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6`pan_msg_waiting
             (coord_node)`current_pos
         = ns5`pan_msg_waiting(coord_node)`last_pos) AND
    (ns7`pan_msg_waiting(coord_node)`buf_status /= full) % AND 
     IMPLIES
((c_d_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
   IMPLIES next_pan_pm(pnde, ns1x)`current_pan_msg = msgd) AND
((c_d_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
   IMPLIES next_pan_pm(pnde, ns1x)`current_pan_msg = msgv) AND
((c_p_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
   IMPLIES next_pan_pm(pnde, ns1x)`current_pan_msg = msgd) AND
((c_p_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
   IMPLIES next_pan_pm(pnde, ns1x)`current_pan_msg = msgv) AND
 ((c_d_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
   IMPLIES next_cm(ns2x)`current_pan_msg = msgd) AND
((c_d_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
   IMPLIES next_cm(ns2x)`current_pan_msg = msgv) AND
((c_p_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
   IMPLIES next_cm(ns2x)`current_pan_msg = msgd) AND
((c_p_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
   IMPLIES next_cm(ns2x)`current_pan_msg = msgv) 

% QED lemma_reflect_patient_device_consistent proved by nmdh4 on Wed, 13 Jul 2022 17:24:37 GMT
% QED lemma_reflect_patient_device_consistent proved by nmdh4 on Thu, 14 Jul 2022 15:32:08 GMT
% QED lemma_reflect_patient_device_consistent proved by nmdh4 on Wed, 10 Aug 2022 10:04:15 GMT
% QED lemma_reflect_patient_device_consistent proved by nmdh4 on Mon, 24 Oct 2022 14:33:54 GMT
% QED lemma_reflect_patient_device_consistent proved by nmdh4 on Thu, 22 Dec 2022 10:52:11 GMT
% QED lemma_reflect_patient_device_consistent proved by nmdh4 on Tue, 16 Jan 2023 11:39:33 GMT
% QED lemma_reflect_patient_device_consistent proved by nmdh4 on Mon, 23 Jan 2023 12:45:46 GMT
% QED lemma_reflect_patient_device_consistent proved by nmdh4 on Wed, 15 Mar 2023 10:43:46 GMT
% QED lemma_reflect_patient_device_consistent proved by nmdh4 on Tue, 28 Mar 2023 13:11:54 GMT
% @QED lemma_reflect_patient_device_consistent proved by nmdh4 on Tue, 16 May 2023 15:49:01 GMT
lemma_reflect_patient_device_consistent: LEMMA
FORALL (p: patient, d: device, st: state):
LET st1 = tick_pan_device(d, p, st),
    st2 = tick_pan_patient(p, st1),
  %  st3 = tick_pan_coordinator(st2),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    vs = ps`vital_signs,
    is = st`coord_st, 
    vc = (is`coord_db)(p), 
    ps1 = st1`pdb(p),
    ns1 = st1`nde_state,
    is1 = st1`coord_st,
    %vc1 = (is1`coord_db)(p), 
    ps2 = st2`pdb(p),
    ns2 = st2`nde_state,
    is2 = st2`coord_st,
    %vc2 = (is2`coord_db)(p), 
    pnde = ps`nde,
    dnde = IF ps`p_disp_top`devs(d) = infusion_pump THEN ps`ip_state(d)`nde
           ELSE ps`vital_signs`nde ENDIF,
    pnde_pan_q = ns`pan_msg_waiting(pnde),
   % coord_pan_q1 = ns1`pan_msg_waiting(coord_node),
    
    ns = st`nde_state,
    ns1 = st1`nde_state,
    pat_buff1 = ns1`pan_msg_waiting(pnde)
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     (pnde_pan_q`buf_status /= full) AND
   %  (coord_pan_q1`buf_status /= full)
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     (ps`pmode = d_mode) AND
    (( %(is`coord_db)(p)`p_devices(d) = infusion_pump AND
       ((ps`p_disp_top)`devs(d) = infusion_pump) AND
       (ps`p_disp_top`sel_device = (# dv := d, dt := infusion_pump #)) AND
       (ds`m /= off)) OR
       ( %(is`coord_db)(p)`p_devices(d) = vital_signs_device AND
       ((ps`p_disp_top)`devs(d) = vital_signs_device) AND
       (ps`p_disp_top`sel_device = (# dv := d, dt := vital_signs_device #)) AND
       ps`vital_signs`power))  AND
  %  (ns1`pan_msg_waiting(coord_node)`last_pos < mindex) AND
   % (ns1`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns`pan_msg_waiting(pnde)`last_pos = ns1`pan_msg_waiting(pnde)`current_pos) AND
    (ns`pan_msg_waiting(pnde)`buf_status /= full) %AND
    %(ns`pan_msg_waiting(pnde)`last_pos < mindex) 
IMPLIES
consistent_patient_d(d, p, reflect_device_to_patient(d, p, st))

% QED proved by nmdh4 on Thu, 21 Jul 2022 13:49:15 GMT
% QED lemma_reflect_device_p proved by nmdh4 on Thu, 28 Jul 2022 08:12:42 GMT
% QED lemma_reflect_device_p proved by nmdh4 on Thu, 28 Jul 2022 16:43:57 GMT
% QED lemma_reflect_device_p proved by nmdh4 on Mon, 24 Oct 2022 13:59:47 GMT
% QED lemma_reflect_device_p proved by nmdh4 on Mon, 16 Jan 2023 11:39:07 GMT
% @QED lemma_reflect_device_p proved by nmdh4 on Wed, 15 Mar 2023 11:15:09 GMT
lemma_reflect_device_p: LEMMA
FORALL (p: patient, d: device, st: state):
LET st1 = tick_pan_device(d, p, st),
    st2 = tick_pan_patient(p, st1),
  %  st3 = tick_pan_coordinator(st2),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    vs = ps`vital_signs,
    is = st`coord_st, 
    vc = (is`coord_db)(p), 
    ps1 = st1`pdb(p),
    ns1 = st1`nde_state,
    is1 = st1`coord_st,
    %vc1 = (is1`coord_db)(p), 
    ps2 = st2`pdb(p),
    ns2 = st2`nde_state,
    is2 = st2`coord_st,
    %vc2 = (is2`coord_db)(p), 
    pnde = ps`nde,
    dnde = IF ps`p_disp_top`devs(d) = infusion_pump THEN ps`ip_state(d)`nde
           ELSE ps`vital_signs`nde ENDIF,
    pnde_pan_q = ns`pan_msg_waiting(pnde),
  %  coord_pan_q1 = ns1`pan_msg_waiting(coord_node),
    
    ns = st`nde_state,
    ns1 = st1`nde_state,
    pat_buff1 = ns1`pan_msg_waiting(pnde)
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     (pnde_pan_q`buf_status /= full) AND
    % (coord_pan_q1`buf_status /= full)
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     (ps`p_disp_top`devs(d) /= no_device) %AND
    % (vc`p_devices(d) /= no_device) AND
    % patient controller assumptions
    % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
   % (st`patient_menus = init_patient_menu) AND 
   % ((is`disp_top)`patients)(p) AND 
  %  (ns1`pan_msg_waiting(coord_node)`last_pos < mindex) AND
   % (ns1`pan_msg_waiting(coord_node)`buf_status /= full) AND
   % (ns`pan_msg_waiting(pnde)`last_pos = ns1`pan_msg_waiting(pnde)`current_pos) AND
   % (ns`pan_msg_waiting(pnde)`buf_status /= full) AND
   % (ns`pan_msg_waiting(pnde)`last_pos < mindex)
IMPLIES
%reflect_device_to_patient(d, p, st)`coord_st`coord_db(p)`p_devices = 
%      st`coord_st`coord_db(p)`p_devices AND
reflect_device_to_patient(d, p, st)`p_nodes = st`p_nodes AND
reflect_device_to_patient(d, p, st)`d_nodes = st`d_nodes AND
reflect_device_to_patient(d, p, st)`coord_st = st`coord_st AND
nde(reflect_device_to_patient(d, p, st)`pdb(p)) = nde(ps) AND
reflect_device_to_patient(d, p, st)`pdb(p)`pmode = ps`pmode AND
reflect_device_to_patient(d, p, st)`pdb(p)`p_disp_top`sel_device = 
     ps`p_disp_top`sel_device AND
reflect_device_to_patient(d, p, st)`pdb(p)`emode = ps`emode AND
reflect_device_to_patient(d, p, st)`nde_state`n_links = ns`n_links AND
reflect_device_to_patient(d, p, st)`ps = st`ps AND
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
reflect_device_to_patient(d, p, st)`pdb(p)`ip_state(d)`m = ds`m) AND
(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
reflect_device_to_patient(d, p, st)`pdb(p)`vital_signs`power = vs`power) AND
reflect_device_to_patient(d, p, st)`pdb(p)`p_disp_top`devs = ps`p_disp_top`devs AND
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
   (nde(reflect_device_to_patient(d, p, st)`pdb(p)`ip_state(d)) = nde(ds))) AND
(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
   (nde(reflect_device_to_patient(d, p, st)`pdb(p)`vital_signs) = nde(vs))) AND
%reflect_device_to_patient(d, p, st)`pdb(p)`p_disp_main`p_actions =
 %                                 ps`p_disp_main`p_actions AND
reflect_device_to_patient(d, p, st)`pdb(p)`p_disp_top`devs = ps`p_disp_top`devs AND
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
   (nde(reflect_device_to_patient(d, p, st)`pdb(p)`ip_state(d)) = nde(ds))) AND
(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
   (nde(reflect_device_to_patient(d, p, st)`pdb(p)`vital_signs) = nde(vs)))


% QED lemma_reflect_device_p_ds proved by nmdh4 on Fri, 22 Jul 2022 10:05:17 GMT
% QED lemma_reflect_device_p_ds proved by nmdh4 on Wed, 27 Jul 2022 08:30:06 GMT
% QED lemma_reflect_device_p_ds proved by nmdh4 on Thu, 28 Jul 2022 15:27:00 GMT
% QED lemma_reflect_device_p_ds proved by nmdh4 on Mon, 24 Oct 2022 14:10:05 GMT
% QED lemma_reflect_device_p_ds proved by nmdh4 on Mon, 16 Jan 2023 11:55:13 GMT
% QED lemma_reflect_device_p_ds proved by nmdh4 on Wed, 15 Mar 2023 11:18:02 GMT
% @QED lemma_reflect_device_p_ds proved by nmdh4 on Tue, 16 May 2023 15:58:55 GMT
lemma_reflect_device_p_ds: LEMMA
FORALL (p: patient, d: device, st: state):
LET st1 = tick_pan_device(d, p, st),
    st2 = tick_pan_patient(p, st1),
  %  st3 = tick_pan_coordinator(st2),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    vs = ps`vital_signs,
    is = st`coord_st, 
    vc = (is`coord_db)(p), 
    ps1 = st1`pdb(p),
    ns1 = st1`nde_state,
    is1 = st1`coord_st,
    %vc1 = (is1`coord_db)(p), 
    ps2 = st2`pdb(p),
    ns2 = st2`nde_state,
    is2 = st2`coord_st,
    %vc2 = (is2`coord_db)(p), 
    pnde = ps`nde,
    dnde = IF ps`p_disp_top`devs(d) = infusion_pump THEN ps`ip_state(d)`nde
           ELSE ps`vital_signs`nde ENDIF,
  %  pnde_pan_q = ns`pan_msg_waiting(pnde),
   % coord_pan_q1 = ns1`pan_msg_waiting(coord_node),
    
    ns = st`nde_state,
    ns1 = st1`nde_state%,
  %  pat_buff1 = ns1`pan_msg_waiting(pnde)
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
   %  (pnde_pan_q`buf_status /= full) AND
   %  (coord_pan_q1`buf_status /= full)
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     (ps`p_disp_top`devs(d) /= no_device) AND
    % (vc`p_devices(d) /= no_device) AND
    % patient controller assumptions
    % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
   % (st`patient_menus = init_patient_menu) AND 
   % ((is`disp_top)`patients)(p) AND 
   % (ns1`pan_msg_waiting(coord_node)`last_pos < mindex) AND
  %  (ns1`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns`pan_msg_waiting(pnde)`last_pos = ns1`pan_msg_waiting(pnde)`current_pos) AND
    (ns`pan_msg_waiting(pnde)`buf_status /= full) AND
    (ns1`pan_msg_waiting(pnde)`buf_status /= full)
IMPLIES
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
     reflect_device_to_patient(d, p, st)`pdb(p)`ip_state(d) = tick(ds)) AND
(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
     reflect_device_to_patient(d, p, st)`pdb(p)`vital_signs = tick_vs(vs)) AND
reflect_device_to_patient(d, p, st)`coord_st = is




 % QED lemma_reflect_device_cnx proved by nmdh4 on Tue, 14 Jun 2022 14:34:33 GMT
 % QED lemma_reflect_device_cnx proved by nmdh4 on Tue, 18 Oct 2022 17:43:35 GMT
 % QED lemma_reflect_device_cnx proved by nmdh4 on Mon, 16 Jan 2023 12:07:40 GMT
 % @QED lemma_reflect_device_cnx proved by nmdh4 on Wed, 15 Mar 2023 11:24:53 GMT
 lemma_reflect_device_cnx: LEMMA
FORALL (p: patient, d: device, st: state):
LET st1 = tick_pan_device(d, p, st),
    st2 = tick_pan_patient(p, st1),
    st3 = tick_pan_coordinator(st2),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    vs = ps`vital_signs,
    is = st`coord_st, 
    vc = (is`coord_db)(p), 
    ps1 = st1`pdb(p),
    ns1 = st1`nde_state,
    is1 = st1`coord_st,
    %vc1 = (is1`coord_db)(p), 
    ps2 = st2`pdb(p),
    ns2 = st2`nde_state,
    is2 = st2`coord_st,
    ps3 = st3`pdb(p),
    ns3 = st3`nde_state,
    is3 = st3`coord_st,
    %vc2 = (is2`coord_db)(p), 
    pnde = ps`nde,
    dnde = IF ps`p_disp_top`devs(d) = infusion_pump THEN ps`ip_state(d)`nde
           ELSE ps`vital_signs`nde ENDIF,
    pnde_pan_q = ns`pan_msg_waiting(pnde),
    coord_pan_q1 = ns1`pan_msg_waiting(coord_node),
    
    ns = st`nde_state,
    ns1 = st1`nde_state,
    pat_buff1 = ns1`pan_msg_waiting(pnde)
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     (pnde_pan_q`buf_status /= full) AND
     (coord_pan_q1`buf_status /= full)
    % patient known to the system
     AND (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     (( (is`coord_db)(p)`p_devices(d) = infusion_pump AND
       ((ps`p_disp_top)`devs(d) = infusion_pump)) % AND
      % (ds`m /= off)) 
       OR
       ( (is`coord_db)(p)`p_devices(d) = vital_signs_device AND
       ((ps`p_disp_top)`devs(d) = vital_signs_device)))  AND
       %ps`vital_signs`power)) 
    % patient controller assumptions
    % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
   % (st`patient_menus = init_patient_menu) AND 
   % ((is`disp_top)`patients)(p) AND 
   %  (ns3`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns3`pan_msg_waiting(coord_node)`buf_status /= full) AND
    % (ns2`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns2`pan_msg_waiting(coord_node)`buf_status /= full) AND
    %(ns1`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns1`pan_msg_waiting(coord_node)`buf_status /= full) AND
     (ns1`pan_msg_waiting(pnde)`last_pos = ns2`pan_msg_waiting(pnde)`current_pos) AND
   (ns1`pan_msg_waiting(coord_node)`last_pos = ns2`pan_msg_waiting(coord_node)`current_pos) AND
    (ns`pan_msg_waiting(pnde)`last_pos = ns1`pan_msg_waiting(pnde)`current_pos) AND
    (ns`pan_msg_waiting(pnde)`buf_status /= full) AND
    %(ns`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns1`pan_msg_waiting(pnde)`buf_status /= full) %AND
    % (ns1`pan_msg_waiting(pnde)`last_pos < mindex) % AND
   % ((ps`ip_state(d))`m /= off)
IMPLIES
reflect_device_to_coordinator(d, p, st)`coord_st`coord_db(p)`p_devices = 
     st`coord_st`coord_db(p)`p_devices AND
reflect_device_to_coordinator(d, p, st)`p_nodes = st`p_nodes AND
reflect_device_to_coordinator(d, p, st)`d_nodes = st`d_nodes AND
%reflect_device_to_coordinator(d, p, st)`coord_st = st`coord_st AND
nde(reflect_device_to_coordinator(d, p, st)`pdb(p)) = nde(ps) AND
reflect_device_to_coordinator(d, p, st)`pdb(p)`pmode = ps`pmode AND
reflect_device_to_coordinator(d, p, st)`pdb(p)`p_disp_top`sel_device = 
     ps`p_disp_top`sel_device AND
reflect_device_to_coordinator(d, p, st)`pdb(p)`emode = ps`emode AND
reflect_device_to_coordinator(d, p, st)`nde_state`n_links = ns`n_links AND
reflect_device_to_coordinator(d, p, st)`ps = st`ps AND
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
reflect_device_to_coordinator(d, p, st)`pdb(p)`ip_state(d)`m = ds`m) AND
(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
reflect_device_to_coordinator(d, p, st)`pdb(p)`vital_signs`power = vs`power) AND
reflect_device_to_coordinator(d, p, st)`pdb(p)`p_disp_top`devs = ps`p_disp_top`devs AND
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
   (nde(reflect_device_to_coordinator(d, p, st)`pdb(p)`ip_state(d)) = nde(ds))) AND
(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
   (nde(reflect_device_to_coordinator(d, p, st)`pdb(p)`vital_signs) = nde(vs))) AND
reflect_device_to_coordinator(d, p, st)`coord_st`mode = is`mode AND
reflect_device_to_coordinator(d, p, st)`coord_st`disp_focus = is`disp_focus AND
reflect_device_to_coordinator(d, p, st)`coord_st`disp_patient`current_patient = is`disp_patient`current_patient AND
reflect_device_to_coordinator(d, p, st)`coord_st`disp_device`current_device = is`disp_device`current_device AND
reflect_device_to_coordinator(d, p, st)`coord_st`disp_top`patients = is`disp_top`patients 

 
%reflect_device_to_coordinator(d, p, st)`pdb(p)`ip_state(d) = tick(ds)

% (lemma "lemma_reflect_device_c_ds" ("p" "p!1" "d" "d!1" "st" "st!1"))
% (with-labels (flatten -1) ((lrdptds) (lrdppars) (lrdpcmds)))
% 
% 
% QED lemma_reflect_device_c_ds proved by nmdh4 on Thu, 28 Apr 2022 11:45:20 GMT
% QED lemma_reflect_device_c_ds proved by nmdh4 on Tue, 10 May 2022 10:13:13 GMT
% QED lemma_reflect_device_c_ds proved by nmdh4 on Tue, 14 June 2022 11:39:23 GMT
% QED lemma_reflect_device_c_ds proved by nmdh4 on Fri, 24 Jun 2022 15:56:06 GMT
% QED lemma_reflect_device_c_ds proved by nmdh4 on Tue, 28 Jun 2022 15:18:47 GMT
% QED lemma_reflect_device_c_ds proved by nmdh4 on Wed, 19 Oct 2022 08:50:07 GMT
% QED lemma_reflect_device_c_ds proved by nmdh4 on Mon, 16 Jan 2023 12:17:10 GMT
% QED lemma_reflect_device_c_ds proved by nmdh4 on Wed, 15 Mar 2023 12:29:25 GMT
% @QED lemma_reflect_device_c_ds proved by nmdh4 on Thu, 18 May 2023 11:05:19 GMT
lemma_reflect_device_c_ds: LEMMA
FORALL (p: patient, d: device, st: state):
LET st1 = tick_pan_device(d, p, st),
    st2 = tick_pan_patient(p, st1),
    st3 = tick_pan_coordinator(st2),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    vs = ps`vital_signs,
    is = st`coord_st, 
    vc = (is`coord_db)(p), 
    ps1 = st1`pdb(p),
    ns1 = st1`nde_state,
    is1 = st1`coord_st,
    %vc1 = (is1`coord_db)(p), 
    ps2 = st2`pdb(p),
    ns2 = st2`nde_state,
    is2 = st2`coord_st,
    ps3 = st3`pdb(p),
    ns3 = st3`nde_state,
    is3 = st3`coord_st,
    %vc2 = (is2`coord_db)(p), 
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF

    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    (((ps`p_disp_top`devs(d) = infusion_pump) AND
     ((ps`ip_state(d))`m /= off) AND
     (is`coord_db(p)`p_devices(d) = infusion_pump)) OR
     ((ps`p_disp_top`devs(d) = vital_signs_device) AND
     (ps`vital_signs)`power AND
     (is`coord_db(p)`p_devices(d) = vital_signs_device))) AND
    % (vc`p_devices(d) /= no_device) AND
    % patient controller assumptions
    % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
   % (st`patient_menus = init_patient_menu) AND 
   % ((is`disp_top)`patients)(p) AND 
   % (ns3`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns3`pan_msg_waiting(coord_node)`buf_status /= full) AND
   % (ns2`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns2`pan_msg_waiting(coord_node)`buf_status /= full) AND
    % (ns1`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns1`pan_msg_waiting(pnde)`buf_status /= full) AND
    % (ns1`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns1`pan_msg_waiting(coord_node)`buf_status /= full) AND
     (ns1`pan_msg_waiting(coord_node)`last_pos = ns2`pan_msg_waiting(coord_node)`current_pos) AND
    (ns`pan_msg_waiting(pnde)`last_pos = ns1`pan_msg_waiting(pnde)`current_pos) AND
    (ns`pan_msg_waiting(pnde)`buf_status /= full) % AND
    %(ns`pan_msg_waiting(pnde)`last_pos < mindex) %AND
IMPLIES
(ps`p_disp_top`devs(d) = infusion_pump IMPLIES
     reflect_device_to_coordinator(d, p, st)`pdb(p)`ip_state(d) = tick(ds)) AND
(ps`p_disp_top`devs(d) = vital_signs_device IMPLIES
     reflect_device_to_coordinator(d, p, st)`pdb(p)`vital_signs = tick_vs(vs)) AND
reflect_device_to_coordinator(d, p, st)`coord_st`
      coord_db(p)`coord_devices(d)`pars = is`coord_db(p)`coord_devices(d)`pars AND
reflect_device_to_coordinator(d, p, st)`coord_st`
     coord_db(p)`d_available_actions(d) = is`coord_db(p)`d_available_actions(d)

% QED p_d_fun_action_lemma_ex proved by nmdh4 on Fri, 22 Jul 2022 11:51:12 GMT
% QED p_d_fun_action_lemma_ex proved by nmdh4 on Wed, 10 Aug 2022 15:11:08 GMT
% QED p_d_fun_action_lemma_ex proved by nmdh4 on Mon, 24 Oct 2022 13:37:19 GMT
% QED p_d_fun_action_lemma_ex proved by nmdh4 on Mon, 16 Jan 2023 12:46:32 GMT
% QED p_d_fun_action_lemma_ex proved by nmdh4 on Wed, 15 Mar 2023 12:32:26 GMT
% @QED p_d_fun_action_lemma_ex proved by nmdh4 on Tue, 28 Mar 2023 11:04:34 GMT
p_d_fun_action_lemma_ex: LEMMA
 FORALL (a: action_id, d: device, p: patient, st: state):
 LET ps = st`pdb(p), pnde = nde(ps), 
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF,
    ns = st`nde_state,
    ds = ps`ip_state(d),
    st1 = patient_enter_action(a, p, st),
    st2 = patient_act_mono(p, st1),
    ns2 = st2`nde_state,
    st3 = tick_act_device(d, p, st2),
    ns3 = st3`nde_state,
    st4 = tick_pan_device(d, p, st3),
    ns4 = st4`nde_state,
    st5 = tick_pan_patient(p, st4),
    ns5 = st5`nde_state
    IN  
    ns`n_links(pnde, coord_node) AND 
    ns`n_links(coord_node, pnde) AND 
    ns`n_links(pnde, dnde) AND 
    ns`n_links(dnde, pnde) AND 
    (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
    (ns`act_msg_waiting(dnde)`buf_status /= full) AND

   % (ns`act_msg_waiting(dnde)`last_pos < mindex) AND
    (ns2`act_msg_waiting(dnde)`buf_status /= full) AND

    %(ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
    (ns2`act_msg_waiting
           (dnde)`current_pos
        = ns`act_msg_waiting(dnde)`last_pos) AND
    (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
    %(ns3`act_msg_waiting(dnde)`last_pos < mindex) AND 
    (ns3`pan_msg_waiting(pnde)`buf_status /= full) AND
    %(ns3`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns4`pan_msg_waiting(pnde)`buf_status /= full) AND
    %(ns4`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns4`pan_msg_waiting
           (pnde)`current_pos
        = ns3`pan_msg_waiting(pnde)`last_pos) AND
   % (ns4`pan_msg_waiting(coord_node)`last_pos < mindex) AND
   % (ns4`pan_msg_waiting(coord_node)`buf_status /= full) AND
     (p /= p_null) AND 
      (a /= nil_action) AND %(a /= powr) AND
     st`ps(p) AND 
     (d /= nil_device) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     st`pdb(p)`p_disp_top`sel_device`dv = d AND
    % st`pdb(p)`p_disp_top`sel_device`dt = infusion_pump AND
     ( ((ps`p_disp_top)`devs(d) = infusion_pump) %AND
     %  (ds`m /= off)) 
      OR
       ( ((ps`p_disp_top)`devs(d) = vital_signs_device))) AND
   %    ps`vital_signs`power) AND
     (ps`pmode = d_mode) AND
     (ps`emode = edit_none) AND
     (ps`p_disp_device`cmds(a)) %AND
     % (st`pdb(p)`ip_state(d)`rate < st`pdb(p)`ip_state(d)`vtbi) AND 
     % establishing initial state relationship
    % relate_ip_to_pan(ps`ip_state(d)) AND     
    % consistent_patient(d, p, st) AND
     %p_d_per_action(a, st`pdb(p)) 
     IMPLIES
     (((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
         p_d_fun_action(a, p, st)`pdb(p)`ip_state(d) =
      tick(execute_ip(a, st`pdb(p)`ip_state(d)))) AND 
   (((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES
         p_d_fun_action(a, p, st)`pdb(p)`vital_signs =
            tick_vs(execute_vs(a, st`pdb(p)`vital_signs)))

   % QED p_d_fun_action_lemma_pdispdevice proved by nmdh4 on Tue, 28 Mar 2023 10:02:51 GMT
   % @QED p_d_fun_action_lemma_pdispdevice proved by nmdh4 on Tue, 28 Mar 2023 11:40:27 GMT
   p_d_fun_action_lemma_pdispdevice: LEMMA
 FORALL (a: action_id, d: device, p: patient, st: state):
 LET ps = st`pdb(p), pnde = nde(ps), 
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF,
    ns = st`nde_state,
    ds = ps`ip_state(d),
    st1 = patient_enter_action(a, p, st),
    st2 = patient_act_mono(p, st1),
    ns2 = st2`nde_state,
    st3 = tick_act_device(d, p, st2),
    ns3 = st3`nde_state,
    st4 = tick_pan_device(d, p, st3),
    ns4 = st4`nde_state,
    st5 = tick_pan_patient(p, st4),
    ns5 = st5`nde_state
    IN  
    ns`n_links(pnde, coord_node) AND 
    ns`n_links(coord_node, pnde) AND 
    ns`n_links(pnde, dnde) AND 
    ns`n_links(dnde, pnde) AND 
    (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
    (ns`act_msg_waiting(dnde)`buf_status /= full) AND

   % (ns`act_msg_waiting(dnde)`last_pos < mindex) AND
    (ns2`act_msg_waiting(dnde)`buf_status /= full) AND

    %(ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
    (ns2`act_msg_waiting
           (dnde)`current_pos
        = ns`act_msg_waiting(dnde)`last_pos) AND
    (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
    %(ns3`act_msg_waiting(dnde)`last_pos < mindex) AND 
    (ns3`pan_msg_waiting(pnde)`buf_status /= full) AND
    %(ns3`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns4`pan_msg_waiting(pnde)`buf_status /= full) AND
    %(ns4`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns4`pan_msg_waiting
           (pnde)`current_pos
        = ns3`pan_msg_waiting(pnde)`last_pos) AND
   % (ns4`pan_msg_waiting(coord_node)`last_pos < mindex) AND
   % (ns4`pan_msg_waiting(coord_node)`buf_status /= full) AND
     (p /= p_null) AND 
      (a /= nil_action) AND %(a /= powr) AND
     st`ps(p) AND 
     (d /= nil_device) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     st`pdb(p)`p_disp_top`sel_device`dv = d AND
    % st`pdb(p)`p_disp_top`sel_device`dt = infusion_pump AND
      (((ps`p_disp_top)`devs(d) = infusion_pump)% AND
      % (ds`m /= off)) 
      OR
       ( ((ps`p_disp_top)`devs(d) = vital_signs_device))) AND
    %   ps`vital_signs`power) AND
     (ps`pmode = d_mode) AND
     (ps`emode = edit_none) AND
     (ps`p_disp_device`cmds(a)) %AND
     % (st`pdb(p)`ip_state(d)`rate < st`pdb(p)`ip_state(d)`vtbi) AND 
     % establishing initial state relationship
    % relate_ip_to_pan(ps`ip_state(d)) AND     
    % consistent_patient(d, p, st) AND
     %p_d_per_action(a, st`pdb(p)) 
     IMPLIES
     (((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
     p_d_fun_action(a, p, st)`pdb(p)`p_disp_device =
         available_act(p_d_fun_action(a, p, st)`pdb(p)`ip_state(d)`pan,
                       p_d_fun_action(a, p, st)`pdb(p)`ip_state(d)))
         AND 
   (((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES
       p_d_fun_action(a, p, st)`pdb(p)`p_disp_device =
         available_act(p_d_fun_action(a, p, st)`pdb(p)`vital_signs`pan,
                       p_d_fun_action(a, p, st)`pdb(p)`vital_signs))


   

% (lemma "lemma_cd_fun_act_ip" ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
% (with-labels (flatten -1) ((lpfaipnodes lpfaidnodes lpfainde lpfaipmode lpfaiseldev lpfaiemode lpfailinks lpfaips lpfaidevs lpfaiipnde))))

%
% QED lemma_cd_fun_act_ip proved by nmdh4 on Mon, 16 May 2022 10:39:38 GMT
% QED lemma_cd_fun_act_ip proved by nmdh4 on Tue, 14 Jun 2022 15:55:23 GMT
% QED lemma_cd_fun_act_ip proved by nmdh4 on Mon, 24 Oct 2022 10:04:38 GMT
% QED lemma_cd_fun_act_ip proved by nmdh4 on Mon, 16 Jan 2023 16:28:21 GMT
% @QED lemma_cd_fun_act_ip proved by nmdh4 on Wed, 15 Mar 2023 12:38:32 GMT
lemma_cd_fun_act_ip: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
 LET ps = st`pdb(p), 
    ds = ps`ip_state(d),
    vs = ps`vital_signs,
    pnde = nde(ps), 
   % d = ((ps`p_disp_top)`sel_device)`dv,
    dnde = IF ps`p_disp_top`devs(d) = infusion_pump THEN ps`ip_state(d)`nde
           ELSE ps`vital_signs`nde ENDIF, 
    ns = st`nde_state,
    is = st`coord_st,
    st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    ns2 = st2`nde_state,
    st3 = tick_act_patient(p, st2),
    ns3 = st3`nde_state,
    st4 = tick_act_device(d, p, st3),
    ns4 = st4`nde_state,
    st5 = tick_pan_device(d, p, st4),
    ns5 = st5`nde_state,
    st6 = tick_pan_patient(p, st5),
    ns6 = st6`nde_state,
    st7 = tick_pan_coordinator(st6),
    ns7 = st7`nde_state
    
    IN  
    ns`n_links(pnde, coord_node) AND 
    ns`n_links(coord_node, pnde) AND 
    ns`n_links(pnde, dnde) AND 
    ns`n_links(dnde, pnde) AND 
    (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     % (ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
     % (ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    % (ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
    (ns4`pan_msg_waiting(pnde)`buf_status /= full) AND
    % (ns4`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5`pan_msg_waiting(pnde)`buf_status /= full) AND
    % (ns5`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5`pan_msg_waiting
           (pnde)`current_pos
        = ns4`pan_msg_waiting(pnde)`last_pos) AND
    (ns6`pan_msg_waiting
             (pnde)`current_pos
         = ns5`pan_msg_waiting(pnde)`last_pos) AND
    %(ns5`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns5`pan_msg_waiting(coord_node)`buf_status /= full) AND
    % (ns6`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns6`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6`pan_msg_waiting
             (coord_node)`current_pos
         = ns5`pan_msg_waiting(coord_node)`last_pos) AND
    % (ns7`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns7`pan_msg_waiting(coord_node)`buf_status /= full) AND
  
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     %(ds`m /= off) AND
     %((ps`ip_state(d))`m /= off) AND 
     (is`mode = d_mode) AND
     (is`disp_focus = device_focus) AND
     ((is`disp_top)`patients)(p) AND 
     (( (is`coord_db)(p)`p_devices(d) = infusion_pump AND
       ((ps`p_disp_top)`devs(d) = infusion_pump))% AND
       %(ds`m /= off)) 
       OR
       ( (is`coord_db)(p)`p_devices(d) = vital_signs_device AND
       ((ps`p_disp_top)`devs(d) = vital_signs_device))) %AND
       %ps`vital_signs`power)) 
      AND
     ((is`disp_patient)`current_patient = p) AND
     (is`disp_device)`current_device = d  AND
     is`disp_device`av_c_disp(a) %AND
     %((ps`p_disp_top)`devs(d) = infusion_pump) % AND
    % ps`pmode = d_mode AND
    % (ps`p_disp_top`sel_device = (# dv := d, dt := infusion_pump #)) AND
    % relate_ip_to_pan(ds) AND
    % consistent_coordinator_d(d, p, st) AND
    % (ps`emode = edit_none) AND
    % c_d_per_action(a, is)
     IMPLIES
c_d_fun_action(a, st)`p_nodes = st`p_nodes AND
c_d_fun_action(a, st)`d_nodes = st`d_nodes AND
%c_d_fun_action(a, st)`coord_st = st`coord_st AND
nde(c_d_fun_action(a, st)`pdb(p)) = nde(ps) AND
%p_fun_act(a, d, p, st)`pdb(p)`nde = ps`nde AND
c_d_fun_action(a, st)`pdb(p)`pmode = ps`pmode AND
c_d_fun_action(a, st)`pdb(p)`p_disp_top`sel_device = 
     ps`p_disp_top`sel_device AND
c_d_fun_action(a, st)`pdb(p)`emode = ps`emode AND
c_d_fun_action(a, st)`nde_state`n_links = ns`n_links AND
c_d_fun_action(a, st)`ps = st`ps AND
c_d_fun_action(a, st)`pdb(p)`p_disp_top`devs = ps`p_disp_top`devs AND
(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
         nde(c_d_fun_action(a, st)`pdb(p)`ip_state(d)) = nde(ds)) AND
(((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES
         nde(c_d_fun_action(a, st)`pdb(p)`vital_signs) = nde(vs)) AND
c_d_fun_action(a, st)`coord_st`mode = is`mode AND
c_d_fun_action(a, st)`coord_st`disp_focus = is`disp_focus AND
c_d_fun_action(a, st)`coord_st`disp_patient`current_patient = is`disp_patient`current_patient AND
c_d_fun_action(a, st)`coord_st`disp_device`current_device = is`disp_device`current_device AND
c_d_fun_action(a, st)`coord_st`coord_db(p)`p_devices = is`coord_db(p)`p_devices AND 
c_d_fun_action(a, st)`coord_st`disp_top`patients = is`disp_top`patients




% 
%(lemma "lemma_cd_fun_act_ip_coord" ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
% QED lemma_cd_fun_act_ip_coord proved by nmdh4 on Fri, 14 Jan 2022 16:10:52 GMT
% QED lemma_cd_fun_act_ip_coord proved by nmdh4 on Tue, 17 May 2022 13:55:12 GMT
% QED lemma_cd_fun_act_ip_coord proved by nmdh4 on Wed, 18 May 2022 14:20:54 GMT
% QED lemma_cd_fun_act_ip_coord proved by nmdh4 on Thu, 16 Jun 2022 13:14:36 GMT
% QED lemma_cd_fun_act_ip_coord proved by nmdh4 on Thu, 23 Jun 2022 14:01:22 GMT
% QED lemma_cd_fun_act_ip_coord proved by nmdh4 on Fri, 24 Jun 2022 10:05:45 GMT
% QED lemma_cd_fun_act_ip_coord proved by nmdh4 on Thu, 20 Oct 2022 08:42:07 GMT
% QED lemma_cd_fun_act_ip_coord proved by nmdh4 on Tue, 17 Jan 2023 10:49:32 GMT
% QED lemma_cd_fun_act_ip_coord proved by nmdh4 on Wed, 15 Mar 2023 15:21:32 GMT
% @QED lemma_cd_fun_act_ip_coord proved by nmdh4 on Thu, 18 May 2023 13:19:01 GMT
lemma_cd_fun_act_ip_coord: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
 LET ps = st`pdb(p), 
    ds = ps`ip_state(d),
    vs = ps`vital_signs,
    pnde = nde(ps), 
   % d = ((ps`p_disp_top)`sel_device)`dv,
    dnde = IF ps`p_disp_top`devs(d) = infusion_pump THEN ps`ip_state(d)`nde
           ELSE ps`vital_signs`nde ENDIF, 
    ns = st`nde_state,
    is = st`coord_st,
    st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    ns2 = st2`nde_state,
    st3 = tick_act_patient(p, st2),
    ns3 = st3`nde_state,
    st4 = tick_act_device(d, p, st3),
    ns4 = st4`nde_state,
    st5 = tick_pan_device(d, p, st4),
    ns5 = st5`nde_state,
    st6 = tick_pan_patient(p, st5),
    ns6 = st6`nde_state,
    st7 = tick_pan_coordinator(st6),
    ns7 = st7`nde_state
    
    IN  
    ns`n_links(pnde, coord_node) AND 
    ns`n_links(coord_node, pnde) AND 
    ns`n_links(pnde, dnde) AND 
    ns`n_links(dnde, pnde) AND 
    (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
   %  (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
     %(ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    %(ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
    (ns4`pan_msg_waiting(pnde)`buf_status /= full) AND
    %(ns4`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5`pan_msg_waiting(pnde)`buf_status /= full) AND
    %(ns5`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5`pan_msg_waiting
           (pnde)`current_pos
        = ns4`pan_msg_waiting(pnde)`last_pos) AND
    (ns6`pan_msg_waiting
             (pnde)`current_pos
         = ns5`pan_msg_waiting(pnde)`last_pos) AND
   % (ns5`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns5`pan_msg_waiting(coord_node)`buf_status /= full) AND
   % (ns6`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns6`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6`pan_msg_waiting
             (coord_node)`current_pos
         = ns5`pan_msg_waiting(coord_node)`last_pos) AND
   % (ns7`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns7`pan_msg_waiting(coord_node)`buf_status /= full) AND
  
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     %((ps`ip_state(d))`m /= off) AND 
     (is`mode = d_mode) AND
     (is`disp_focus = device_focus) AND
     ((is`disp_top)`patients)(p) AND 
     (( (is`coord_db)(p)`p_devices(d) = infusion_pump AND
       ((ps`p_disp_top)`devs(d) = infusion_pump) AND
       ds`m /= off) 
      OR
       ( (is`coord_db)(p)`p_devices(d) = vital_signs_device AND
       ((ps`p_disp_top)`devs(d) = vital_signs_device) AND
        ps`vital_signs`power)) 
      AND
     ((is`disp_patient)`current_patient = p) AND
     (is`disp_device)`current_device = d AND
     is`disp_device`av_c_disp(a)
     % AND
    % ps`pmode = d_mode AND
    % (ps`p_disp_top`sel_device = (# dv := d, dt := infusion_pump #)) AND
    % relate_ip_to_pan(ds) AND
    % consistent_coordinator_d(d, p, st) AND
    % (ps`emode = edit_none) AND
    % c_d_per_action(a, is)
     IMPLIES
c_d_fun_action(a, st)`coord_st`coord_db(p)`coord_devices(d)`pars = 
       is`coord_db(p)`coord_devices(d)`pars AND
(((ps`p_disp_top)`devs(d) = infusion_pump) %AND
 % (st`coord_st`disp_device`av_c_disp(a))) 
 IMPLIES 
c_d_fun_action(a, st)`coord_st`coord_db(p)`coord_devices(d)`cmds = 
        (LAMBDA (b: action_id):
         (is`coord_db(p))`d_available_actions(d)(b) AND
          available_act(tick(execute_ip(a,
                                        st`pdb(p)`ip_state(d)))`pan,
                        tick(execute_ip(a,
                                        st`pdb(p)`ip_state(d))))`cmds
              (b))) AND
(((ps`p_disp_top)`devs(d) = vital_signs_device)
%AND (st`coord_st`disp_device`av_c_disp(a))) 
IMPLIES 
c_d_fun_action(a, st)`coord_st`coord_db(p)`coord_devices(d)`cmds = 
        (LAMBDA (b: action_id):
         (is`coord_db(p))`d_available_actions(d)(b) AND
          available_act(tick_vs(execute_vs(a,
                                        st`pdb(p)`vital_signs))`pan,
                        tick_vs(execute_vs(a,
                                        st`pdb(p)`vital_signs)))`cmds
              (b)))

% QED lemma_pd_fun_act_ip proved by nmdh4 on Thu, 28 Jul 2022 17:24:01 GMT
% QED lemma_pd_fun_act_ip proved by nmdh4 on Wed, 10 Aug 2022 15:52:13 GMT
% QED lemma_pd_fun_act_ip proved by nmdh4 on Mon, 24 Oct 2022 14:16:41 GMT
% QED lemma_pd_fun_act_ip proved by nmdh4 on Tue, 17 Jan 2023 11:37:56 GMT
% @QED lemma_pd_fun_act_ip proved by nmdh4 on Wed, 15 Mar 2023 15:31:47 GMT
lemma_pd_fun_act_ip: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET %ns1 = tick_act_patient(p, coord_act_mono(st))`nde_state,
    %ns2 = patient_act_mono(p, st)`nde_state,
    is = st`coord_st,
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    vs = ps`vital_signs,
    st1 = patient_enter_action(a, p, st),
    st2 = patient_act_mono(p, st1),
    ns2 = st2`nde_state,
    st3 = tick_act_device(d, p, st2),
    ns3 = st3`nde_state,
    st4 = tick_pan_device(d, p, st3),
    ns4 = st4`nde_state,
    %st3 = tick_pan_patient(p, st2),
    pnde = ps`nde,
    dnde = IF ps`p_disp_top`devs(d) = infusion_pump THEN ps`ip_state(d)`nde
           ELSE ps`vital_signs`nde ENDIF
   % tds = tick(ds),
   % pa = tds`pan,
   % panmsg = (# mhdr := updmsg,
   %          pat_nd := pnde,
   %          msg_nd := dnde,
   %          pan := available_act(pa, tds)
   %        #),
   %  actmsg = (# mhdr := actmsg,
   %          pat_nd := pnde,
   %          msg_nd := dnde,
   %          act := a
   %        #)
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     %(ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns`act_msg_waiting(dnde)`buf_status /= full) AND
   %  (ns`act_msg_waiting(dnde)`last_pos < mindex) AND
    % (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (dnde)`current_pos
        = ns`act_msg_waiting(dnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
    % (ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
    % (ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    (ns3`pan_msg_waiting(pnde)`buf_status /= full) AND
    % (ns3`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns4`pan_msg_waiting(pnde)`buf_status /= full) AND
    % (ns4`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns4`pan_msg_waiting
           (pnde)`current_pos
        = ns3`pan_msg_waiting(pnde)`last_pos) AND
   
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     (( ((ps`p_disp_top)`devs(d) = infusion_pump) AND
       (ds`m /= off)) 
       OR
       (((ps`p_disp_top)`devs(d) = vital_signs_device) AND
       ps`vital_signs`power)) AND
     (ps`p_disp_top)`sel_device`dv = d AND
     (ps`emode = edit_none) AND
     (ps`pmode = d_mode) AND
     (p_d_per_action(a, ps))
     IMPLIES
p_d_fun_action(a, p, st)`p_nodes = st`p_nodes AND
p_d_fun_action(a, p, st)`d_nodes = st`d_nodes AND
p_d_fun_action(a, p, st)`coord_st = st`coord_st AND
nde(p_d_fun_action(a, p, st)`pdb(p)) = nde(ps) AND
%p_fun_act(a, d, p, st)`pdb(p)`nde = ps`nde AND
p_d_fun_action(a, p, st)`pdb(p)`pmode = ps`pmode AND
p_d_fun_action(a, p, st)`pdb(p)`p_disp_top`sel_device = 
     ps`p_disp_top`sel_device AND
p_d_fun_action(a, p, st)`pdb(p)`emode = ps`emode AND
p_d_fun_action(a, p, st)`nde_state`n_links = ns`n_links AND
p_d_fun_action(a, p, st)`ps = st`ps AND
p_d_fun_action(a, p, st)`pdb(p)`p_disp_top`devs = ps`p_disp_top`devs AND
(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
         nde(p_d_fun_action(a, p, st)`pdb(p)`ip_state(d)) = nde(ds)) AND
(((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES
         nde(p_d_fun_action(a, p, st)`pdb(p)`vital_signs) = nde(vs)) AND
((ps`p_disp_top)`devs(d) = infusion_pump
        IMPLIES (p_d_fun_action(a, p, st)`pdb(p)`ip_state(d) =
           tick(execute_ip(a, st`pdb(p)`ip_state(d))))) AND
 (((ps`p_disp_top)`devs(d) = vital_signs_device)
          IMPLIES (p_d_fun_action(a, p, st)`pdb(p)`vital_signs =
           tick_vs(execute_vs(a, st`pdb(p)`vital_signs))))

% QED lemma_cd_fun_act_xx proved by nmdh4 on Tue, 28 Jun 2022 09:35:48 GMT
% QED lemma_cd_fun_act_xx proved by nmdh4 on Tue, 28 Jun 2022 15:49:26 GMT
% QED lemma_cd_fun_act_xx proved by nmdh4 on Thu, 20 Oct 2022 09:05:50 GMT
% QED lemma_cd_fun_act_xx proved by nmdh4 on Tue, 17 Jan 2023 12:49:05 GMT
% @QED lemma_cd_fun_act_xx proved by nmdh4 on Wed, 15 Mar 2023 15:46:12 GMT
lemma_cd_fun_act_xx: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
 LET ps = st`pdb(p), 
    ds = ps`ip_state(d),
    vs = ps`vital_signs,
    pnde = nde(ps), 
   % d = ((ps`p_disp_top)`sel_device)`dv,
    dnde = IF ps`p_disp_top`devs(d) = infusion_pump THEN ps`ip_state(d)`nde
           ELSE ps`vital_signs`nde ENDIF, 
    ns = st`nde_state,
    is = st`coord_st,
    st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    ns2 = st2`nde_state,
    st3 = tick_act_patient(p, st2),
    ns3 = st3`nde_state,
    st4 = tick_act_device(d, p, st3),
    ns4 = st4`nde_state,
    st5 = tick_pan_device(d, p, st4),
    ns5 = st5`nde_state,
    st6 = tick_pan_patient(p, st5),
    ns6 = st6`nde_state,
    st7 = tick_pan_coordinator(st6),
    ns7 = st7`nde_state
    
    IN  
    ns`n_links(pnde, coord_node) AND 
    ns`n_links(coord_node, pnde) AND 
    ns`n_links(pnde, dnde) AND 
    ns`n_links(dnde, pnde) AND 
    (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     % (ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
     % (ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    % (ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
    (ns4`pan_msg_waiting(pnde)`buf_status /= full) AND
    % (ns4`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5`pan_msg_waiting(pnde)`buf_status /= full) AND
    % (ns5`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5`pan_msg_waiting
           (pnde)`current_pos
        = ns4`pan_msg_waiting(pnde)`last_pos) AND
    (ns6`pan_msg_waiting
             (pnde)`current_pos
         = ns5`pan_msg_waiting(pnde)`last_pos) AND
    % (ns5`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns5`pan_msg_waiting(coord_node)`buf_status /= full) AND
    % (ns6`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns6`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6`pan_msg_waiting
             (coord_node)`current_pos
         = ns5`pan_msg_waiting(coord_node)`last_pos) AND
    % (ns7`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns7`pan_msg_waiting(coord_node)`buf_status /= full) AND
  
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     %(ds`m /= off) AND
     %((ps`ip_state(d))`m /= off) AND 
     (is`mode = d_mode) AND
     (is`disp_focus = device_focus) AND
     ((is`disp_top)`patients)(p) AND 
     (( (is`coord_db)(p)`p_devices(d) = infusion_pump AND
       ((ps`p_disp_top)`devs(d) = infusion_pump) AND
       (ds`m /= off)) 
       OR
       ( (is`coord_db)(p)`p_devices(d) = vital_signs_device AND
       ((ps`p_disp_top)`devs(d) = vital_signs_device) AND
       ps`vital_signs`power))
      AND
     ((is`disp_patient)`current_patient = p) AND
     (is`disp_device)`current_device = d AND
     is`disp_device`av_c_disp(a)
     %((ps`p_disp_top)`devs(d) = infusion_pump) % AND
    % ps`pmode = d_mode AND
    % (ps`p_disp_top`sel_device = (# dv := d, dt := infusion_pump #)) AND
    % relate_ip_to_pan(ds) AND
    % consistent_coordinator_d(d, p, st) AND
    % (ps`emode = edit_none) AND
    % c_d_per_action(a, is)
IMPLIES
c_d_fun_action(a, st)`p_nodes = st`p_nodes AND
c_d_fun_action(a, st)`d_nodes = st`d_nodes AND
%c_d_fun_action(a, st)`coord_st = st`coord_st AND
nde(c_d_fun_action(a, st)`pdb(p)) = nde(ps) AND
%p_fun_act(a, d, p, st)`pdb(p)`nde = ps`nde AND
c_d_fun_action(a, st)`pdb(p)`pmode = ps`pmode AND
c_d_fun_action(a, st)`pdb(p)`p_disp_top`sel_device = 
     ps`p_disp_top`sel_device AND
c_d_fun_action(a, st)`pdb(p)`emode = ps`emode AND
c_d_fun_action(a, st)`nde_state`n_links = ns`n_links AND
c_d_fun_action(a, st)`ps = st`ps AND
c_d_fun_action(a, st)`pdb(p)`p_disp_top`devs = ps`p_disp_top`devs AND
(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
         nde(c_d_fun_action(a, st)`pdb(p)`ip_state(d)) = nde(ds)) AND
(((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES
         nde(c_d_fun_action(a, st)`pdb(p)`vital_signs) = nde(vs)) AND
c_d_fun_action(a, st)`coord_st`mode = is`mode AND
c_d_fun_action(a, st)`coord_st`disp_focus = is`disp_focus AND
c_d_fun_action(a, st)`coord_st`disp_patient`current_patient = is`disp_patient`current_patient AND
c_d_fun_action(a, st)`coord_st`disp_device`current_device = is`disp_device`current_device AND
c_d_fun_action(a, st)`coord_st`coord_db(p)`p_devices = is`coord_db(p)`p_devices AND 
c_d_fun_action(a, st)`coord_st`disp_top`patients = is`disp_top`patients AND
(c_d_fun_action(a, st)`coord_st`coord_db)(p)`d_available_actions(d) = (is`coord_db)(p)`d_available_actions(d) AND
((ps`p_disp_top)`devs(d) = infusion_pump
        IMPLIES (c_d_fun_action(a, st)`pdb(p)`ip_state(d) =
           tick(execute_ip(a, st`pdb(p)`ip_state(d))))) AND
 (((ps`p_disp_top)`devs(d) = vital_signs_device)
          IMPLIES (c_d_fun_action(a, st)`pdb(p)`vital_signs =
           tick_vs(execute_vs(a, st`pdb(p)`vital_signs)))) AND
c_d_fun_action(a, st)`coord_st`coord_db(p)`coord_devices(d)`pars = 
       is`coord_db(p)`coord_devices(d)`pars AND
(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES 
c_d_fun_action(a, st)`coord_st`coord_db(p)`coord_devices(d)`cmds = 
        (LAMBDA (b: action_id):
         (is`coord_db(p))`d_available_actions(d)(b) AND
          available_act(tick(execute_ip(a,
                                        st`pdb(p)`ip_state(d)))`pan,
                        tick(execute_ip(a,
                                        st`pdb(p)`ip_state(d))))`cmds
              (b))) AND
((((ps`p_disp_top)`devs(d) = vital_signs_device)) IMPLIES 
c_d_fun_action(a, st)`coord_st`coord_db(p)`coord_devices(d)`cmds = 
        (LAMBDA (b: action_id):
         (is`coord_db(p))`d_available_actions(d)(b) AND
          available_act(tick_vs(execute_vs(a,
                                        st`pdb(p)`vital_signs))`pan,
                        tick_vs(execute_vs(a,
                                        st`pdb(p)`vital_signs)))`cmds
              (b)))

% QED c_d_fun_action_lemma_onal proved by nmdh4 on Thu, 02 Feb 2023 17:28:41 GMT
% QED c_d_fun_action_lemma_onal proved by nmdh4 on Mon, 06 Feb 2023 16:52:43 GMT
% @QED c_d_fun_action_lemma_onal proved by nmdh4 on Wed, 15 Mar 2023 15:51:32 GMT
c_d_fun_action_lemma_onal: LEMMA
 FORALL (a: action_id, d: device, p: patient, st: state):
 LET ps = st`pdb(p), 
    ds = ps`ip_state(d),
    pnde = nde(ps), 
   % d = ((ps`p_disp_top)`sel_device)`dv,
    dnde = IF ps`p_disp_top`devs(d) = infusion_pump THEN ps`ip_state(d)`nde
           ELSE ps`vital_signs`nde ENDIF, 
    ns = st`nde_state,
    is = st`coord_st,
    st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    ns2 = st2`nde_state,
    st3 = tick_act_patient(p, st2),
    ns3 = st3`nde_state,
    st4 = tick_act_device(d, p, st3),
    ns4 = st4`nde_state,
    st5 = tick_pan_device(d, p, st4),
    ns5 = st5`nde_state,
    st6 = tick_pan_patient(p, st5),
    ns6 = st6`nde_state,
    st7 = tick_pan_coordinator(st6),
    ns7 = st7`nde_state
    
    IN  
    ns`n_links(pnde, coord_node) AND 
    ns`n_links(coord_node, pnde) AND 
    ns`n_links(pnde, dnde) AND 
    ns`n_links(dnde, pnde) AND 
    (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
   %  (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
   % (ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
   %  (ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
   %  (ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
   % (ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
    (ns4`pan_msg_waiting(pnde)`buf_status /= full) AND
   %  (ns4`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5`pan_msg_waiting(pnde)`buf_status /= full) AND
    % (ns5`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5`pan_msg_waiting
           (pnde)`current_pos
        = ns4`pan_msg_waiting(pnde)`last_pos) AND
    % (ns5`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns5`pan_msg_waiting(coord_node)`buf_status /= full) AND
    %(ns6`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns6`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6`pan_msg_waiting
             (pnde)`current_pos
         = ns5`pan_msg_waiting(pnde)`last_pos) AND
    (ns6`pan_msg_waiting
             (coord_node)`current_pos
         = ns5`pan_msg_waiting(coord_node)`last_pos) AND
    %(ns7`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns7`pan_msg_waiting(coord_node)`buf_status /= full) AND
  
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
      (is`mode = d_mode) AND
     (is`disp_focus = device_focus) AND
     ((is`disp_top)`patients)(p) AND 
     (( (is`coord_db)(p)`p_devices(d) = infusion_pump AND
       ((ps`p_disp_top)`devs(d) = infusion_pump) AND
       (ds`m /= off)) OR
       ( (is`coord_db)(p)`p_devices(d) = vital_signs_device AND
       ((ps`p_disp_top)`devs(d) = vital_signs_device) AND
       ps`vital_signs`power)) AND
     ((is`disp_patient)`current_patient = p) AND
     (is`disp_device)`current_device = d AND
      consistent_coordinator_d(d, p, st) AND
      c_d_per_action(a, is)   
     IMPLIES
     ((ps`p_disp_top`devs(d) = infusion_pump) IMPLIES
         (c_d_fun_action(a, st)`pdb(p)`ip_state(d)`m /= off)) AND
    (((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES
         (c_d_fun_action(a, st)`pdb(p)`vital_signs`power)) AND        
     ((((st`pdb(p)`ip_state(d)`rate < st`pdb(p)`ip_state(d)`vtbi) AND 
        (ps`p_disp_top)`devs(d) = infusion_pump) AND
       (st`pdb(p)`ip_state(d)`rate < maxrate) AND
         (st`pdb(p)`ip_state(d)`time < maxtime) AND
         (st`pdb(p)`ip_state(d)`vtbi < maxinfuse) AND
         (st`pdb(p)`ip_state(d)`rate >= 1) AND
         (st`pdb(p)`ip_state(d)`time >= 1) AND
         (st`pdb(p)`ip_state(d)`vtbi >= 1)  AND
         ((ps`ip_state(d))`dm /= dalarm)
        ) IMPLIES 
            c_d_fun_action(a, st)`pdb(p)`ip_state(d)`dm /= dalarm)

% QED lemma_reflect_device_consistent_c_d proved by nmdh4 on Thu, 16 Jun 2022 16:15:56 GMT
% QED lemma_reflect_device_consistent_c_d proved by nmdh4 on Thu, 20 Oct 2022 13:42:46 GMT
% QED lemma_reflect_device_consistent_c_d proved by nmdh4 on Tue, 17 Jan 2023 14:05:51 GMT
% QED lemma_reflect_device_consistent_c_d proved by nmdh4 on Wed, 15 Mar 2023 17:05:01 GMT
% QED lemma_reflect_device_consistent_c_d proved by nmdh4 on Wed, 17 May 2023 08:51:04 GMT
% @QED lemma_reflect_device_consistent_c_d proved by nmdh4 on Tue, 20 Jun 2023 13:31:20 GMT
lemma_reflect_device_consistent_c_d: LEMMA
FORALL (p: patient, d: device, st: state):
LET st1 = tick_pan_device(d, p, st),
    st2 = tick_pan_patient(p, st1),
    st3 = tick_pan_coordinator(st2),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
   % vs = ps`vital_signs,
    is = st`coord_st, 
    vc = (is`coord_db)(p), 
    ps1 = st1`pdb(p),
    ns1 = st1`nde_state,
    is1 = st1`coord_st,
    %vc1 = (is1`coord_db)(p), 
    ps2 = st2`pdb(p),
    ns2 = st2`nde_state,
    is2 = st2`coord_st,
    ns3 = st3`nde_state,
    %vc2 = (is2`coord_db)(p), 
    pnde = ps`nde,
     dnde = IF ps`p_disp_top`devs(d) = infusion_pump THEN ps`ip_state(d)`nde
           ELSE ps`vital_signs`nde ENDIF
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % (ps`pmode = d_mode) AND
    % (ps`p_disp_top`sel_device = (# dv := d, dt := infusion_pump #)) AND
    % (ps`p_disp_top`devs(d) = infusion_pump) AND
    % (is`coord_db(p)`p_devices(d) = infusion_pump) AND
   %  (ns3`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns3`pan_msg_waiting(coord_node)`buf_status /= full) AND
    %(ns2`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns2`pan_msg_waiting(coord_node)`buf_status /= full) AND
    % (ns1`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns1`pan_msg_waiting(pnde)`buf_status /= full) AND
    % (ns1`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns1`pan_msg_waiting(coord_node)`buf_status /= full) AND
     (ns1`pan_msg_waiting(coord_node)`last_pos = ns2`pan_msg_waiting(coord_node)`current_pos) AND
    (ns`pan_msg_waiting(pnde)`last_pos = ns1`pan_msg_waiting(pnde)`current_pos) AND
    (ns`pan_msg_waiting(pnde)`buf_status /= full) AND
    %(ns`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (( (is`coord_db)(p)`p_devices(d) = infusion_pump AND
       ((ps`p_disp_top)`devs(d) = infusion_pump) AND
       ds`m /= off) 
      OR
       ( (is`coord_db)(p)`p_devices(d) = vital_signs_device AND
       ((ps`p_disp_top)`devs(d) = vital_signs_device) AND
        ps`vital_signs`power)) 
    AND
    (is`disp_top)`patients(p)
IMPLIES
consistent_coordinator_d(d, p, reflect_device_to_coordinator(d, p, st))

% QED setup_coordinator_shortcut_devdisp proved by nmdh4 on Tue, 17 Jan 2023 16:30:04 GMT
% QED setup_coordinator_shortcut_devdisp proved by nmdh4 on Thu, 16 Mar 2023 11:34:20 GMT
% @QED setup_coordinator_shortcut_devdisp proved by nmdh4 on Wed, 17 May 2023 09:10:25 GMT
setup_coordinator_shortcut_devdisp: LEMMA
FORALL (d: device, p: patient, st: state):
    LET st1 = tick_pan_device(d, p, st),
    st2 = tick_pan_patient(p, st1),
    st3 = tick_pan_coordinator(st2),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    vs = ps`vital_signs,
    is = st`coord_st, 
    vc = (is`coord_db)(p), 
    ps1 = st1`pdb(p),
    ns1 = st1`nde_state,
    is1 = st1`coord_st,
    %vc1 = (is1`coord_db)(p), 
    ps2 = st2`pdb(p),
    ns2 = st2`nde_state,
    is2 = st2`coord_st,
    ps3 = st3`pdb(p),
    ns3 = st3`nde_state,
    is3 = st3`coord_st,
    %vc2 = (is2`coord_db)(p), 
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF,
    pnde_pan_q = ns`pan_msg_waiting(pnde),
    coord_pan_q1 = ns1`pan_msg_waiting(coord_node),
    
    ns = st`nde_state,
    ns1 = st1`nde_state,
    pat_buff1 = ns1`pan_msg_waiting(pnde)
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
      % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    (( (is`coord_db)(p)`p_devices(d) = infusion_pump AND
       ((ps`p_disp_top)`devs(d) = infusion_pump) AND
       (ds`m /= off)) OR
       ( (is`coord_db)(p)`p_devices(d) = vital_signs_device AND
       ((ps`p_disp_top)`devs(d) = vital_signs_device) AND
       ps`vital_signs`power))  AND
    % (ps`p_disp_top`sel_device = (# dv := d, dt := infusion_pump #)) AND
    % patient controller assumptions
    % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
   % (st`patient_menus = init_patient_menu) AND 
    ((is`disp_top)`patients)(p) AND 
    (is`mode = d_mode) AND
     (is`disp_focus = device_focus) AND
    ((is`disp_patient)`current_patient = p) AND
     (is`disp_device)`current_device = d AND
   %  (ns3`pan_msg_waiting(coord_node)`last_pos < mindex) AND
   % (ns3`pan_msg_waiting(coord_node)`buf_status /= full) AND
   %  (ns2`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns2`pan_msg_waiting(coord_node)`buf_status /= full) AND
   % (ns1`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns1`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns1`pan_msg_waiting(coord_node)`last_pos = ns2`pan_msg_waiting(coord_node)`current_pos) AND
 %    (ns1`pan_msg_waiting(pnde)`last_pos = ns2`pan_msg_waiting(pnde)`current_pos) AND
   % (ns1`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns1`pan_msg_waiting(pnde)`buf_status /= full) AND
    (ns`pan_msg_waiting(pnde)`last_pos = ns1`pan_msg_waiting(pnde)`current_pos) AND
    (ns`pan_msg_waiting(pnde)`buf_status /= full) % AND
   % (ns`pan_msg_waiting(pnde)`last_pos < mindex)
    IMPLIES
((ps`p_disp_top)`devs(d) = infusion_pump IMPLIES 
reflect_device_to_coordinator(d, p, st)`coord_st`disp_device`e_disp
        = filter_panel(tick(st`pdb(p)`ip_state(d))`pan, 
                        is`coord_db(p)`coord_devices(d)`pars,
                        is`coord_db(p)`d_available_actions(d))`enum_disp) AND
((ps`p_disp_top)`devs(d) = vital_signs_device IMPLIES 
reflect_device_to_coordinator(d, p, st)`coord_st`disp_device`e_disp
        = filter_panel(tick_vs(st`pdb(p)`vital_signs)`pan, 
                        is`coord_db(p)`coord_devices(d)`pars,
                        is`coord_db(p)`d_available_actions(d))`enum_disp) AND
((ps`p_disp_top)`devs(d) = infusion_pump IMPLIES 
reflect_device_to_coordinator(d, p, st)`coord_st`disp_device`n_disp
        = filter_panel(tick(st`pdb(p)`ip_state(d))`pan, 
                        is`coord_db(p)`coord_devices(d)`pars,
                        is`coord_db(p)`d_available_actions(d))`num_disp) AND
((ps`p_disp_top)`devs(d) = vital_signs_device IMPLIES 
reflect_device_to_coordinator(d, p, st)`coord_st`disp_device`n_disp
        = filter_panel(tick_vs(st`pdb(p)`vital_signs)`pan, 
                        is`coord_db(p)`coord_devices(d)`pars,
                        is`coord_db(p)`d_available_actions(d))`num_disp)

% QED setup_coordinator_shortcut_devdisp_fun_act proved by nmdh4 on Wed, 18 May 2022 08:44:28 GMT
% QED setup_coordinator_shortcut_devdisp_fun_act proved by nmdh4 on Wed, 18 May 2022 14:25:53 GMT
% QED setup_coordinator_shortcut_devdisp_fun_act proved by nmdh4 on Fri, 21 Oct 2022 10:11:18 GMT
% QED setup_coordinator_shortcut_devdisp_fun_act proved by nmdh4 on Tue, 17 Jan 2023 17:20:06 GMT
% QED setup_coordinator_shortcut_devdisp_fun_act proved by nmdh4 on Wed, 18 Jan 2023 09:51:37 GMT
% @QED setup_coordinator_shortcut_devdisp_fun_act proved by nmdh4 on Thu, 16 Mar 2023 11:56:58 GMT
setup_coordinator_shortcut_devdisp_fun_act: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
    LET ps = st`pdb(p), 
    ds = ps`ip_state(d),
    pnde = nde(ps), 
   % d = ((ps`p_disp_top)`sel_device)`dv,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF, 
    ns = st`nde_state,
    is = st`coord_st,
    st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    ns2 = st2`nde_state,
    st3 = tick_act_patient(p, st2),
    ns3 = st3`nde_state,
    st4 = tick_act_device(d, p, st3),
    ns4 = st4`nde_state,
    st5 = tick_pan_device(d, p, st4),
    ns5 = st5`nde_state,
    st6 = tick_pan_patient(p, st5),
    ns6 = st6`nde_state,
    st7 = tick_pan_coordinator(st6),
    ns7 = st7`nde_state
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
    ns`n_links(coord_node, pnde) AND 
    ns`n_links(pnde, dnde) AND 
    ns`n_links(dnde, pnde) AND 
    (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
      % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     (( (is`coord_db)(p)`p_devices(d) = infusion_pump AND
       ((ps`p_disp_top)`devs(d) = infusion_pump) AND
       (ds`m /= off)) OR
       ( (is`coord_db)(p)`p_devices(d) = vital_signs_device AND
       ((ps`p_disp_top)`devs(d) = vital_signs_device) AND
       ps`vital_signs`power))  AND
    % (ps`p_disp_top`sel_device = (# dv := d, dt := infusion_pump #)) AND
    % patient controller assumptions
    % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
   % (st`patient_menus = init_patient_menu) AND 
    ((is`disp_top)`patients)(p) AND 
    (is`mode = d_mode) AND
     (is`disp_focus = device_focus) AND
     ((is`disp_patient)`current_patient = p) AND
     (is`disp_device)`current_device = d AND
     %is`disp_device`av_c_disp(a) AND
   (ns`act_msg_waiting(pnde)`buf_status /= full) AND
   %  (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
   %  (ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
    % (ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
    % (ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    % (ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
    (ns4`pan_msg_waiting(pnde)`buf_status /= full) AND
   % (ns4`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5`pan_msg_waiting(pnde)`buf_status /= full) AND
   % (ns5`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5`pan_msg_waiting
           (pnde)`current_pos
        = ns4`pan_msg_waiting(pnde)`last_pos) AND
    (ns6`pan_msg_waiting
             (pnde)`current_pos
         = ns5`pan_msg_waiting(pnde)`last_pos) AND
    % (ns5`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns5`pan_msg_waiting(coord_node)`buf_status /= full) AND
    %(ns6`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns6`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6`pan_msg_waiting
             (coord_node)`current_pos
         = ns5`pan_msg_waiting(coord_node)`last_pos) AND
    % (ns7`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns7`pan_msg_waiting(coord_node)`buf_status /= full) AND
    c_d_per_action(a, is)
    IMPLIES
(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES 
   c_d_fun_actionx(a, st)`coord_st`disp_device`e_disp
        = filter_panel(tick(c_fun_act(a, d, p, st)`pdb(p)`ip_state(d))`pan, 
                        is`coord_db(p)`coord_devices(d)`pars,
                        is`coord_db(p)`d_available_actions(d))`enum_disp) AND
(((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES 
   c_d_fun_actionx(a, st)`coord_st`disp_device`e_disp
        = filter_panel(tick_vs(c_fun_act(a, d, p, st)`pdb(p)`vital_signs)`pan, 
                        is`coord_db(p)`coord_devices(d)`pars,
                        is`coord_db(p)`d_available_actions(d))`enum_disp) AND
(((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES 
c_d_fun_actionx(a, st)`coord_st`disp_device`n_disp
        = filter_panel(tick(c_fun_act(a, d, p, st)`pdb(p)`ip_state(d))`pan, 
                        is`coord_db(p)`coord_devices(d)`pars,
                        is`coord_db(p)`d_available_actions(d))`num_disp) AND
(((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES 
c_d_fun_actionx(a, st)`coord_st`disp_device`n_disp
        = filter_panel(tick_vs(c_fun_act(a, d, p, st)`pdb(p)`vital_signs)`pan, 
                        is`coord_db(p)`coord_devices(d)`pars,
                        is`coord_db(p)`d_available_actions(d))`num_disp)


% QED setup_coordinator_shortcut_devdisp_cmds proved by nmdh4 on Wed, 18 May 2022 10:21:04 GMT
% QED setup_coordinator_shortcut_devdisp_cmds proved by nmdh4 on Wed, 18 May 2022 14:28:09 GMT
% QED setup_coordinator_shortcut_devdisp_cmds proved by nmdh4 on Fri, 21 Oct 2022 10:16:40 GMT
% QED setup_coordinator_shortcut_devdisp_cmds proved by nmdh4 on Tue, 17 Jan 2023 17:26:03 GMT
% QED setup_coordinator_shortcut_devdisp_cmds proved by nmdh4 on Wed, 18 Jan 2023 09:55:06 GMT
% QED setup_coordinator_shortcut_devdisp_cmds proved by nmdh4 on Thu, 16 Mar 2023 12:09:41 GMT
% @QED setup_coordinator_shortcut_devdisp_cmds proved by nmdh4 on Wed, 17 May 2023 09:19:46 GMT
setup_coordinator_shortcut_devdisp_cmds: LEMMA
FORALL (d: device, p: patient, st: state):
    LET st1 = tick_pan_device(d, p, st),
    st2 = tick_pan_patient(p, st1),
    st3 = tick_pan_coordinator(st2),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
    vs = ps`vital_signs,
    is = st`coord_st, 
    vc = (is`coord_db)(p), 
    ps1 = st1`pdb(p),
    ns1 = st1`nde_state,
    is1 = st1`coord_st,
    %vc1 = (is1`coord_db)(p), 
    ps2 = st2`pdb(p),
    ns2 = st2`nde_state,
    is2 = st2`coord_st,
    ps3 = st3`pdb(p),
    ns3 = st3`nde_state,
    is3 = st3`coord_st,
    %vc2 = (is2`coord_db)(p), 
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF, 
    pnde_pan_q = ns`pan_msg_waiting(pnde),
    coord_pan_q1 = ns1`pan_msg_waiting(coord_node),
    
    ns = st`nde_state,
    ns1 = st1`nde_state,
    pat_buff1 = ns1`pan_msg_waiting(pnde)
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
      % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     (( (is`coord_db)(p)`p_devices(d) = infusion_pump AND
       ((ps`p_disp_top)`devs(d) = infusion_pump) AND
       (ds`m /= off)) OR
       ( (is`coord_db)(p)`p_devices(d) = vital_signs_device AND
       ((ps`p_disp_top)`devs(d) = vital_signs_device) AND
       ps`vital_signs`power))  AND
    % (ps`p_disp_top`sel_device = (# dv := d, dt := infusion_pump #)) AND
    % patient controller assumptions
    % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
   % (st`patient_menus = init_patient_menu) AND 
    ((is`disp_top)`patients)(p) AND 
    (is`mode = d_mode) AND
     (is`disp_focus = device_focus) AND
      ((is`disp_patient)`current_patient = p) AND
     (is`disp_device)`current_device = d AND
   %  (ns3`pan_msg_waiting(coord_node)`last_pos < mindex) AND
   % (ns3`pan_msg_waiting(coord_node)`buf_status /= full) AND
    % (ns2`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns2`pan_msg_waiting(coord_node)`buf_status /= full) AND
    % (ns1`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns1`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns1`pan_msg_waiting(coord_node)`last_pos = ns2`pan_msg_waiting(coord_node)`current_pos) AND
 %    (ns1`pan_msg_waiting(pnde)`last_pos = ns2`pan_msg_waiting(pnde)`current_pos) AND
   % (ns1`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns1`pan_msg_waiting(pnde)`buf_status /= full) AND
    (ns`pan_msg_waiting(pnde)`last_pos = ns1`pan_msg_waiting(pnde)`current_pos) AND
    (ns`pan_msg_waiting(pnde)`buf_status /= full) %AND
   % (ns`pan_msg_waiting(pnde)`last_pos < mindex)
    IMPLIES
((ps`p_disp_top)`devs(d) = infusion_pump IMPLIES  reflect_device_to_coordinator(d, p, st)`coord_st`disp_device`av_c_disp
        = filter_panel(available_act(tick(st`pdb(p)`ip_state(d))`pan, tick(st`pdb(p)`ip_state(d))), 
                        is`coord_db(p)`coord_devices(d)`pars,
                        is`coord_db(p)`d_available_actions(d))`cmds) AND
((ps`p_disp_top)`devs(d) = vital_signs_device IMPLIES  reflect_device_to_coordinator(d, p, st)`coord_st`disp_device`av_c_disp
        = filter_panel(available_act(tick_vs(st`pdb(p)`vital_signs)`pan, tick_vs(st`pdb(p)`vital_signs)), 
                        is`coord_db(p)`coord_devices(d)`pars,
                        is`coord_db(p)`d_available_actions(d))`cmds)

% QED setup_coordinator_shortcut_cmds_dev_disp_fun_act proved by nmdh4 on Wed, 18 May 2022 11:33:21 GMT
% QED setup_coordinator_shortcut_cmds_dev_disp_fun_act proved by nmdh4 on Wed, 18 May 2022 14:31:52 GMT
% QED setup_coordinator_shortcut_cmds_dev_disp_fun_act proved by nmdh4 on Mon, 20 Jun 2022 12:42:21 GMT
% QED setup_coordinator_shortcut_cmds_dev_disp_fun_act proved by nmdh4 on Thu, 27 Oct 2022 13:44:18 GMT
% QED setup_coordinator_shortcut_cmds_dev_disp_fun_act proved by nmdh4 on Tue, 17 Jan 2023 17:48:56 GMT
% QED setup_coordinator_shortcut_cmds_dev_disp_fun_act proved by nmdh4 on Wed, 18 Jan 2023 10:02:03 GMT
% @QED setup_coordinator_shortcut_cmds_dev_disp_fun_act proved by nmdh4 on Thu, 16 Mar 2023 12:20:24 GMT
setup_coordinator_shortcut_cmds_dev_disp_fun_act: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
    LET ps = st`pdb(p), 
    ds = ps`ip_state(d),
    pnde = nde(ps), 
   % d = ((ps`p_disp_top)`sel_device)`dv,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF, 
    ns = st`nde_state,
    is = st`coord_st,
    st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    ns2 = st2`nde_state,
    st3 = tick_act_patient(p, st2),
    ns3 = st3`nde_state,
    st4 = tick_act_device(d, p, st3),
    ns4 = st4`nde_state,
    st5 = tick_pan_device(d, p, st4),
    ns5 = st5`nde_state,
    st6 = tick_pan_patient(p, st5),
    ns6 = st6`nde_state,
    st7 = tick_pan_coordinator(st6),
    ns7 = st7`nde_state
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
    ns`n_links(coord_node, pnde) AND 
    ns`n_links(pnde, dnde) AND 
    ns`n_links(dnde, pnde) AND 
    (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
      % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    (( (is`coord_db)(p)`p_devices(d) = infusion_pump AND
       ((ps`p_disp_top)`devs(d) = infusion_pump) AND
       (ds`m /= off)) OR
       ( (is`coord_db)(p)`p_devices(d) = vital_signs_device AND
       ((ps`p_disp_top)`devs(d) = vital_signs_device) AND
       ps`vital_signs`power)) AND
    % (ps`p_disp_top`sel_device = (# dv := d, dt := infusion_pump #)) AND
    % patient controller assumptions
    % ((ps`p_disp_top)`devs(d) = infusion_pump) AND
   % (st`patient_menus = init_patient_menu) AND 
    ((is`disp_top)`patients)(p) AND 
    (is`mode = d_mode) AND
     (is`disp_focus = device_focus) AND
     ((is`disp_patient)`current_patient = p) AND
     (is`disp_device)`current_device = d AND
     c_d_per_action(a, is) AND
   (ns`act_msg_waiting(pnde)`buf_status /= full) AND
   %  (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
   % (ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
    % (ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
    % (ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    % (ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
    (ns4`pan_msg_waiting(pnde)`buf_status /= full) AND
    % (ns4`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5`pan_msg_waiting(pnde)`buf_status /= full) AND
    % (ns5`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5`pan_msg_waiting
           (pnde)`current_pos
        = ns4`pan_msg_waiting(pnde)`last_pos) AND
    (ns6`pan_msg_waiting
             (pnde)`current_pos
         = ns5`pan_msg_waiting(pnde)`last_pos) AND
    % (ns5`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns5`pan_msg_waiting(coord_node)`buf_status /= full) AND
   % (ns6`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns6`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6`pan_msg_waiting
             (coord_node)`current_pos
         = ns5`pan_msg_waiting(coord_node)`last_pos) AND
    % (ns7`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns7`pan_msg_waiting(coord_node)`buf_status /= full) 
    IMPLIES
((ps`p_disp_top)`devs(d) = infusion_pump IMPLIES c_d_fun_actionx(a, st)`coord_st`disp_device`av_c_disp
        = filter_panel(available_act(tick(c_fun_act(a, d, p, st)`pdb(p)`ip_state(d))`pan, 
                       tick(c_fun_act(a, d, p, st)`pdb(p)`ip_state(d))),
                           is`coord_db(p)`coord_devices(d)`pars,
                             is`coord_db(p)`d_available_actions(d))`cmds) AND
((ps`p_disp_top)`devs(d) = vital_signs_device IMPLIES c_d_fun_actionx(a, st)`coord_st`disp_device`av_c_disp
        = filter_panel(available_act(tick_vs(c_fun_act(a, d, p, st)`pdb(p)`vital_signs)`pan, 
                       tick_vs(c_fun_act(a, d, p, st)`pdb(p)`vital_signs)),
                           is`coord_db(p)`coord_devices(d)`pars,
                             is`coord_db(p)`d_available_actions(d))`cmds)



% QED c_consistent_actionnxdevdisp proved by nmdh4 on Wed, 18 May 2022 14:58:57 GMT
% QED c_consistent_actionnxdevdisp proved by nmdh4 on Mon, 20 Jun 2022 16:01:17 GMT
% QED c_consistent_actionnxdevdisp proved by nmdh4 on Wed, 22 Jun 2022 08:11:09 GMT
% QED c_consistent_actionnxdevdisp proved by nmdh4 on Fri, 21 Oct 2022 10:25:32 GMT
% QED c_consistent_actionnxdevdisp proved by nmdh4 on Tue, 17 Jan 2023 18:17:56 GMT
% QED c_consistent_actionnxdevdisp proved by nmdh4 on Wed, 18 Jan 2023 10:40:44 GMT
% @QED c_consistent_actionnxdevdisp proved by nmdh4 on Thu, 16 Mar 2023 12:27:29 GMT
c_consistent_actionnxdevdisp: THEOREM
  FORALL (a: action_id, d: device, p: patient, st: state): 
  LET st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    ns2 = st2`nde_state,
    st3 = tick_act_patient(p, st2),
    ns3 = st3`nde_state,
    st4 = tick_act_device(d, p, st3),
    ns4 = st4`nde_state,
    st5 = tick_pan_device(d, p, st4),
    ns5 = st5`nde_state,
    st6 = tick_pan_patient(p, st5),
    ns6 = st6`nde_state,
    st7 = tick_pan_coordinator(st6),
    ns7 = st7`nde_state,
    ns = st`nde_state,
    ps = st`pdb(p),
    ds = ps`ip_state(d),
    is = st`coord_st,
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF %,
    IN
 % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
     %(ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     % (ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
     % (ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    % (ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns4`pan_msg_waiting(pnde)`buf_status /= full) AND
    % (ns4`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5`pan_msg_waiting(pnde)`buf_status /= full) AND
    % (ns5`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5`pan_msg_waiting
           (pnde)`current_pos
        = ns4`pan_msg_waiting(pnde)`last_pos) AND
    (ns6`pan_msg_waiting
             (pnde)`current_pos
         = ns5`pan_msg_waiting(pnde)`last_pos) AND
    % (ns5`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns5`pan_msg_waiting(coord_node)`buf_status /= full) AND
    % (ns6`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns6`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6`pan_msg_waiting
             (coord_node)`current_pos
         = ns5`pan_msg_waiting(coord_node)`last_pos) AND
    % (ns7`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns7`pan_msg_waiting(coord_node)`buf_status /= full) AND
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
    % patient controller assumptions
     (( (is`coord_db)(p)`p_devices(d) = infusion_pump AND
       ((ps`p_disp_top)`devs(d) = infusion_pump) AND
       (ds`m /= off)) OR
       ( (is`coord_db)(p)`p_devices(d) = vital_signs_device AND
       ((ps`p_disp_top)`devs(d) = vital_signs_device) AND
       ps`vital_signs`power)) AND
     (is`mode = d_mode) AND
     (is`disp_focus = device_focus) AND
     
     ((is`disp_patient)`current_patient = p) AND
     (is`disp_device)`current_device = d AND
     ((is`disp_top)`patients)(p) AND
   %  is`disp_device`av_c_disp(a) AND
    consistent_coordinator_d(d, p, st) AND
    c_d_per_action(a, is) IMPLIES
   % relate_ip_to_pan(ds) AND
    
    (((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
       c_d_fun_action(a, st)`coord_st`disp_device`e_disp =
       filter_panel(tick(execute_ip(a, ps`ip_state(d)))`pan, 
                        is`coord_db(p)`coord_devices(d)`pars,
                        is`coord_db(p)`d_available_actions(d))`enum_disp) AND
    
      (((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
        c_d_fun_action(a, st)`coord_st`disp_device`n_disp =
       filter_panel(tick(execute_ip(a, ps`ip_state(d)))`pan, 
                        is`coord_db(p)`coord_devices(d)`pars,
                        is`coord_db(p)`d_available_actions(d))`num_disp) AND    
    (((ps`p_disp_top)`devs(d) = infusion_pump) IMPLIES
      c_d_fun_action(a, st)`coord_st`disp_device`av_c_disp
        = filter_panel(available_act(tick(execute_ip(a, ps`ip_state(d)))`pan, 
                                     tick(execute_ip(a, ps`ip_state(d)))), 
                                     is`coord_db(p)`coord_devices(d)`pars,
                                     is`coord_db(p)`d_available_actions(d))`cmds) AND
    (((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES
       c_d_fun_action(a, st)`coord_st`disp_device`e_disp =
       filter_panel(tick_vs(execute_vs(a, ps`vital_signs))`pan, 
                        is`coord_db(p)`coord_devices(d)`pars,
                        is`coord_db(p)`d_available_actions(d))`enum_disp) AND
    (((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES
        c_d_fun_action(a, st)`coord_st`disp_device`n_disp =
       filter_panel(tick_vs(execute_vs(a, ps`vital_signs))`pan, 
                        is`coord_db(p)`coord_devices(d)`pars,
                        is`coord_db(p)`d_available_actions(d))`num_disp) AND    
    (((ps`p_disp_top)`devs(d) = vital_signs_device) IMPLIES
      c_d_fun_action(a, st)`coord_st`disp_device`av_c_disp
        = filter_panel(available_act(tick_vs(execute_vs(a, ps`vital_signs))`pan, 
                                     tick_vs(execute_vs(a, ps`vital_signs))), 
                                     is`coord_db(p)`coord_devices(d)`pars,
                                     is`coord_db(p)`d_available_actions(d))`cmds)


% QED c_access_devdisp proved by nmdh4 on Wed, 22 Jun 2022 08:37:31 GMT
% QED c_access_devdisp proved by nmdh4 on Wed, 22 Jun 2022 14:34:38 GMT
% QED c_access_devdisp proved by nmdh4 on Fri, 21 Oct 2022 16:11:58 GMT
% QED c_access_devdisp proved by nmdh4 on Wed, 18 Jan 2023 14:53:30 GMT
% QED c_access_devdisp proved by nmdh4 on Fri, 03 Feb 2023 14:53:47 GMT
% QED c_access_devdisp proved by nmdh4 on Mon, 06 Feb 2023 12:36:56 GMT
% @QED c_access_devdisp proved by nmdh4 on Thu, 16 Mar 2023 12:33:05 GMT
c_access_devdisp: LEMMA
 FORALL (d: device, p: patient, st: state):
%FORALL (b: action_id):
 LET st1h = coordinator_enter_action(hold, st),
    st2h = coord_act_mono(st1h),
    ns2h = st2h`nde_state,
    st3h = tick_act_patient(p, st2h),
    ns3h = st3h`nde_state,
    st4h = tick_act_device(d, p, st3h),
    ns4h = st4h`nde_state,
    st5h = tick_pan_device(d, p, st4h),
    ns5h = st5h`nde_state,
    st6h = tick_pan_patient(p, st5h),
    ns6h = st6h`nde_state,
    st7h = tick_pan_coordinator(st6h),
    ns7h = st7h`nde_state,
    st1c = coordinator_enter_action(confirm, st),
    st2c = coord_act_mono(st1c),
    ns2c = st2c`nde_state,
    st3c = tick_act_patient(p, st2c),
    ns3c = st3c`nde_state,
    st4c = tick_act_device(d, p, st3c),
    ns4c = st4c`nde_state,
    st5c = tick_pan_device(d, p, st4c),
    ns5c = st5c`nde_state,
    st6c = tick_pan_patient(p, st5c),
    ns6c = st6c`nde_state,
    st7c = tick_pan_coordinator(st6c),
    ns7c = st7c`nde_state,
    ns = st`nde_state,
    ps = st`pdb(p),
    ds = ps`ip_state(d),
    is = st`coord_st,
    pnde = ps`nde,
    dnde = ps`ip_state(d)`nde
    IN  
    ns`n_links(pnde, coord_node) AND 
    ns`n_links(coord_node, pnde) AND 
    ns`n_links(pnde, dnde) AND 
    ns`n_links(dnde, pnde) AND 
    (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
    (ns`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2c`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns2c`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2c`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2c`act_msg_waiting(dnde)`buf_status /= full) AND
    % (ns2c`act_msg_waiting(dnde)`last_pos < mindex) AND
    % (ns3c`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3c`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3c`act_msg_waiting
           (dnde)`current_pos
        = ns2c`act_msg_waiting(dnde)`last_pos) AND
    %(ns4c`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4c`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns4c`pan_msg_waiting(pnde)`buf_status /= full) AND
    %(ns4c`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5c`pan_msg_waiting(pnde)`buf_status /= full) AND
    %(ns5c`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5c`pan_msg_waiting
           (pnde)`current_pos
        = ns4c`pan_msg_waiting(pnde)`last_pos) AND
    (ns6c`pan_msg_waiting
             (pnde)`current_pos
         = ns5c`pan_msg_waiting(pnde)`last_pos) AND
    %(ns5c`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns5c`pan_msg_waiting(coord_node)`buf_status /= full) AND
    %(ns6c`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns6c`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6c`pan_msg_waiting
             (coord_node)`current_pos
         = ns5c`pan_msg_waiting(coord_node)`last_pos) AND
    %(ns7c`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns7c`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns2h`act_msg_waiting(pnde)`buf_status /= full) AND
     %(ns2h`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2h`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2h`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns2h`act_msg_waiting(dnde)`last_pos < mindex) AND
     %(ns3h`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3h`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3h`act_msg_waiting
           (dnde)`current_pos
        = ns2h`act_msg_waiting(dnde)`last_pos) AND
    %(ns4h`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4h`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns4h`pan_msg_waiting(pnde)`buf_status /= full) AND
    %(ns4h`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5h`pan_msg_waiting(pnde)`buf_status /= full) AND
    %(ns5h`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5h`pan_msg_waiting
           (pnde)`current_pos
        = ns4h`pan_msg_waiting(pnde)`last_pos) AND
    (ns6h`pan_msg_waiting
             (pnde)`current_pos
         = ns5h`pan_msg_waiting(pnde)`last_pos) AND
    %(ns5h`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns5h`pan_msg_waiting(coord_node)`buf_status /= full) AND
    %(ns6h`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns6h`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6h`pan_msg_waiting
             (coord_node)`current_pos
         = ns5h`pan_msg_waiting(coord_node)`last_pos) AND
    %(ns7h`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns7h`pan_msg_waiting(coord_node)`buf_status /= full) AND
   
    % patient known to the system
     (p /= p_null) AND 
     st`ps(p) AND 
     (d /= nil_device) AND
  %   (a /= nil_action) AND (a /= powr) AND
     %((b = confirm) OR (b = hold)) AND
    % home_acts(b) AND
     (ds`m /= off) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     st`pdb(p)`p_disp_top`devs(d) = infusion_pump AND
    % (st`pdb(p)`ip_state(d)`rate < st`pdb(p)`ip_state(d)`vtbi) AND 
    % (st`pdb(p)`ip_state(d)`rate < maxrate) AND
    % (st`pdb(p)`ip_state(d)`time < maxtime) AND
    % (st`pdb(p)`ip_state(d)`vtbi < maxinfuse) AND
    %  (st`pdb(p)`ip_state(d)`rate >= 1) AND
    % (st`pdb(p)`ip_state(d)`time >= 1) AND
    % (st`pdb(p)`ip_state(d)`vtbi >= 1) AND 
     (st`pdb(p)`ip_state(d)`dm /= dalarm) AND
     % ((st`pdb(p)`ip_state(d))`prevdm /= dalarm) AND
     % establishing initial state relationship
     %res_act(a) AND
     %relate_ip_to_pan(ps`ip_state(d)) AND     
     consistent_coordinator_d(d, p, st) AND
    % c_d_per_action(a, is) AND
     (is`mode = d_mode) AND
     (is`disp_focus = device_focus) AND
     (is`coord_db(p)`p_devices(d) = infusion_pump) AND
     ((is`disp_patient)`current_patient = p) AND
     (is`disp_device)`current_device = d AND
     ((is`disp_top)`patients)(p) AND
     (is`coord_db(p)`coord_devices(d)`pars(mde)) AND % implies that if device displayed then parameter is displayed
     (is`coord_db(p)`coord_devices(d)`pars(dpm)) AND
     (is`coord_db)(p)`d_available_actions(d)(hold) AND % these actions have been made visible
     (is`coord_db)(p)`d_available_actions(d)(confirm) 
     IMPLIES
      (c_d_per_action(hold, is) IMPLIES 
        (c_d_fun_action(hold, st)`coord_st`disp_device`e_disp(dpm) =
       xmainmenu AND
     c_d_fun_action(hold, st)`coord_st`disp_device`e_disp(mde) =
       xpause)) AND
      (c_d_per_action(confirm, is) IMPLIES 
      (c_d_fun_action(confirm, st)`coord_st`disp_device`e_disp(dpm) =
       xmainmenu AND
     c_d_fun_action(confirm, st)`coord_st`disp_device`e_disp(mde) =
       xpause))

% QED c_access_devdispx proved by nmdh4 on Tue, 05 Jul 2022 10:04:06 GMT
% QED c_access_devdispx proved by nmdh4 on Tue, 05 Jul 2022 14:26:32 GMT
% QED c_access_devdispx proved by nmdh4 on Fri, 12 Aug 2022 09:51:00 GMT
% QED c_access_devdispx proved by nmdh4 on Mon, 24 Oct 2022 10:36:03 GMT
% QED c_access_devdispx proved by nmdh4 on Wed, 18 Jan 2023 16:37:00 GMT
% QED c_access_devdispx proved by nmdh4 on Fri, 03 Feb 2023 15:29:49 GMT
% @QED c_access_devdispx proved by nmdh4 on Thu, 16 Mar 2023 12:38:32 GMT
c_access_devdispx: LEMMA
 FORALL (a: action_id, d: device, p: patient, st: state):
%FORALL (b: action_id):
 LET st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    ns2 = st2`nde_state,
    st3 = tick_act_patient(p, st2),
    ns3 = st3`nde_state,
    st4 = tick_act_device(d, p, st3),
    ns4 = st4`nde_state,
    st5 = tick_pan_device(d, p, st4),
    ns5 = st5`nde_state,
    st6 = tick_pan_patient(p, st5),
    ns6 = st6`nde_state,
    st7 = tick_pan_coordinator(st6),
    ns7 = st7`nde_state,
    ns = st`nde_state,
    ps = st`pdb(p),
    ds = ps`ip_state(d),
    is = st`coord_st,
    pnde = ps`nde,
    dnde = ps`ip_state(d)`nde
    IN  
    ns`n_links(pnde, coord_node) AND 
    ns`n_links(coord_node, pnde) AND 
    ns`n_links(pnde, dnde) AND 
    ns`n_links(dnde, pnde) AND 
    (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
    (ns`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
    % (ns2`act_msg_waiting(pnde)`last_pos < mindex) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     %(ns2`act_msg_waiting(dnde)`last_pos < mindex) AND
     %(ns3`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
    %(ns4`act_msg_waiting(dnde)`last_pos < mindex) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns4`pan_msg_waiting(pnde)`buf_status /= full) AND
    %(ns4`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5`pan_msg_waiting(pnde)`buf_status /= full) AND
    %(ns5`pan_msg_waiting(pnde)`last_pos < mindex) AND
    (ns5`pan_msg_waiting
           (pnde)`current_pos
        = ns4`pan_msg_waiting(pnde)`last_pos) AND
    (ns6`pan_msg_waiting
             (pnde)`current_pos
         = ns5`pan_msg_waiting(pnde)`last_pos) AND
    %(ns5`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns5`pan_msg_waiting(coord_node)`buf_status /= full) AND
    %(ns6`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns6`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6`pan_msg_waiting
             (coord_node)`current_pos
         = ns5`pan_msg_waiting(coord_node)`last_pos) AND
    %(ns7`pan_msg_waiting(coord_node)`last_pos < mindex) AND
    (ns7`pan_msg_waiting(coord_node)`buf_status /= full) AND
    
   
    % patient known to the system
     (p /= p_null) AND 
     st`ps(p) AND 
     (d /= nil_device) AND
  %   (a /= nil_action) AND (a /= powr) AND
     %((b = confirm) OR (b = hold)) AND
    % home_acts(b) AND
     (ds`m /= off) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     st`pdb(p)`p_disp_top`devs(d) = infusion_pump AND
     (st`pdb(p)`ip_state(d)`rate < st`pdb(p)`ip_state(d)`vtbi) AND 
     (st`pdb(p)`ip_state(d)`rate < maxrate) AND
     (st`pdb(p)`ip_state(d)`time < maxtime) AND
     (st`pdb(p)`ip_state(d)`vtbi < maxinfuse) AND
      (st`pdb(p)`ip_state(d)`rate >= 1) AND
     (st`pdb(p)`ip_state(d)`time >= 1) AND
     (st`pdb(p)`ip_state(d)`vtbi >= 1) AND 
     (st`pdb(p)`ip_state(d)`dm /= dalarm) AND
   %   ((st`pdb(p)`ip_state(d))`prevdm /= dalarm) AND
     % establishing initial state relationship
     %res_act(a) AND
     %relate_ip_to_pan(ps`ip_state(d)) AND     
     consistent_coordinator_d(d, p, st) AND
    % (a = hold OR a = confirm) AND
    % c_d_per_action(a, is) AND
     (is`mode = d_mode) AND
     (is`disp_focus = device_focus) AND
     (is`coord_db(p)`p_devices(d) = infusion_pump) AND
     ((is`disp_patient)`current_patient = p) AND
     (is`disp_device)`current_device = d AND
     ((is`disp_top)`patients)(p) AND
     (is`coord_db(p)`coord_devices(d)`pars(mde)) AND % implies that if device displayed then parameter is displayed
     (is`coord_db(p)`coord_devices(d)`pars(dpm)) AND
     (is`coord_db)(p)`d_available_actions(d)(hold) AND % these actions have been made visible
     (is`coord_db)(p)`d_available_actions(d)(confirm) AND
     c_d_per_action(a, is)
     IMPLIES
     ((a = hold OR a = confirm)  IMPLIES 
        (c_d_fun_action(a, st)`coord_st`disp_device`e_disp(dpm) =
       xmainmenu)) AND
   (((a = hold OR a = confirm)) IMPLIES
     c_d_fun_action(a, st)`coord_st`disp_device`e_disp(mde) =
       xpause)


% QED panlemma1cfunact proved by nmdh4 on Thu, 29 Jun 2023 08:57:26 GMT
% @QED panlemma1cfunact proved by nmdh4 on Thu, 29 Jun 2023 14:00:43 GMT
panlemma1cfunact: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET st1x = tick_pan_device(d, p, c_fun_act(a, d, p, st)),
    ns1x = st1x`nde_state,
    ps1x = st1x`pdb(p),
    st2x = tick_pan_patient(p, st1x),
    ns2x = st2x`nde_state,
    st3x = tick_pan_coordinator(st2x),
    st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    ns2 = st2`nde_state,
    st3 = tick_act_patient(p, st2),
    ns3 = st3`nde_state,
    st4 = tick_act_device(d, p, st3),
    ns4 = st4`nde_state,
    st5 = tick_pan_device(d, p, st4),
    ns5 = st5`nde_state,
    st6 = tick_pan_patient(p, st5),
    ns6 = st6`nde_state,
    st7 = tick_pan_coordinator(st6),
    ns7 = st7`nde_state,
    is7 = st7`coord_st,
    ps7 = st7`pdb(p),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
   is = st`coord_st,
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF,
    tds = tick(c_fun_act(a, d, p, st)`pdb(p)`ip_state(d)),
    tvs = tick_vs(c_fun_act(a, d, p, st)`pdb(p)`vital_signs),
 
    msgd = (# mhdr := updmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             pan := available_act(tds`pan, tds)
           #),
    msgv = (# mhdr := updmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             pan := available_act(tvs`pan, tvs)
           #)
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
    
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     is`disp_top`patients(p) AND
     (((ps`p_disp_top`devs(d) = infusion_pump) AND
     ((ps`ip_state(d))`m /= off) AND
     (is`coord_db(p)`p_devices(d) = infusion_pump)) OR
     ((ps`p_disp_top`devs(d) = vital_signs_device) AND
     (ps`vital_signs)`power AND
     (is`coord_db(p)`p_devices(d) = vital_signs_device)))
      AND
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
    (ns4`pan_msg_waiting(pnde)`buf_status /= full) AND
    (ns5`pan_msg_waiting(pnde)`buf_status /= full) AND
    (ns5`pan_msg_waiting
           (pnde)`current_pos
        = ns4`pan_msg_waiting(pnde)`last_pos) AND
    (ns5`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6`pan_msg_waiting
             (coord_node)`current_pos
         = ns5`pan_msg_waiting(coord_node)`last_pos) AND
    (ns7`pan_msg_waiting(coord_node)`buf_status /= full) % AND 
     IMPLIES
nde(c_fun_act(a, d, p, st)`pdb(p)) = nde(st`pdb(p)) AND
nde(tick_pan_device(d, p, c_fun_act(a, d, p, st))`pdb(p)) = nde(st`pdb(p)) AND
nde(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`pdb(p)) = nde(st`pdb(p)) AND
c_fun_act(a, d, p, st)`pdb(p)`p_disp_top`devs = (st`pdb(p)`p_disp_top)`devs AND
(tick_pan_device(d, p, c_fun_act(a, d, p, st))`pdb(p)`p_disp_top)`devs = (st`pdb(p)`p_disp_top)`devs AND
(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`pdb(p)`p_disp_top)`devs = 
(st`pdb(p)`p_disp_top)`devs AND
(tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))))`pdb
              (p)`p_disp_top`devs = 
              (st`pdb(p)`p_disp_top)`devs AND
c_fun_act(a, d, p, st)`d_nodes = st`d_nodes AND
tick_pan_device(d, p, c_fun_act(a, d, p, st))`d_nodes = st`d_nodes AND
tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`d_nodes = st`d_nodes  AND
tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st))))`d_nodes =
     st`d_nodes AND
c_fun_act(a, d, p, st)`p_nodes = st`p_nodes AND
tick_pan_device(d, p, c_fun_act(a, d, p, st))`p_nodes = st`p_nodes AND
tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`p_nodes = st`p_nodes  AND
tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st))))`p_nodes =
     st`p_nodes AND
 %c_fun_act(a, d, p, st)`coord_st = st`coord_st AND
 %tick_pan_device(d, p, c_fun_act(a, d, p, st))`coord_st = st`coord_st AND
%tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`coord_st = 
%   st`coord_st AND
((c_d_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
   IMPLIES next_pan_pm(pnde, ns1x)`current_pan_msg = msgd) AND
((c_d_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
   IMPLIES next_pan_pm(pnde, ns1x)`current_pan_msg = msgv) AND
((c_p_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
   IMPLIES next_pan_pm(pnde, ns1x)`current_pan_msg = msgd) AND
((c_p_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
   IMPLIES next_pan_pm(pnde, ns1x)`current_pan_msg = msgv) AND
((c_d_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
   IMPLIES next_cm(ns2x)`current_pan_msg = msgd) AND
((c_d_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
   IMPLIES next_cm(ns2x)`current_pan_msg = msgv) AND
((c_p_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
   IMPLIES next_cm(ns2x)`current_pan_msg = msgd) AND
((c_p_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
   IMPLIES next_cm(ns2x)`current_pan_msg = msgv) 

% QED panlemma1bfunact proved by nmdh4 on Fri, 30 Jun 2023 11:22:15 GMT
% QED panlemma1bfunact proved by nmdh4 on Wed, 05 Jul 2023 09:38:49 GMT
% QED panlemma1bfunact proved by nmdh4 on Wed, 05 Jul 2023 10:55:58 GMT
% @QED panlemma1bfunact proved by nmdh4 on Thu, 06 Jul 2023 14:30:38 GMT
panlemma1bfunact: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET st1x = tick_pan_device(d, p, c_fun_act(a, d, p, st)),
    ns1x = st1x`nde_state,
    ps1x = st1x`pdb(p),
    st2x = tick_pan_patient(p, st1x),
    ns2x = st2x`nde_state,
    st3x = tick_pan_coordinator(st2x),
    st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    ns2 = st2`nde_state,
    st3 = tick_act_patient(p, st2),
    ns3 = st3`nde_state,
    st4 = tick_act_device(d, p, st3),
    ns4 = st4`nde_state,
    st5 = tick_pan_device(d, p, st4),
    ns5 = st5`nde_state,
    st6 = tick_pan_patient(p, st5),
    ns6 = st6`nde_state,
    st7 = tick_pan_coordinator(st6),
    ns7 = st7`nde_state,
    is7 = st7`coord_st,
    ps7 = st7`pdb(p),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
   is = st`coord_st,
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF,
    tds = tick(c_fun_act(a, d, p, st)`pdb(p)`ip_state(d)),
    tvs = tick_vs(c_fun_act(a, d, p, st)`pdb(p)`vital_signs),
 
    msgd = (# mhdr := updmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             pan := available_act(tds`pan, tds)
           #),
    msgv = (# mhdr := updmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             pan := available_act(tvs`pan, tvs)
           #)
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
    
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     is`disp_top`patients(p) AND
     (((ps`p_disp_top`devs(d) = infusion_pump) AND
     ((ps`ip_state(d))`m /= off) AND
     (is`coord_db(p)`p_devices(d) = infusion_pump)) OR
     ((ps`p_disp_top`devs(d) = vital_signs_device) AND
     (ps`vital_signs)`power AND
     (is`coord_db(p)`p_devices(d) = vital_signs_device)))
      AND
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
    (ns4`pan_msg_waiting(pnde)`buf_status /= full) AND
    (ns5`pan_msg_waiting(pnde)`buf_status /= full) AND
    (ns5`pan_msg_waiting
           (pnde)`current_pos
        = ns4`pan_msg_waiting(pnde)`last_pos) AND
    (ns5`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6`pan_msg_waiting
             (coord_node)`current_pos
         = ns5`pan_msg_waiting(coord_node)`last_pos) AND
    (ns7`pan_msg_waiting(coord_node)`buf_status /= full) % AND 
     IMPLIES
c_fun_act(a, d, p, st)`coord_st`mode = st`coord_st`mode AND
tick_pan_device(d, p, c_fun_act(a, d, p, st))`coord_st`mode = st`coord_st`mode AND
tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`coord_st`mode = 
st`coord_st`mode AND
(tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))))`coord_st`mode = 
              st`coord_st`mode AND
c_fun_act(a, d, p, st)`coord_st`disp_patient`current_patient = st`coord_st`disp_patient`current_patient AND
tick_pan_device(d, p, c_fun_act(a, d, p, st))`coord_st`disp_patient`current_patient = st`coord_st`disp_patient`current_patient AND
tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`coord_st`disp_patient`current_patient = st`coord_st`disp_patient`current_patient  AND
tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st))))`coord_st`disp_patient`current_patient =
     st`coord_st`disp_patient`current_patient AND
c_fun_act(a, d, p, st)`coord_st`disp_device`current_device = st`coord_st`disp_device`current_device AND
tick_pan_device(d, p, c_fun_act(a, d, p, st))`coord_st`disp_device`current_device = st`coord_st`disp_device`current_device AND
tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`coord_st`disp_device`current_device = st`coord_st`disp_device`current_device  AND
tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st))))`coord_st`disp_device`current_device =
     st`coord_st`disp_device`current_device AND
c_fun_act(a, d, p, st)`coord_st`coord_db(p)`p_devices = st`coord_st`coord_db(p)`p_devices AND
tick_pan_device(d, p, c_fun_act(a, d, p, st))`coord_st`coord_db(p)`p_devices = st`coord_st`coord_db(p)`p_devices AND
tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`coord_st`coord_db(p)`p_devices = st`coord_st`coord_db(p)`p_devices  AND
tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st))))`coord_st`coord_db(p)`p_devices =
     st`coord_st`coord_db(p)`p_devices %AND
%c_fun_act(a, d, p, st)`pdb(p)`pmode = st`pdb(p)`pmode AND
%tick_pan_device(d, p, c_fun_act(a, d, p, st))`pdb(p)`pmode = st`pdb(p)`pmode AND
%tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`pdb(p)`pmode = 
%st`pdb(p)`pmode AND
%(tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))))`pdb(p)`pmode = 
%              st`pdb(p)`pmode  AND
% c_fun_act(a, d, p, st)`pdb(p)`p_disp_top`sel_device = st`pdb(p)`p_disp_top`sel_device  AND
%tick_pan_device(d, p, c_fun_act(a, d, p, st))`pdb(p)`p_disp_top`sel_device  = st`pdb(p)`p_disp_top`sel_device  AND
%tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`pdb(p)`p_disp_top`sel_device  = 
%st`pdb(p)`p_disp_top`sel_device  AND
%(tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))))`pdb(p)`p_disp_top`sel_device  = 
%             st`pdb(p)`p_disp_top`sel_device  
%c_fun_act(a, d, p, st)`coord_st`coord_db = is`coord_db AND
%c_fun_act(a, d, p, st)`pdb(p)`p_disp_main = st`pdb(p)`p_disp_main AND
%c_fun_act(a, d, p, st)`pdb(p)`filter_device_panels = st`pdb(p)`filter_device_panels

% @QED panlemma1xfunact proved by nmdh4 on Mon, 10 Jul 2023 12:53:55 GMT
panlemma1xfunact: LEMMA
FORALL (a: action_id, d: device, p: patient, st: state):
LET st1x = tick_pan_device(d, p, c_fun_act(a, d, p, st)),
    ns1x = st1x`nde_state,
    ps1x = st1x`pdb(p),
    st2x = tick_pan_patient(p, st1x),
    ns2x = st2x`nde_state,
    st3x = tick_pan_coordinator(st2x),
    st1 = coordinator_enter_action(a, st),
    st2 = coord_act_mono(st1),
    ns2 = st2`nde_state,
    st3 = tick_act_patient(p, st2),
    ns3 = st3`nde_state,
    st4 = tick_act_device(d, p, st3),
    ns4 = st4`nde_state,
    st5 = tick_pan_device(d, p, st4),
    ns5 = st5`nde_state,
    st6 = tick_pan_patient(p, st5),
    ns6 = st6`nde_state,
    st7 = tick_pan_coordinator(st6),
    ns7 = st7`nde_state,
    is7 = st7`coord_st,
    ps7 = st7`pdb(p),
    ps = st`pdb(p),
    ns = st`nde_state,
    ds = ps`ip_state(d),
   is = st`coord_st,
    pnde = ps`nde,
    dnde = IF (ps`p_disp_top)`devs(d) = infusion_pump THEN
           ps`ip_state(d)`nde ELSE ps`vital_signs`nde ENDIF,
    tds = tick(c_fun_act(a, d, p, st)`pdb(p)`ip_state(d)),
    tvs = tick_vs(c_fun_act(a, d, p, st)`pdb(p)`vital_signs),
 
    msgd = (# mhdr := updmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             pan := available_act(tds`pan, tds)
           #),
    msgv = (# mhdr := updmsg,
             pat_nd := pnde,
             msg_nd := dnde,
             pan := available_act(tvs`pan, tvs)
           #)
    IN
    % channel assumptions
     ns`n_links(pnde, coord_node) AND 
     ns`n_links(coord_node, pnde) AND 
     ns`n_links(pnde, dnde) AND 
     ns`n_links(dnde, pnde) AND 
     (pnde /= dnde) AND (coord_node /= pnde) AND (coord_node /= dnde) AND 
    
    % patient known to the system
     (p /= p_null) AND st`ps(p) AND (d /= nil_device) AND
     (a /= nil_action) AND (a /= powr) AND
     (st`p_nodes(pnde) = p) AND
     (st`d_nodes(dnde) = (# pat := p, dev := d #)) AND
     is`disp_top`patients(p) AND
     (((ps`p_disp_top`devs(d) = infusion_pump) AND
     ((ps`ip_state(d))`m /= off) AND
     (is`coord_db(p)`p_devices(d) = infusion_pump)) OR
     ((ps`p_disp_top`devs(d) = vital_signs_device) AND
     (ps`vital_signs)`power AND
     (is`coord_db(p)`p_devices(d) = vital_signs_device)))
      AND
     (ns`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns2`act_msg_waiting(pnde)`buf_status /= full) AND
     (ns2`act_msg_waiting
           (pnde)`current_pos
        = ns`act_msg_waiting(pnde)`last_pos) AND
     (ns2`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting(dnde)`buf_status /= full) AND
     (ns3`act_msg_waiting
           (dnde)`current_pos
        = ns2`act_msg_waiting(dnde)`last_pos) AND
     (ns4`act_msg_waiting(dnde)`buf_status /= full) AND
    (ns4`pan_msg_waiting(pnde)`buf_status /= full) AND
    (ns5`pan_msg_waiting(pnde)`buf_status /= full) AND
    (ns5`pan_msg_waiting
           (pnde)`current_pos
        = ns4`pan_msg_waiting(pnde)`last_pos) AND
    (ns5`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6`pan_msg_waiting(coord_node)`buf_status /= full) AND
    (ns6`pan_msg_waiting
             (coord_node)`current_pos
         = ns5`pan_msg_waiting(coord_node)`last_pos) AND
    (ns7`pan_msg_waiting(coord_node)`buf_status /= full) % AND 
     IMPLIES
c_fun_act(a, d, p, st)`coord_st`mode = st`coord_st`mode AND
tick_pan_device(d, p, c_fun_act(a, d, p, st))`coord_st`mode = st`coord_st`mode AND
tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`coord_st`mode = 
st`coord_st`mode AND
(tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))))`coord_st`mode = 
              st`coord_st`mode AND
c_fun_act(a, d, p, st)`coord_st`disp_patient`current_patient = st`coord_st`disp_patient`current_patient AND
tick_pan_device(d, p, c_fun_act(a, d, p, st))`coord_st`disp_patient`current_patient = st`coord_st`disp_patient`current_patient AND
tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`coord_st`disp_patient`current_patient = st`coord_st`disp_patient`current_patient  AND
tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st))))`coord_st`disp_patient`current_patient =
     st`coord_st`disp_patient`current_patient AND
c_fun_act(a, d, p, st)`coord_st`disp_device`current_device = st`coord_st`disp_device`current_device AND
tick_pan_device(d, p, c_fun_act(a, d, p, st))`coord_st`disp_device`current_device = st`coord_st`disp_device`current_device AND
tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`coord_st`disp_device`current_device = st`coord_st`disp_device`current_device  AND
tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st))))`coord_st`disp_device`current_device =
     st`coord_st`disp_device`current_device AND
c_fun_act(a, d, p, st)`coord_st`coord_db(p)`p_devices = st`coord_st`coord_db(p)`p_devices AND
tick_pan_device(d, p, c_fun_act(a, d, p, st))`coord_st`coord_db(p)`p_devices = st`coord_st`coord_db(p)`p_devices AND
tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`coord_st`coord_db(p)`p_devices = st`coord_st`coord_db(p)`p_devices  AND
tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st))))`coord_st`coord_db(p)`p_devices =
     st`coord_st`coord_db(p)`p_devices AND
nde(c_fun_act(a, d, p, st)`pdb(p)) = nde(st`pdb(p)) AND
nde(tick_pan_device(d, p, c_fun_act(a, d, p, st))`pdb(p)) = nde(st`pdb(p)) AND
nde(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`pdb(p)) = nde(st`pdb(p)) AND
c_fun_act(a, d, p, st)`pdb(p)`p_disp_top`devs = (st`pdb(p)`p_disp_top)`devs AND
(tick_pan_device(d, p, c_fun_act(a, d, p, st))`pdb(p)`p_disp_top)`devs = (st`pdb(p)`p_disp_top)`devs AND
(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`pdb(p)`p_disp_top)`devs = 
(st`pdb(p)`p_disp_top)`devs AND
(tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))))`pdb
              (p)`p_disp_top`devs = 
              (st`pdb(p)`p_disp_top)`devs AND
c_fun_act(a, d, p, st)`d_nodes = st`d_nodes AND
tick_pan_device(d, p, c_fun_act(a, d, p, st))`d_nodes = st`d_nodes AND
tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`d_nodes = st`d_nodes  AND
tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st))))`d_nodes =
     st`d_nodes AND
c_fun_act(a, d, p, st)`p_nodes = st`p_nodes AND
tick_pan_device(d, p, c_fun_act(a, d, p, st))`p_nodes = st`p_nodes AND
tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`p_nodes = st`p_nodes  AND
tick_pan_coordinator(tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st))))`p_nodes =
     st`p_nodes AND
 %c_fun_act(a, d, p, st)`coord_st = st`coord_st AND
 %tick_pan_device(d, p, c_fun_act(a, d, p, st))`coord_st = st`coord_st AND
%tick_pan_patient(p, tick_pan_device(d, p, c_fun_act(a, d, p, st)))`coord_st = 
%   st`coord_st AND
((c_d_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
   IMPLIES next_pan_pm(pnde, ns1x)`current_pan_msg = msgd) AND
((c_d_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
   IMPLIES next_pan_pm(pnde, ns1x)`current_pan_msg = msgv) AND
((c_p_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
   IMPLIES next_pan_pm(pnde, ns1x)`current_pan_msg = msgd) AND
((c_p_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
   IMPLIES next_pan_pm(pnde, ns1x)`current_pan_msg = msgv) AND
((c_d_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
   IMPLIES next_cm(ns2x)`current_pan_msg = msgd) AND
((c_d_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
   IMPLIES next_cm(ns2x)`current_pan_msg = msgv) AND
((c_p_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = infusion_pump AND ds`m /= off) 
   IMPLIES next_cm(ns2x)`current_pan_msg = msgd) AND
((c_p_per_actionx(a, d, p, is) AND ps`p_disp_top`devs(d) = vital_signs_device AND ps`vital_signs`power) 
   IMPLIES next_cm(ns2x)`current_pan_msg = msgv) 

END ICE_templates_rsce_th