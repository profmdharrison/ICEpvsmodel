(p_interface_th
 (m_c_p_c 0
  (m_c_p_c-1 nil 3878193002 ("" (skosimp*) (("" (grind) nil nil)) nil)
   ((nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (m_connect_patient_coord const-decl "interface_st" p_interface_th
     nil)
    (connect_to_coordinator const-decl "interface_st" system_th nil)
    (update_patient_alarm_disp const-decl "i_state" coordinator_th nil)
    (include_patient const-decl "i_state" coordinator_th nil)
    (emptyset const-decl "set" sets nil)
    (update_n_graph const-decl "n_state" node_th nil)
    (increment_node const-decl "node" node_th nil)
    (init_xstate const-decl "interface_st" system_th nil)
    (init_m_state const-decl "m_state" menu_th nil)
    (init_cm const-decl "menu_state" menu_th nil)
    (init_state const-decl "state" system_th nil)
    (init_i_state const-decl "i_state" coordinator_th nil)
    (empty_config const-decl "patient_config" coordinator_th nil)
    (empty_device_display const-decl "disp_device_type" coordinator_th
     nil)
    (empty_patient_display const-decl "disp_patient_type"
     coordinator_th nil)
    (empty_alarm_disp const-decl "disp_alarm_type" coordinator_th nil)
    (empty_top_display const-decl "coord_disp_top_type" coordinator_th
     nil)
    (i_empty_entry_window const-decl "coord_entry_window_type"
     coordinator_th nil)
    (coord_node const-decl "node" node_th nil)
    (init_p_state const-decl "p_state" patient_th nil)
    (init_d_state const-decl "d_state" infusion_pumps_th nil)
    (init_ip_panel const-decl "panel" infusion_pumps_th nil)
    (init_vs const-decl "v_state" vital_signs_th nil)
    (init_vs_panel const-decl "panel" vital_signs_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (empty_constraint_setup const-decl "constraint_setup_type"
     patient_th nil)
    (init_constraint const-decl "constraint_type" patient_th nil)
    (null_ec const-decl "enum_constraint_type" patient_th nil)
    (null_nc const-decl "num_constraint_type" patient_th nil)
    (d_bot const-decl "device" devices_th nil)
    (init_rule_setup const-decl "rule_setup_type" patient_th nil)
    (init_panel_display const-decl "coord_panel_setup_type" patient_th
     nil)
    (init_disp_main const-decl "p_disp_main_type" patient_th nil)
    (init_disp_top const-decl "p_disp_top_type" patient_th nil)
    (empty_entry_window const-decl "p_entry_window_type" patient_th
     nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (undef_device const-decl "devs_type" devices_th nil)
    (nil_pd const-decl "patient_to_device" system_th nil)
    (nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (init_n_state const-decl "n_state" node_th nil)
    (empty_act_q const-decl "act_q_type" node_th nil)
    (empty_pan_q const-decl "pan_q_type" node_th nil)
    (empty_act_msg const-decl "act_message_type" node_th nil)
    (empty_pan_msg const-decl "pan_message_type" node_th nil)
    (empty_panel const-decl "panel" coord_t_and_c_th nil)
    (no_node const-decl "node" node_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (root_node const-decl "node" node_th nil)
    (p_null const-decl "patient" patient_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" p_interface_th nil)
    (maxinfuse formal-const-decl "posnat" p_interface_th nil)
    (<= const-decl "bool" reals nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" p_interface_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil))
   shostak))
 (enter_device_pump_lemma 0
  (enter_device_pump_lemma-1 nil 3879419112
   ("" (skosimp*)
    (("" (expand "enter_pump_new_device" 4)
      (("" (expand "p_change_menu" 4)
        (("" (expand "patient_menu_act" 4)
          (("" (expand "patient_menu" 4)
            (("" (expand "update_patient_prev_entry" 4)
              (("" (expand "p_enter" 4)
                (("" (expand "p_change_menu" 4)
                  (("" (lift-if 4)
                    (("" (split 4)
                      (("1" (flatten 1)
                        (("1" (expand "p_device" 1)
                          (("1" (expand "p_device_entry" 1)
                            (("1" (expand "p_change_menu" 1)
                              (("1"
                                (expand "p_escape" 1)
                                (("1"
                                  (expand "p_change_menu" 1)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand "p_complete_device_p" 1)
                                      (("1"
                                        (expand "p_complete_device" 1)
                                        (("1" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (grind) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((enter_pump_new_device const-decl "interface_st" p_interface_th
     nil)
    (patient_menu_act const-decl "interface_st" system_th nil)
    (update_patient_prev_entry const-decl "interface_st" system_th nil)
    (p_device const-decl "interface_st" system_th nil)
    (p_complete_device_p const-decl "interface_st" system_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" p_interface_th nil)
    (<= const-decl "bool" reals nil)
    (maxinfuse formal-const-decl "posnat" p_interface_th nil)
    (maxrate formal-const-decl "posnat" p_interface_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (p_null const-decl "patient" patient_th nil)
    (p_enter_name const-decl "p_state" patient_th nil)
    (patient_enter_device_name const-decl "state" system_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (nil_device const-decl "device" devices_th nil)
    (p_complete_device const-decl "p_state" patient_th nil)
    (p_escape const-decl "interface_st" system_th nil)
    (p_device_entry const-decl "interface_st" system_th nil)
    (p_enter const-decl "interface_st" system_th nil)
    (patient_menu const-decl "interface_st" system_th nil)
    (p_change_menu const-decl "m_state" menu_th nil))
   shostak))
 (select_device_display_lemma 0
  (select_device_display_lemma-1 nil 3879569127
   ("" (skosimp*)
    (("" (expand "m_select_d_p_window" 4)
      (("" (expand "patient_menu_act" 4)
        (("" (expand "patient_menu" 4)
          (("" (expand "update_patient_prev_entry" 4)
            (("" (expand "p_select" 4)
              (("" (expand "p_change_menu" 4)
                (("" (lift-if 4)
                  (("" (split 4)
                    (("1" (assert)
                      (("1" (expand "p_device" 1)
                        (("1" (expand "p_select_display_mode" 1)
                          (("1" (expand "mapping_to_ps" 1)
                            (("1" (assert)
                              (("1"
                                (expand "p_select_d_mode" 1)
                                (("1" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((m_select_d_p_window const-decl "interface_st" p_interface_th nil)
    (patient_menu const-decl "interface_st" system_th nil)
    (p_select const-decl "interface_st" system_th nil)
    (p_select_display_mode const-decl "interface_st" system_th nil)
    (p_select_d_mode const-decl "p_state" patient_th nil)
    (mapping_to_ps const-decl "interface_st" system_th nil)
    (p_device const-decl "interface_st" system_th nil)
    (p_change_menu const-decl "m_state" menu_th nil)
    (update_patient_prev_entry const-decl "interface_st" system_th nil)
    (patient_menu_act const-decl "interface_st" system_th nil))
   shostak))
 (invoke_p_action 0
  (invoke_p_action-1 nil 3879854023
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (expand "m_select_p_action" 4)
          (("" (expand "patient_menu_act" 4)
            (("" (expand "patient_menu" 4)
              (("" (expand "update_patient_prev_entry" 4)
                (("" (expand "p_select" 4)
                  (("" (expand "p_change_menu" 4)
                    (("" (assert)
                      (("" (expand "p_select_a" 4)
                        (("" (expand "p_d_per_action" -4)
                          (("" (assert)
                            (("" (expand "per_a_select" 4)
                              (("" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((m_select_p_action const-decl "interface_st" p_interface_th nil)
    (patient_menu const-decl "interface_st" system_th nil)
    (p_select const-decl "interface_st" system_th nil)
    (p_d_per_action const-decl "boolean" ICE_templates_rsce_th nil)
    (per_a_select const-decl "boolean" patient_th nil)
    (p_select_a const-decl "interface_st" system_th nil)
    (p_change_menu const-decl "m_state" menu_th nil)
    (update_patient_prev_entry const-decl "interface_st" system_th nil)
    (patient_menu_act const-decl "interface_st" system_th nil))
   shostak))
 (menu_select_lemma 0
  (menu_select_lemma-1 nil 3880797877
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (expand "patient_menu_act" 4)
          (("" (expand "patient_menu" 4)
            (("" (expand "update_patient_prev_entry" 4)
              (("" (expand "p_select" 4)
                (("" (expand "p_change_menu" 4)
                  (("" (expand "p_device" 4) (("" (grind) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((patient_menu_act const-decl "interface_st" system_th nil)
    (update_patient_prev_entry const-decl "interface_st" system_th nil)
    (p_change_menu const-decl "m_state" menu_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" p_interface_th nil)
    (<= const-decl "bool" reals nil)
    (maxinfuse formal-const-decl "posnat" p_interface_th nil)
    (maxrate formal-const-decl "posnat" p_interface_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (p_null const-decl "patient" patient_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (nil_device const-decl "device" devices_th nil)
    (patient_enter_device const-decl "state" system_th nil)
    (per_d_select const-decl "boolean" patient_th nil)
    (p_select_d_mode const-decl "p_state" patient_th nil)
    (mapping_to_ps const-decl "interface_st" system_th nil)
    (p_select_display_mode const-decl "interface_st" system_th nil)
    (p_device const-decl "interface_st" system_th nil)
    (p_select const-decl "interface_st" system_th nil)
    (patient_menu const-decl "interface_st" system_th nil))
   shostak))
 (act_invoke_lemma 0
  (act_invoke_lemma-1 nil 3881841118
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (expand "patient_menu_act" 5)
          (("" (expand "patient_menu" 5)
            (("" (expand "update_patient_prev_entry" 5)
              (("" (expand "p_select" 5)
                (("" (expand "p_change_menu" 5)
                  (("" (expand "p_select_a" 5)
                    (("" (lift-if 5)
                      (("" (split 5)
                        (("1" (expand "patient_enter_action" 1)
                          (("1" (assert)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1" (propax) nil nil)
                                 ("2"
                                  (expand "per_a_select" 1)
                                  (("2" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "patient_enter_action" 1)
                          (("2" (flatten 1) (("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((patient_menu_act const-decl "interface_st" system_th nil)
    (update_patient_prev_entry const-decl "interface_st" system_th nil)
    (p_change_menu const-decl "m_state" menu_th nil)
    (patient_enter_action const-decl "state" system_th nil)
    (per_a_select const-decl "boolean" patient_th nil)
    (p_select_a const-decl "interface_st" system_th nil)
    (p_select const-decl "interface_st" system_th nil)
    (patient_menu const-decl "interface_st" system_th nil))
   shostak))
 (m_p_select_lemma 0
  (m_p_select_lemma-1 nil 3881908849
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "menu_select_lemma" ("d" "d!1" "p" "p!1" "xs" "xs!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (expand "m_select_device" 4)
                (("1" (propax) nil nil)) nil)
               ("2" (assert) nil nil) ("3" (assert) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (propax) nil nil) ("7" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((interface_st type-eq-decl nil system_th nil)
    (state type-eq-decl nil system_th nil)
    (m_state type-eq-decl nil menu_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" p_interface_th nil)
    (maxinfuse formal-const-decl "posnat" p_interface_th nil)
    (maxrate formal-const-decl "posnat" p_interface_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (menu_select_lemma formula-decl nil p_interface_th nil)
    (m_select_device const-decl "interface_st" p_interface_th nil))
   shostak))
 (m_p_ed_select_lemma 0
  (m_p_ed_select_lemma-1 nil 3888471439
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (expand "patient_menu_act" 4)
          (("" (expand "patient_menu" 4)
            (("" (expand "update_patient_prev_entry" 4)
              (("" (expand "p_device" 4)
                (("" (assert)
                  (("" (expand "p_select" 4)
                    (("" (expand "p_change_menu" 4)
                      (("" (expand "p_select_display_mode" 4)
                        (("" (expand "mapping_to_ps" 4)
                          (("" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((patient_menu_act const-decl "interface_st" system_th nil)
    (update_patient_prev_entry const-decl "interface_st" system_th nil)
    (p_change_menu const-decl "m_state" menu_th nil)
    (mapping_to_ps const-decl "interface_st" system_th nil)
    (p_select_display_mode const-decl "interface_st" system_th nil)
    (p_select const-decl "interface_st" system_th nil)
    (p_device const-decl "interface_st" system_th nil)
    (patient_menu const-decl "interface_st" system_th nil))
   shostak))
 (m_p_ed_selectstar_lemma 0
  (m_p_ed_selectstar_lemma-1 nil 3888487884
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (expand "patient_menu_act" 4)
          (("" (expand "patient_menu" 4)
            (("" (expand "update_patient_prev_entry" 4)
              (("" (expand "p_device" 4)
                (("" (assert)
                  (("" (expand "p_select" 4)
                    (("" (expand "p_change_menu" 4)
                      (("" (expand "p_select_display_mode" 4)
                        (("" (expand "mapping_to_ps" 4)
                          (("" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((patient_menu_act const-decl "interface_st" system_th nil)
    (update_patient_prev_entry const-decl "interface_st" system_th nil)
    (p_change_menu const-decl "m_state" menu_th nil)
    (mapping_to_ps const-decl "interface_st" system_th nil)
    (p_select_display_mode const-decl "interface_st" system_th nil)
    (p_select const-decl "interface_st" system_th nil)
    (p_device const-decl "interface_st" system_th nil)
    (patient_menu const-decl "interface_st" system_th nil))
   shostak))
 (m_p_act_invoke_lemma 0
  (m_p_act_invoke_lemma-1 nil 3881909848
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "act_invoke_lemma"
           ("a" "a!1" "d" "d!1" "p" "p!1" "xs" "xs!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (expand "m_device_act" 5) (("1" (propax) nil nil))
                nil)
               ("2" (assert) nil nil) ("3" (assert) nil nil)
               ("4" (assert) nil nil) ("5" (propax) nil nil)
               ("6" (propax) nil nil) ("7" (propax) nil nil)
               ("8" (propax) nil nil) ("9" (propax) nil nil)
               ("10" (propax) nil nil) ("11" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((interface_st type-eq-decl nil system_th nil)
    (state type-eq-decl nil system_th nil)
    (m_state type-eq-decl nil menu_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" p_interface_th nil)
    (maxinfuse formal-const-decl "posnat" p_interface_th nil)
    (maxrate formal-const-decl "posnat" p_interface_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (act_invoke_lemma formula-decl nil p_interface_th nil)
    (m_device_act const-decl "interface_st" p_interface_th nil))
   shostak))
 (m_p_ed_act_invoke_lemma 0
  (m_p_ed_act_invoke_lemma-1 nil 3888473482
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (expand "patient_menu_act" 5)
          (("" (expand "patient_menu" 5)
            (("" (expand "update_patient_prev_entry" 5)
              (("" (expand "p_select" 5)
                (("" (expand "p_change_menu" 5)
                  (("" (assert)
                    (("" (expand "p_select_a" 5)
                      (("" (expand "per_a_select" 5)
                        (("" (replace -4 5)
                          (("" (expand "p_d_per_action" -5)
                            (("" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((patient_menu_act const-decl "interface_st" system_th nil)
    (update_patient_prev_entry const-decl "interface_st" system_th nil)
    (p_change_menu const-decl "m_state" menu_th nil)
    (p_select_a const-decl "interface_st" system_th nil)
    (p_d_per_action const-decl "boolean" ICE_templates_rsce_th nil)
    (per_a_select const-decl "boolean" patient_th nil)
    (p_select const-decl "interface_st" system_th nil)
    (patient_menu const-decl "interface_st" system_th nil))
   shostak))
 (m_p_menu_action_lemma 0
  (m_p_menu_action_lemma-1 nil 3881910453
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "m_p_act_invoke_lemma"
           ("a" "a!1" "d" "d!1" "p" "p!1" "xs"
            "m_select_device(d!1, p!1, xs!1)"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (replace -1 5)
                (("1"
                  (lemma "m_p_select_lemma"
                   ("d" "d!1" "p" "p!1" "xs" "xs!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (replace -1 5) (("1" (propax) nil nil))
                        nil)
                       ("2" (assert) nil nil) ("3" (assert) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (propax) nil nil) ("7" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil) ("3" (assert) nil nil)
               ("4" (assert) nil nil)
               ("5" (expand "m_select_device" 1)
                (("5" (expand "patient_menu_act" 1)
                  (("5" (expand "patient_menu" 1)
                    (("5" (expand "update_patient_prev_entry" 1)
                      (("5" (expand "p_select" 1)
                        (("5" (expand "p_change_menu" 1)
                          (("5" (expand "patient_enter_device" 1)
                            (("5" (assert)
                              (("5"
                                (expand "p_device" 1)
                                (("5"
                                  (expand "p_select_display_mode" 1)
                                  (("5"
                                    (expand "mapping_to_ps" 1)
                                    (("5"
                                      (expand "p_select_d_mode" 1)
                                      (("5"
                                        (lift-if 1)
                                        (("5" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("6" (expand "m_select_device" 1)
                (("6" (expand "patient_menu_act" 1)
                  (("6" (expand "patient_menu" 1)
                    (("6" (expand "update_patient_prev_entry" 1)
                      (("6" (expand "p_select" 1)
                        (("6" (expand "p_change_menu" 1)
                          (("6" (expand "patient_enter_device" 1)
                            (("6" (assert)
                              (("6"
                                (expand "p_device" 1)
                                (("6"
                                  (expand "p_select_display_mode" 1)
                                  (("6"
                                    (expand "mapping_to_ps" 1)
                                    (("6"
                                      (expand "p_select_d_mode" 1)
                                      (("6"
                                        (lift-if 1)
                                        (("6" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("7" (expand "m_select_device" 1)
                (("7" (expand "patient_menu_act" 1)
                  (("7" (expand "patient_menu" 1)
                    (("7" (expand "update_patient_prev_entry" 1)
                      (("7" (expand "p_select" 1)
                        (("7" (expand "p_change_menu" 1)
                          (("7" (expand "patient_enter_device" 1)
                            (("7" (assert)
                              (("7"
                                (expand "p_device" 1)
                                (("7"
                                  (expand "p_select_display_mode" 1)
                                  (("7"
                                    (expand "mapping_to_ps" 1)
                                    (("7"
                                      (expand "p_select_d_mode" 1)
                                      (("7"
                                        (lift-if 1)
                                        (("7"
                                          (split 1)
                                          (("1" (propax) nil nil)
                                           ("2"
                                            (expand "per_d_select" 1)
                                            (("2"
                                              (flatten 1)
                                              (("2" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("8" (expand "m_select_device" 1)
                (("8" (expand "patient_menu_act" 1)
                  (("8" (expand "patient_menu" 1)
                    (("8" (expand "update_patient_prev_entry" 1)
                      (("8" (expand "p_select" 1)
                        (("8" (expand "p_change_menu" 1)
                          (("8" (expand "patient_enter_device" 1)
                            (("8" (assert)
                              (("8"
                                (expand "p_device" 1)
                                (("8"
                                  (expand "p_select_display_mode" 1)
                                  (("8"
                                    (expand "mapping_to_ps" 1)
                                    (("8"
                                      (expand "p_select_d_mode" 1)
                                      (("8"
                                        (expand "per_d_select" 1)
                                        (("8" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("9" (expand "m_select_device" 1)
                (("9" (expand "patient_menu_act" 1)
                  (("9" (expand "patient_menu" 1)
                    (("9" (expand "update_patient_prev_entry" 1)
                      (("9" (expand "p_select" 1)
                        (("9" (expand "p_change_menu" 1)
                          (("9" (expand "patient_enter_device" 1)
                            (("9" (assert)
                              (("9"
                                (expand "p_device" 1)
                                (("9"
                                  (expand "p_select_display_mode" 1)
                                  (("9"
                                    (expand "p_change_menu" 1)
                                    (("9" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("10" (expand "m_select_device" 1)
                (("10" (expand "patient_menu_act" 1)
                  (("10" (expand "patient_menu" 1)
                    (("10" (expand "update_patient_prev_entry" 1)
                      (("10" (expand "p_select" 1)
                        (("10" (expand "patient_enter_device" 1)
                          (("10" (expand "p_change_menu" 1)
                            (("10" (assert)
                              (("10"
                                (expand "p_device" 1)
                                (("10"
                                  (expand "p_select_display_mode" 1)
                                  (("10"
                                    (expand "mapping_to_ps" 1)
                                    (("10"
                                      (expand "p_select_d_mode" 1)
                                      (("10" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("11" (grind) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((m_select_device const-decl "interface_st" p_interface_th nil)
    (interface_st type-eq-decl nil system_th nil)
    (state type-eq-decl nil system_th nil)
    (m_state type-eq-decl nil menu_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" p_interface_th nil)
    (maxinfuse formal-const-decl "posnat" p_interface_th nil)
    (maxrate formal-const-decl "posnat" p_interface_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (m_p_act_invoke_lemma formula-decl nil p_interface_th nil)
    (m_p_select_lemma formula-decl nil p_interface_th nil)
    (patient_menu_act const-decl "interface_st" system_th nil)
    (update_patient_prev_entry const-decl "interface_st" system_th nil)
    (p_change_menu const-decl "m_state" menu_th nil)
    (p_select_display_mode const-decl "interface_st" system_th nil)
    (p_select_d_mode const-decl "p_state" patient_th nil)
    (mapping_to_ps const-decl "interface_st" system_th nil)
    (p_device const-decl "interface_st" system_th nil)
    (patient_enter_device const-decl "state" system_th nil)
    (p_select const-decl "interface_st" system_th nil)
    (patient_menu const-decl "interface_st" system_th nil)
    (per_d_select const-decl "boolean" patient_th nil)
    (m_device_act const-decl "interface_st" p_interface_th nil)
    (p_select_a const-decl "interface_st" system_th nil)
    (patient_act_mono const-decl "state" system_th nil)
    (act_send const-decl "n_state" node_th nil)
    (add_act_buff const-decl "act_q_type" node_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (per_a_select const-decl "boolean" patient_th nil)
    (patient_enter_action const-decl "state" system_th nil)
    (nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (p_escape const-decl "interface_st" system_th nil)
    (/= const-decl "boolean" notequal nil))
   shostak))
 (m_action_select_lemma 0
  (m_action_select_lemma-1 nil 3888056665
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "m_p_menu_action_lemma"
           ("a" "a!1" "d" "d!1" "p" "p!1" "xs" "xs!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (replace -1 5)
                (("1" (expand "patient_enter_device" 5)
                  (("1" (expand "p_select_d_mode" 5)
                    (("1" (expand "per_d_select" 5)
                      (("1" (assert)
                        (("1" (expand "patient_enter_action" 5)
                          (("1" (assert)
                            (("1" (split -4)
                              (("1"
                                (assert)
                                (("1"
                                  (expand "patient_act_mono" 5)
                                  (("1"
                                    (replace -3 5)
                                    (("1"
                                      (apply-extensionality 5)
                                      (("1"
                                        (apply-extensionality 1)
                                        (("1"
                                          (lift-if 1)
                                          (("1"
                                            (split 1)
                                            (("1"
                                              (flatten 1)
                                              (("1"
                                                (apply-extensionality
                                                 1)
                                                nil
                                                nil))
                                              nil)
                                             ("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (assert)
                                (("2"
                                  (expand "patient_act_mono" 5)
                                  (("2"
                                    (apply-extensionality 5)
                                    (("2"
                                      (apply-extensionality 1)
                                      (("2"
                                        (lift-if 1)
                                        (("2"
                                          (split 1)
                                          (("1"
                                            (flatten 1)
                                            (("1"
                                              (replace -4 1)
                                              (("1"
                                                (apply-extensionality
                                                 1)
                                                nil
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (assert)
                                (("3"
                                  (replace -3 5)
                                  (("3"
                                    (expand "patient_act_mono" 5)
                                    (("3"
                                      (apply-extensionality 5)
                                      (("3"
                                        (apply-extensionality 1)
                                        (("3"
                                          (lift-if 1)
                                          (("3"
                                            (split 1)
                                            (("1"
                                              (flatten 1)
                                              (("1"
                                                (apply-extensionality
                                                 1)
                                                nil
                                                nil))
                                              nil)
                                             ("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil) ("3" (assert) nil nil)
               ("4" (assert) nil nil) ("5" (propax) nil nil)
               ("6" (propax) nil nil) ("7" (propax) nil nil)
               ("8" (propax) nil nil) ("9" (propax) nil nil)
               ("10" (propax) nil nil) ("11" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((interface_st type-eq-decl nil system_th nil)
    (state type-eq-decl nil system_th nil)
    (m_state type-eq-decl nil menu_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" p_interface_th nil)
    (maxinfuse formal-const-decl "posnat" p_interface_th nil)
    (maxrate formal-const-decl "posnat" p_interface_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (m_p_menu_action_lemma formula-decl nil p_interface_th nil)
    (patient_enter_device const-decl "state" system_th nil)
    (per_d_select const-decl "boolean" patient_th nil)
    (patient_enter_action const-decl "state" system_th nil)
    (patient_act_mono const-decl "state" system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (actmsg adt-constructor-decl "(actmsg?)" node_th nil)
    (actmsg? adt-recognizer-decl "[msg_hdr_type -> boolean]" node_th
     nil)
    (act_send const-decl "n_state" node_th nil)
    (pan_msg_waiting_type type-eq-decl nil node_th nil)
    (connected type-eq-decl nil node_th nil)
    (network_error_type type-eq-decl nil node_th nil)
    (pan_message_type type-eq-decl nil node_th nil)
    (act_msg_waiting_type type-eq-decl nil node_th nil)
    (act_message_type type-eq-decl nil node_th nil)
    (msg_hdr_type type-decl nil node_th nil)
    (infusion_pump adt-constructor-decl "(infusion_pump?)" devices_th
     nil)
    (infusion_pump? adt-recognizer-decl "[device_type -> boolean]"
     devices_th nil)
    (device_type type-decl nil devices_th nil)
    (d_mode adt-constructor-decl "(d_mode?)" coord_t_and_c_th nil)
    (d_mode? adt-recognizer-decl "[patient_mode_type -> boolean]"
     coord_t_and_c_th nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (p_state type-eq-decl nil patient_th nil)
    (v_state type-eq-decl nil vital_signs_th nil)
    (patient_constraint_type type-eq-decl nil devices_th nil)
    (rule_setup_type type-eq-decl nil patient_th nil)
    (coord_panel_setup_type type-eq-decl nil patient_th nil)
    (p_entry_window_type type-eq-decl nil patient_th nil)
    (p_disp_top_type type-eq-decl nil patient_th nil)
    (p_disp_main_type type-eq-decl nil patient_th nil)
    (panel type-eq-decl nil coord_t_and_c_th nil)
    (constraint_setup_type type-eq-decl nil patient_th nil)
    (patient_mode_type type-decl nil coord_t_and_c_th nil)
    (node type-eq-decl nil node_th nil)
    (p_dstates type-eq-decl nil patient_th nil)
    (dpanel_type type-eq-decl nil patient_th nil)
    (patient_edit_type type-decl nil coord_t_and_c_th nil)
    (disp_focus_type type-decl nil coord_t_and_c_th nil)
    (p_select_d_mode const-decl "p_state" patient_th nil))
   shostak))
 (device_pump_x_lemma 0
  (device_pump_x_lemma-1 nil 3888396612
   ("" (skosimp*)
    (("" (expand "m_enter_device_pump" 3)
      (("" (expand "patient_menu_act" 3)
        (("" (expand "patient_menu" 3)
          (("" (expand "update_patient_prev_entry" 3)
            (("" (expand "patient_enter_device_name" 3)
              (("" (expand "p_enter" 3)
                (("" (expand "p_change_menu" 3)
                  (("" (assert)
                    (("" (expand "p_enter_name" 3)
                      (("" (expand "p_device" 3)
                        (("" (expand "p_device_entry" 3)
                          (("" (expand "p_change_menu" 3)
                            (("" (postpone) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (device_pump_lemma 0
  (device_pump_lemma-1 nil 3881990530
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (expand "patient_act_mono" 8)
          (("" (assert)
            (("" (expand "tick_act_device" 8)
              (("" (expand "next_act_pm" 8)
                (("" (expand "act_send" 8)
                  (("" (expand "add_act_buff" 8)
                    (("" (assert)
                      (("" (expand "patient_enter_action" -5)
                        (("" (expand "p_d_per_action" -8)
                          (("" (assert)
                            (("" (expand "p_fun_act" 8)
                              ((""
                                (expand "patient_enter_action" 8)
                                ((""
                                  (expand "patient_act_mono" 8)
                                  ((""
                                    (expand "tick_act_device" 8)
                                    (("" (postpone) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (device_ed_pump_lemma 0
  (device_ed_pump_lemma-1 nil 3888475978
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "m_p_ed_select_lemma"
           ("d" "d!1" "p" "p!1" "xs" "xs!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1"
                (lemma "m_p_ed_act_invoke_lemma"
                 ("a" "a!1" "d" "d!1" "p" "p!1" "xs"
                  "patient_menu_act (device, p!1, patient_menu_act(select, p!1, xs!1))"))
                (("1" (beta -1)
                  (("1" (split -1)
                    (("1" (replace -1 8)
                      (("1" (replace -2 8)
                        (("1" (expand "mapping_to_ps" 8)
                          (("1" (expand "p_select_d_mode" 8)
                            (("1" (replace -11 8)
                              (("1"
                                (beta 8)
                                (("1"
                                  (expand "per_d_select" 8)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand "p_fun_act" 8)
                                      (("1"
                                        (expand
                                         "patient_enter_action"
                                         8)
                                        (("1"
                                          (expand "p_d_per_action" -10)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (apply-extensionality 8)
                                              (("1" (grind) nil nil)
                                               ("2" (grind) nil nil)
                                               ("3" (grind) nil nil)
                                               ("4"
                                                (expand
                                                 "patient_act_mono"
                                                 1)
                                                (("4"
                                                  (replace -12 1)
                                                  (("4"
                                                    (replace -14 1)
                                                    (("4"
                                                      (expand
                                                       "tick_act_device"
                                                       1)
                                                      (("4"
                                                        (apply-extensionality
                                                         1)
                                                        (("4"
                                                          (lift-if 1)
                                                          (("4"
                                                            (split 1)
                                                            (("1"
                                                              (flatten
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "dev_ex"
                                                                 1)
                                                                (("1"
                                                                  (apply-extensionality
                                                                   1)
                                                                  (("1"
                                                                    (apply-extensionality
                                                                     1)
                                                                    (("1"
                                                                      (apply-extensionality
                                                                       1)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (apply-extensionality
                                                                     1)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("5" (grind) nil nil)
                                               ("6" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert) nil nil) ("3" (assert) nil nil)
                     ("4" (assert) nil nil) ("5" (grind) nil nil)
                     ("6" (grind) nil nil) ("7" (grind) nil nil)
                     ("8" (grind) nil nil) ("9" (grind) nil nil)
                     ("10" (grind) nil nil) ("11" (grind) nil nil)
                     ("12" (grind) nil nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil) ("3" (assert) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (propax) nil nil) ("7" (propax) nil nil)
               ("8" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((interface_st type-eq-decl nil system_th nil)
    (state type-eq-decl nil system_th nil)
    (m_state type-eq-decl nil menu_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" p_interface_th nil)
    (maxinfuse formal-const-decl "posnat" p_interface_th nil)
    (maxrate formal-const-decl "posnat" p_interface_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (m_p_ed_select_lemma formula-decl nil p_interface_th nil)
    (p_escape const-decl "interface_st" system_th nil)
    (switch_vs const-decl "v_state" vital_signs_th nil)
    (alarm_vs const-decl "v_state" vital_signs_th nil)
    (execute_vs const-decl "v_state" vital_signs_th nil)
    (mapping_to_ps const-decl "interface_st" system_th nil)
    (per_d_select const-decl "boolean" patient_th nil)
    (p_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (p_d_per_action const-decl "boolean" ICE_templates_rsce_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (infusion_pump adt-constructor-decl "(infusion_pump?)" devices_th
     nil)
    (infusion_pump? adt-recognizer-decl "[device_type -> boolean]"
     devices_th nil)
    (device_type type-decl nil devices_th nil)
    (d_mode adt-constructor-decl "(d_mode?)" coord_t_and_c_th nil)
    (d_mode? adt-recognizer-decl "[patient_mode_type -> boolean]"
     coord_t_and_c_th nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (p_state type-eq-decl nil patient_th nil)
    (v_state type-eq-decl nil vital_signs_th nil)
    (patient_constraint_type type-eq-decl nil devices_th nil)
    (rule_setup_type type-eq-decl nil patient_th nil)
    (coord_panel_setup_type type-eq-decl nil patient_th nil)
    (p_entry_window_type type-eq-decl nil patient_th nil)
    (p_disp_top_type type-eq-decl nil patient_th nil)
    (p_disp_main_type type-eq-decl nil patient_th nil)
    (panel type-eq-decl nil coord_t_and_c_th nil)
    (constraint_setup_type type-eq-decl nil patient_th nil)
    (patient_mode_type type-decl nil coord_t_and_c_th nil)
    (node type-eq-decl nil node_th nil)
    (p_dstates type-eq-decl nil patient_th nil)
    (dpanel_type type-eq-decl nil patient_th nil)
    (patient_edit_type type-decl nil coord_t_and_c_th nil)
    (disp_focus_type type-decl nil coord_t_and_c_th nil)
    (patient_act_mono const-decl "state" system_th nil)
    (tick_act_device const-decl "state" system_th nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (p_select_a const-decl "interface_st" system_th nil)
    (per_a_rule_select const-decl "boolean" patient_th nil)
    (per_a_d_r_select const-decl "boolean" patient_th nil)
    (per_a_select const-decl "boolean" patient_th nil)
    (p_device const-decl "interface_st" system_th nil)
    (p_select_display_mode const-decl "interface_st" system_th nil)
    (p_null const-decl "patient" patient_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (patient_menu const-decl "interface_st" system_th nil)
    (update_patient_prev_entry const-decl "interface_st" system_th nil)
    (p_select const-decl "interface_st" system_th nil)
    (p_change_menu const-decl "m_state" menu_th nil)
    (dev_ex const-decl "p_state" patient_th nil)
    (execute_ip const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (fun_ip const-decl "d_state" infusion_pumps_th nil)
    (fun_pause const-decl "d_state" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (fun_infuse const-decl "d_state" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (fun_chooserate const-decl "d_state" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (fun_choosevtbi const-decl "d_state" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (fun_choosetime const-decl "d_state" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (fun_confirm const-decl "d_state" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (fun_bolus const-decl "d_state" infusion_pumps_th nil)
    (bolus_timeout const-decl "itimes" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (fun_decr const-decl "d_state" infusion_pumps_th nil)
    (/= const-decl "boolean" notequal nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (fun_incr const-decl "d_state" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (fun_power const-decl "d_state" infusion_pumps_th nil)
    (init_d_state const-decl "d_state" infusion_pumps_th nil)
    (init_ip_panel const-decl "panel" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (next_act_pm const-decl "n_state" node_th nil)
    (sub_act_buff const-decl "act_q_type" node_th nil)
    (empty_act_msg const-decl "act_message_type" node_th nil)
    (no_node const-decl "node" node_th nil)
    (act_send const-decl "n_state" node_th nil)
    (add_act_buff const-decl "act_q_type" node_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (itimes type-eq-decl nil coord_t_and_c_th nil)
    (clamp_state type-decl nil coord_t_and_c_th nil)
    (dispmode type-decl nil coord_t_and_c_th nil)
    (mode type-decl nil coord_t_and_c_th nil)
    (priority_type type-decl nil coord_t_and_c_th nil)
    (irates type-eq-decl nil coord_t_and_c_th nil)
    (ivols type-eq-decl nil coord_t_and_c_th nil)
    (d_state type-eq-decl nil infusion_pumps_th nil)
    (devices_type type-eq-decl nil patient_th nil)
    (main_enum_par type-eq-decl nil devices_th nil)
    (main_num_par type-eq-decl nil devices_th nil)
    (devs_type type-eq-decl nil devices_th nil)
    (enum type-decl nil coord_t_and_c_th nil)
    (nindex type-eq-decl nil coord_t_and_c_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (par type-decl nil coord_t_and_c_th nil)
    (rel_op_type type-decl nil coord_t_and_c_th nil)
    (actmsg adt-constructor-decl "(actmsg?)" node_th nil)
    (actmsg? adt-recognizer-decl "[msg_hdr_type -> boolean]" node_th
     nil)
    (msg_hdr_type type-decl nil node_th nil)
    (pan_msg_waiting_type type-eq-decl nil node_th nil)
    (connected type-eq-decl nil node_th nil)
    (network_error_type type-eq-decl nil node_th nil)
    (pan_message_type type-eq-decl nil node_th nil)
    (act_message_type type-eq-decl nil node_th nil)
    (act_msg_waiting_type type-eq-decl nil node_th nil)
    (patient_enter_action const-decl "state" system_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (p_select_d_mode const-decl "p_state" patient_th nil)
    (m_p_ed_act_invoke_lemma formula-decl nil p_interface_th nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (menu type-decl nil coord_t_and_c_th nil)
    (patient_menu_act const-decl "interface_st" system_th nil)
    (device? adt-recognizer-decl "[menu -> boolean]" coord_t_and_c_th
     nil)
    (device adt-constructor-decl "(device?)" coord_t_and_c_th nil)
    (select? adt-recognizer-decl "[menu -> boolean]" coord_t_and_c_th
     nil)
    (select adt-constructor-decl "(select?)" coord_t_and_c_th nil))
   shostak))
 (menu_home_action_lemma 0
  (menu_home_action_lemma-1 nil 3888659014
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (lemma "pdfa_lemma" ("a" "a!1" "p" "p!1" "st" "xs!1`ss"))
          ((""
            (lemma "device_ed_pump_lemma"
             ("a" "a!1" "d" "d!1" "p" "p!1" "xs" "xs!1"))
            (("" (beta -1)
              (("" (split -1)
                (("1" (replace -1 12)
                  (("1" (replace -2 12)
                    (("1" (expand "p_d_fun_actionx" 12)
                      (("1" (replace -22 12)
                        (("1" (expand "reflect_device_to_patient" 12)
                          (("1" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (assert) nil nil) ("3" (assert) nil nil)
                 ("4" (assert) nil nil) ("5" (propax) nil nil)
                 ("6" (propax) nil nil) ("7" (assert) nil nil)
                 ("8" (assert) nil nil) ("9" (propax) nil nil)
                 ("10" (assert) nil nil) ("11" (propax) nil nil)
                 ("12" (propax) nil nil) ("13" (assert) nil nil)
                 ("14" (propax) nil nil) ("15" (propax) nil nil)
                 ("16" (propax) nil nil) ("17" (propax) nil nil)
                 ("18" (propax) nil nil) ("19" (propax) nil nil)
                 ("20" (propax) nil nil) ("21" (propax) nil nil)
                 ("22" (propax) nil nil) ("23" (propax) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" p_interface_th nil)
    (<= const-decl "bool" reals nil)
    (maxinfuse formal-const-decl "posnat" p_interface_th nil)
    (maxrate formal-const-decl "posnat" p_interface_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (interface_st type-eq-decl nil system_th nil)
    (m_state type-eq-decl nil menu_th nil)
    (state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (pdfa_lemma formula-decl nil ICE_templates_rsce_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (p_d_fun_actionx const-decl "state" ICE_templates_rsce_th nil)
    (reflect_device_to_patient const-decl "state" ICE_templates_rsce_th
     nil)
    (device type-eq-decl nil devices_th nil)
    (device_ed_pump_lemma formula-decl nil p_interface_th nil))
   shostak))
 (home_action_lemma 0
  (home_action_lemma-1 nil 3879918307
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (lemma "pdfa_lemma" ("a" "powr" "p" "p!1" "st" "xs!1`ss"))
          ((""
            (lemma "lemma_fun_act_p"
             ("a" "powr" "d" "d!1" "p" "p!1" "st" "xs!1`ss"))
            (("" (beta -1)
              (("" (split -1)
                (("1" (flatten -1)
                  (("1"
                    (lemma "p_to_act_ip"
                     ("a" "powr" "d" "d!1" "p" "p!1" "st" "xs!1`ss"))
                    (("1" (beta -1)
                      (("1" (split -1)
                        (("1" (assert)
                          (("1"
                            (lemma "lemma_reflect_device_p"
                             ("d" "d!1" "p" "p!1" "st"
                              "p_fun_act(powr, d!1, p!1, xs!1`ss)"))
                            (("1" (beta -1)
                              (("1"
                                (split -1)
                                (("1"
                                  (flatten -1)
                                  (("1"
                                    (lemma
                                     "lemma_reflect_device_p_ds"
                                     ("d"
                                      "d!1"
                                      "p"
                                      "p!1"
                                      "st"
                                      "p_fun_act(powr, d!1, p!1, xs!1`ss)"))
                                    (("1"
                                      (beta -1)
                                      (("1"
                                        (split -1)
                                        (("1"
                                          (flatten -1)
                                          (("1"
                                            (lemma
                                             "lemma_reflect_patient_device_consistent"
                                             ("d"
                                              "d!1"
                                              "p"
                                              "p!1"
                                              "st"
                                              "p_fun_act(powr, d!1, p!1, xs!1`ss)"))
                                            (("1"
                                              (beta -1)
                                              (("1"
                                                (split -1)
                                                (("1"
                                                  (expand
                                                   "p_d_home"
                                                   11)
                                                  (("1"
                                                    (replace -35 11)
                                                    (("1"
                                                      (expand
                                                       "p_d_fun_actionx"
                                                       11)
                                                      (("1"
                                                        (replace
                                                         -55
                                                         11)
                                                        (("1"
                                                          (expand
                                                           "consistent_patient_d"
                                                           -1)
                                                          (("1"
                                                            (replace
                                                             -16
                                                             -1)
                                                            (("1"
                                                              (replace
                                                               -32
                                                               -1)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (flatten
                                                                   -1)
                                                                  (("1"
                                                                    (replace
                                                                     -1
                                                                     11)
                                                                    (("1"
                                                                      (split
                                                                       11)
                                                                      (("1"
                                                                        (expand
                                                                         "available_act"
                                                                         1)
                                                                        (("1"
                                                                          (replace
                                                                           -3
                                                                           1)
                                                                          (("1"
                                                                            (replace
                                                                             -23
                                                                             1)
                                                                            (("1"
                                                                              (expand
                                                                               "execute_ip"
                                                                               1)
                                                                              (("1"
                                                                                (expand
                                                                                 "fun_ip"
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "fun_power"
                                                                                   1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "update_panel"
                                                                                     1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "upd_pan"
                                                                                       1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "tick"
                                                                                         1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "update_panel"
                                                                                           1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "upd_pan"
                                                                                             1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "enum_par"
                                                                                               1)
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "available_act"
                                                                         1)
                                                                        (("2"
                                                                          (replace
                                                                           -3
                                                                           1)
                                                                          (("2"
                                                                            (replace
                                                                             -23
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "execute_ip"
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "fun_ip"
                                                                                 1)
                                                                                (("2"
                                                                                  (expand
                                                                                   "fun_power"
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "update_panel"
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "upd_pan"
                                                                                       1)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "tick"
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "update_panel"
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "upd_pan"
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "enum_par"
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "timeout"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (replace -25 1)
                                                  (("2"
                                                    (replace -29 1)
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (replace -25 1)
                                                  (("3"
                                                    (replace -29 1)
                                                    (("3"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("4"
                                                  (replace -31 1)
                                                  (("4"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("5"
                                                  (replace -31 1)
                                                  (("5"
                                                    (replace -29 1)
                                                    (("5"
                                                      (replace -25 1)
                                                      (("5"
                                                        (replace -32 1)
                                                        (("5"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("6"
                                                  (replace -31 1)
                                                  (("6"
                                                    (replace -32 1)
                                                    (("6"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("7"
                                                  (replace -25 1)
                                                  (("7"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("8"
                                                  (replace -31 1)
                                                  (("8"
                                                    (replace -32 1)
                                                    (("8"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("9"
                                                  (replace -25 1)
                                                  (("9"
                                                    (expand
                                                     "p_fun_act"
                                                     1)
                                                    (("9"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("10"
                                                  (assert)
                                                  nil
                                                  nil)
                                                 ("11"
                                                  (replace -30 1)
                                                  (("11"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("12"
                                                  (assert)
                                                  nil
                                                  nil)
                                                 ("13"
                                                  (replace -25 1)
                                                  (("13"
                                                    (replace -22 1)
                                                    (("13"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("14"
                                                  (replace -31 1)
                                                  (("14"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("15"
                                                  (replace -26 1)
                                                  (("15"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("16"
                                                  (replace -31 1)
                                                  (("16"
                                                    (replace -27 1)
                                                    (("16"
                                                      (replace -21 1)
                                                      (("16"
                                                        (assert)
                                                        (("16"
                                                          (expand
                                                           "execute_ip"
                                                           1)
                                                          (("16"
                                                            (expand
                                                             "fun_ip"
                                                             1)
                                                            (("16"
                                                              (expand
                                                               "fun_power"
                                                               1)
                                                              (("16"
                                                                (expand
                                                                 "update_panel"
                                                                 -1)
                                                                (("16"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("17"
                                                  (replace -25 1)
                                                  (("17"
                                                    (expand
                                                     "p_fun_act"
                                                     1)
                                                    (("17"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("18"
                                                  (replace -25 1)
                                                  (("18"
                                                    (expand
                                                     "p_fun_act"
                                                     1)
                                                    (("18"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (replace -22 1)
                                          (("2"
                                            (replace -26 1)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("3"
                                          (replace -22 1)
                                          (("3"
                                            (replace -26 1)
                                            (("3" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("4"
                                          (replace -28 1)
                                          (("4" (assert) nil nil))
                                          nil)
                                         ("5"
                                          (replace -28 1)
                                          (("5" (assert) nil nil))
                                          nil)
                                         ("6"
                                          (replace -28 1)
                                          (("6" (assert) nil nil))
                                          nil)
                                         ("7"
                                          (replace -22 1)
                                          (("7" (assert) nil nil))
                                          nil)
                                         ("8"
                                          (replace -28 1)
                                          (("8" (assert) nil nil))
                                          nil)
                                         ("9" (assert) nil nil)
                                         ("10"
                                          (replace -27 1)
                                          (("10" (propax) nil nil))
                                          nil)
                                         ("11" (assert) nil nil)
                                         ("12"
                                          (replace -22 1)
                                          (("12"
                                            (replace -19 1)
                                            (("12" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("13"
                                          (replace -28 1)
                                          (("13" (assert) nil nil))
                                          nil)
                                         ("14"
                                          (replace -28 1)
                                          (("14" (assert) nil nil))
                                          nil)
                                         ("15"
                                          (replace -22 1)
                                          (("15"
                                            (expand "p_fun_act" 1)
                                            (("15" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("16"
                                          (replace -22 1)
                                          (("16"
                                            (expand "p_fun_act" 1)
                                            (("16" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("17"
                                          (replace -22 1)
                                          (("17"
                                            (expand "p_fun_act" 1)
                                            (("17" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (replace -5 1)
                                  (("2"
                                    (replace -9 1)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (replace -5 1)
                                  (("3"
                                    (replace -9 1)
                                    (("3" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("4"
                                  (replace -11 1)
                                  (("4" (assert) nil nil))
                                  nil)
                                 ("5"
                                  (replace -11 1)
                                  (("5" (assert) nil nil))
                                  nil)
                                 ("6"
                                  (replace -11 1)
                                  (("6" (assert) nil nil))
                                  nil)
                                 ("7"
                                  (replace -5 1)
                                  (("7" (assert) nil nil))
                                  nil)
                                 ("8"
                                  (replace -11 1)
                                  (("8" (assert) nil nil))
                                  nil)
                                 ("9"
                                  (replace -5 1)
                                  (("9"
                                    (expand "p_fun_act" 1)
                                    (("9" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("10" (assert) nil nil)
                                 ("11"
                                  (replace -10 1)
                                  (("11" (propax) nil nil))
                                  nil)
                                 ("12" (assert) nil nil)
                                 ("13"
                                  (replace -5 1)
                                  (("13"
                                    (replace -2 1)
                                    (("13" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("14"
                                  (replace -11 1)
                                  (("14" (assert) nil nil))
                                  nil)
                                 ("15"
                                  (replace -11 1)
                                  (("15" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (propax) nil nil) ("3" (propax) nil nil)
                         ("4" (assert) nil nil) ("5" (assert) nil nil)
                         ("6" (assert) nil nil) ("7" (assert) nil nil)
                         ("8" (assert) nil nil) ("9" (assert) nil nil)
                         ("10" (assert) nil nil)
                         ("11" (assert) nil nil)
                         ("12" (propax) nil nil)
                         ("13" (assert) nil nil)
                         ("14" (assert) nil nil)
                         ("15" (propax) nil nil)
                         ("16" (assert) nil nil)
                         ("17" (propax) nil nil)
                         ("18" (assert)
                          (("18" (expand "p_d_per_action" -31)
                            (("18" (propax) nil nil)) nil))
                          nil)
                         ("19" (assert) nil nil)
                         ("20" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (propax) nil nil) ("3" (propax) nil nil)
                 ("4" (assert) nil nil) ("5" (assert) nil nil)
                 ("6" (assert) nil nil) ("7" (assert) nil nil)
                 ("8" (assert) nil nil) ("9" (assert) nil nil)
                 ("10" (assert) nil nil) ("11" (propax) nil nil)
                 ("12" (assert) nil nil) ("13" (assert) nil nil)
                 ("14" (propax) nil nil) ("15" (assert) nil nil)
                 ("16" (assert) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" p_interface_th nil)
    (<= const-decl "bool" reals nil)
    (maxinfuse formal-const-decl "posnat" p_interface_th nil)
    (maxrate formal-const-decl "posnat" p_interface_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (interface_st type-eq-decl nil system_th nil)
    (m_state type-eq-decl nil menu_th nil)
    (state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (powr adt-constructor-decl "(powr?)" coord_t_and_c_th nil)
    (powr? adt-recognizer-decl "[action_id -> boolean]"
     coord_t_and_c_th nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (pdfa_lemma formula-decl nil ICE_templates_rsce_th nil)
    (p_d_per_action const-decl "boolean" ICE_templates_rsce_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (p_d_home const-decl "boolean" p_interface_th nil)
    (p_d_fun_actionx const-decl "state" ICE_templates_rsce_th nil)
    (consistent_patient_d const-decl "boolean" ICE_templates_rsce_th
     nil)
    (execute_ip const-decl "d_state" infusion_pumps_th nil)
    (fun_power const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (tick const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (fun_ip const-decl "d_state" infusion_pumps_th nil)
    (available_act const-decl "panel" infusion_pumps_th nil)
    (timeout const-decl "itimes" infusion_pumps_th nil)
    (lemma_reflect_patient_device_consistent formula-decl nil
     ICE_templates_rsce_th nil)
    (lemma_reflect_device_p_ds formula-decl nil ICE_templates_rsce_th
     nil)
    (p_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (lemma_reflect_device_p formula-decl nil ICE_templates_rsce_th nil)
    (p_to_act_ip formula-decl nil ICE_templates_rsce_th nil)
    (lemma_fun_act_p formula-decl nil ICE_templates_rsce_th nil)
    (device type-eq-decl nil devices_th nil))
   shostak))
 (m_p_d_fun_action_lemma 0
  (m_p_d_fun_action_lemma-1 nil 3888387828
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "menu_home_action_lemma"
           ("a" "powr" "d" "d!1" "p" "p!1" "xs" "xs!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1"
                (lemma "p_d_fun_action_lemma_ex"
                 ("a" "powr" "d" "d!1" "p" "p!1" "st" "xs!1`ss"))
                (("1" (beta -1)
                  (("1" (split -1)
                    (("1" (flatten -1)
                      (("1"
                        (lemma "p_d_fun_action_lemma_pdispdevice"
                         ("a" "powr" "d" "d!1" "p" "p!1" "st"
                          "xs!1`ss"))
                        (("1" (beta -1)
                          (("1" (split -1)
                            (("1" (flatten -1)
                              (("1"
                                (assert)
                                (("1"
                                  (replace -5 11)
                                  (("1"
                                    (expand "p_d_homes" 11)
                                    (("1"
                                      (replace -1 11)
                                      (("1"
                                        (replace -3 11)
                                        (("1"
                                          (expand "execute_ip" 11)
                                          (("1"
                                            (expand "fun_ip" 11)
                                            (("1"
                                              (expand "fun_power" 11)
                                              (("1"
                                                (expand
                                                 "update_panel"
                                                 11)
                                                (("1"
                                                  (expand "upd_pan" 11)
                                                  (("1"
                                                    (expand "tick" 11)
                                                    (("1"
                                                      (expand
                                                       "update_panel"
                                                       11)
                                                      (("1"
                                                        (expand
                                                         "upd_pan"
                                                         11)
                                                        (("1"
                                                          (expand
                                                           "timeout"
                                                           11)
                                                          (("1"
                                                            (expand
                                                             "available_act"
                                                             11)
                                                            (("1"
                                                              (expand
                                                               "enum_par"
                                                               11)
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (propax) nil nil)
                             ("3" (propax) nil nil)
                             ("4" (assert) nil nil)
                             ("5" (assert) nil nil)
                             ("6" (assert) nil nil)
                             ("7" (assert) nil nil)
                             ("8" (assert) nil nil)
                             ("9" (assert) nil nil)
                             ("10" (assert) nil nil)
                             ("11" (assert) nil nil)
                             ("12" (assert) nil nil)
                             ("13" (assert) nil nil)
                             ("14" (assert) nil nil)
                             ("15" (propax) nil nil)
                             ("16" (assert) nil nil)
                             ("17" (assert) nil nil)
                             ("18" (propax) nil nil)
                             ("19" (assert) nil nil)
                             ("20" (propax) nil nil)
                             ("21" (assert) nil nil)
                             ("22" (propax) nil nil)
                             ("23" (replace -16 1)
                              (("23" (propax) nil nil)) nil)
                             ("24" (propax) nil nil)
                             ("25" (propax) nil nil)
                             ("26" (expand "p_d_per_action" -19)
                              (("26" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (propax) nil nil) ("3" (propax) nil nil)
                     ("4" (assert) nil nil) ("5" (assert) nil nil)
                     ("6" (assert) nil nil) ("7" (assert) nil nil)
                     ("8" (assert) nil nil) ("9" (assert) nil nil)
                     ("10" (assert) nil nil) ("11" (assert) nil nil)
                     ("12" (assert) nil nil) ("13" (assert) nil nil)
                     ("14" (assert) nil nil) ("15" (propax) nil nil)
                     ("16" (assert) nil nil) ("17" (assert) nil nil)
                     ("18" (propax) nil nil) ("19" (assert) nil nil)
                     ("20" (propax) nil nil) ("21" (assert) nil nil)
                     ("22" (propax) nil nil) ("23" (assert) nil nil)
                     ("24" (propax) nil nil) ("25" (propax) nil nil)
                     ("26" (expand "p_d_per_action" -17)
                      (("26" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil) ("3" (assert) nil nil)
               ("4" (assert) nil nil) ("5" (propax) nil nil)
               ("6" (propax) nil nil) ("7" (propax) nil nil)
               ("8" (propax) nil nil) ("9" (propax) nil nil)
               ("10" (assert) nil nil) ("11" (assert) nil nil)
               ("12" (assert) nil nil) ("13" (assert) nil nil)
               ("14" (propax) nil nil) ("15" (assert) nil nil)
               ("16" (propax) nil nil) ("17" (propax) nil nil)
               ("18" (assert) nil nil) ("19" (propax) nil nil)
               ("20" (assert) nil nil) ("21" (propax) nil nil)
               ("22" (assert) nil nil) ("23" (propax) nil nil)
               ("24" (propax) nil nil) ("25" (propax) nil nil)
               ("26" (propax) nil nil) ("27" (propax) nil nil)
               ("28" (propax) nil nil) ("29" (propax) nil nil)
               ("30" (propax) nil nil) ("31" (propax) nil nil)
               ("32" (propax) nil nil) ("33" (propax) nil nil)
               ("34" (propax) nil nil) ("35" (propax) nil nil)
               ("36" (propax) nil nil) ("37" (propax) nil nil)
               ("38" (propax) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((interface_st type-eq-decl nil system_th nil)
    (state type-eq-decl nil system_th nil)
    (m_state type-eq-decl nil menu_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" p_interface_th nil)
    (maxinfuse formal-const-decl "posnat" p_interface_th nil)
    (maxrate formal-const-decl "posnat" p_interface_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (powr adt-constructor-decl "(powr?)" coord_t_and_c_th nil)
    (powr? adt-recognizer-decl "[action_id -> boolean]"
     coord_t_and_c_th nil)
    (boolean nonempty-type-decl nil booleans nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (menu_home_action_lemma formula-decl nil p_interface_th nil)
    (p_d_per_action const-decl "boolean" ICE_templates_rsce_th nil)
    (execute_ip const-decl "d_state" infusion_pumps_th nil)
    (fun_power const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (timeout const-decl "itimes" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (available_act const-decl "panel" infusion_pumps_th nil)
    (tick const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (fun_ip const-decl "d_state" infusion_pumps_th nil)
    (p_d_homes const-decl "boolean" p_interface_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (p_d_fun_action_lemma_pdispdevice formula-decl nil
     ICE_templates_rsce_th nil)
    (p_d_fun_action_lemma_ex formula-decl nil ICE_templates_rsce_th
     nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (node_to_patient type-eq-decl nil system_th nil))
   shostak))
 (m_home_action_lemma 0
  (m_home_action_lemma-1 nil 3888042837
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "m_action_select_lemma"
           ("a" "powr" "d" "d!1" "p" "p!1" "xs" "xs!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1"
                (lemma "home_action_lemma"
                 ("d" "d!1" "p" "p!1" "xs" "xs!1"))
                (("1" (beta -1)
                  (("1" (split -1)
                    (("1"
                      (lemma "pdfa_lemma"
                       ("a" "powr" "p" "p!1" "st" "xs!1`ss"))
                      (("1" (replace -3 11)
                        (("1" (replace -1 -2)
                          (("1" (expand "p_d_fun_actionx" -2)
                            (("1" (replace -23 -2)
                              (("1"
                                (beta -2)
                                (("1"
                                  (expand "p_fun_act" -2)
                                  (("1" (postpone) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (postpone) nil nil) ("3" (postpone) nil nil)
                     ("4" (postpone) nil nil) ("5" (postpone) nil nil)
                     ("6" (postpone) nil nil) ("7" (postpone) nil nil)
                     ("8" (postpone) nil nil) ("9" (postpone) nil nil)
                     ("10" (postpone) nil nil)
                     ("11" (postpone) nil nil)
                     ("12" (postpone) nil nil)
                     ("13" (postpone) nil nil)
                     ("14" (postpone) nil nil)
                     ("15" (postpone) nil nil)
                     ("16" (postpone) nil nil)
                     ("17" (postpone) nil nil)
                     ("18" (postpone) nil nil)
                     ("19" (postpone) nil nil)
                     ("20" (postpone) nil nil)
                     ("21" (postpone) nil nil)
                     ("22" (postpone) nil nil)
                     ("23" (postpone) nil nil)
                     ("24" (postpone) nil nil)
                     ("25" (postpone) nil nil)
                     ("26" (postpone) nil nil)
                     ("27" (postpone) nil nil)
                     ("28" (postpone) nil nil)
                     ("29" (postpone) nil nil)
                     ("30" (postpone) nil nil)
                     ("31" (postpone) nil nil)
                     ("32" (postpone) nil nil)
                     ("33" (postpone) nil nil)
                     ("34" (postpone) nil nil))
                    nil))
                  nil))
                nil)
               ("2" (postpone) nil nil) ("3" (postpone) nil nil)
               ("4" (postpone) nil nil) ("5" (postpone) nil nil)
               ("6" (postpone) nil nil) ("7" (postpone) nil nil)
               ("8" (postpone) nil nil) ("9" (postpone) nil nil)
               ("10" (postpone) nil nil) ("11" (postpone) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (m_c_d_e 0
  (m_c_d_e-1 nil 3878896554
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (expand "m_connect_device_patient")
          (("" (assert)
            (("" (expand "patient_enter_device_name")
              (("" (expand "p_enter_name" 3)
                (("" (expand "connect_new_element" 3)
                  (("" (lift-if)
                    (("" (split)
                      (("1" (flatten)
                        (("1" (split)
                          (("1" (flatten)
                            (("1" (expand "patient_menu_act" 1)
                              (("1"
                                (expand "patient_menu" 1)
                                (("1"
                                  (expand "p_enter" 1)
                                  (("1"
                                    (expand "p_complete_device_p" 1)
                                    (("1"
                                      (expand
                                       "update_patient_prev_entry"
                                       1)
                                      (("1"
                                        (expand "p_change_menu" 1)
                                        (("1"
                                          (lift-if 1)
                                          (("1"
                                            (split 1)
                                            (("1"
                                              (flatten 1)
                                              (("1"
                                                (expand "p_device" 1)
                                                (("1"
                                                  (lift-if 1)
                                                  (("1"
                                                    (split 1)
                                                    (("1"
                                                      (flatten 1)
                                                      (("1"
                                                        (split 1)
                                                        (("1"
                                                          (flatten 1)
                                                          (("1"
                                                            (expand
                                                             "p_select_display_mode"
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "mapping_to_ps"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "p_select_d_mode"
                                                                 1)
                                                                (("1"
                                                                  (lift-if
                                                                   1)
                                                                  (("1"
                                                                    (split
                                                                     1)
                                                                    (("1"
                                                                      (flatten
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "p_complete_device"
                                                                         1)
                                                                        (("1"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "per_d_select"
                                                                       1)
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (flatten 1)
                                                          (("2"
                                                            (split 2)
                                                            (("1"
                                                              (flatten
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "p_device_entry"
                                                                 1)
                                                                (("1"
                                                                  (lift-if
                                                                   1)
                                                                  (("1"
                                                                    (split
                                                                     1)
                                                                    (("1"
                                                                      (flatten
                                                                       1)
                                                                      (("1"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "p_complete_device"
                                                                       1)
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten
                                                               1)
                                                              (("2"
                                                                (split
                                                                 2)
                                                                (("1"
                                                                  (flatten
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "p_edit_device"
                                                                     1)
                                                                    (("1"
                                                                      (lift-if
                                                                       1)
                                                                      (("1"
                                                                        (split
                                                                         1)
                                                                        (("1"
                                                                          (flatten
                                                                           1)
                                                                          (("1"
                                                                            (expand
                                                                             "p_complete_device"
                                                                             1)
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "per_p_edit"
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "p_complete_device"
                                                                             1)
                                                                            (("2"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "p_escape"
                                                                     2)
                                                                    (("2"
                                                                      (expand
                                                                       "p_complete_device"
                                                                       2)
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten 1)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten 1)
                                              (("2"
                                                (expand "p_device" 2)
                                                (("2"
                                                  (lift-if 2)
                                                  (("2"
                                                    (split 2)
                                                    (("1"
                                                      (flatten 1)
                                                      (("1"
                                                        (split 1)
                                                        (("1"
                                                          (flatten 1)
                                                          (("1"
                                                            (expand
                                                             "p_select_display_mode"
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "mapping_to_ps"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "p_select_d_mode"
                                                                 1)
                                                                (("1"
                                                                  (lift-if
                                                                   1)
                                                                  (("1"
                                                                    (split
                                                                     1)
                                                                    (("1"
                                                                      (grind)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (flatten 1)
                                                          (("2"
                                                            (split 2)
                                                            (("1"
                                                              (flatten
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "p_device_entry"
                                                                 1)
                                                                (("1"
                                                                  (lift-if
                                                                   1)
                                                                  (("1"
                                                                    (split
                                                                     1)
                                                                    (("1"
                                                                      (flatten
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "p_complete_device"
                                                                         2)
                                                                        (("1"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten
                                                               1)
                                                              (("2"
                                                                (split
                                                                 2)
                                                                (("1"
                                                                  (flatten
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "p_edit_device"
                                                                     1)
                                                                    (("1"
                                                                      (lift-if
                                                                       1)
                                                                      (("1"
                                                                        (split
                                                                         1)
                                                                        (("1"
                                                                          (grind)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "p_escape"
                                                                     2)
                                                                    (("2"
                                                                      (expand
                                                                       "p_complete_device"
                                                                       2)
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten 1)
                                                      (("2"
                                                        (expand
                                                         "p_escape"
                                                         3)
                                                        (("2"
                                                          (expand
                                                           "p_complete_device"
                                                           3)
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (flatten 1)
                            (("2" (split 1)
                              (("1"
                                (expand "patient_menu_act" 1)
                                (("1"
                                  (expand "patient_menu" 1)
                                  (("1"
                                    (expand "patient_menu_act" 1)
                                    (("1"
                                      (expand "patient_menu" 1)
                                      (("1"
                                        (expand
                                         "update_patient_prev_entry"
                                         1)
                                        (("1"
                                          (expand "p_enter" 1)
                                          (("1"
                                            (expand "p_change_menu" 1)
                                            (("1"
                                              (expand "p_device" 1)
                                              (("1"
                                                (expand "p_escape" 1)
                                                (("1"
                                                  (expand
                                                   "p_select_display_mode"
                                                   1)
                                                  (("1"
                                                    (expand
                                                     "p_change_menu"
                                                     1)
                                                    (("1"
                                                      (lift-if 1)
                                                      (("1"
                                                        (split 1)
                                                        (("1"
                                                          (flatten 1)
                                                          (("1"
                                                            (split 1)
                                                            (("1"
                                                              (flatten
                                                               1)
                                                              (("1"
                                                                (split
                                                                 1)
                                                                (("1"
                                                                  (flatten
                                                                   1)
                                                                  (("1"
                                                                    (lift-if)
                                                                    (("1"
                                                                      (split
                                                                       1)
                                                                      (("1"
                                                                        (flatten
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "mapping_to_ps"
                                                                           1)
                                                                          (("1"
                                                                            (expand
                                                                             "p_complete_device_p"
                                                                             1)
                                                                            (("1"
                                                                              (expand
                                                                               "p_change_menu"
                                                                               1)
                                                                              (("1"
                                                                                (expand
                                                                                 "p_complete_device"
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "p_select_d_mode"
                                                                                   1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "connect_to_coordinator"
                                                                                     1)
                                                                                    (("1"
                                                                                      (lift-if
                                                                                       1)
                                                                                      (("1"
                                                                                        (split
                                                                                         1)
                                                                                        (("1"
                                                                                          (flatten
                                                                                           1)
                                                                                          (("1"
                                                                                            (lift-if
                                                                                             1)
                                                                                            (("1"
                                                                                              (split
                                                                                               1)
                                                                                              (("1"
                                                                                                (flatten
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "connect_device_to_patient"
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (postpone)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (postpone)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (postpone)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (postpone)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (postpone)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (postpone)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (postpone)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (postpone) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (postpone) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (m_c_d_p 0
  (m_c_d_p-1 nil 3878195768
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (expand "m_connect_patient_coord" 3)
          (("" (lemma "m_c_p_c" ("p" "p!1"))
            (("" (assert)
              (("" (expand "m_connect_device_patient" 3)
                (("" (expand "patient_enter_device_name" 3)
                  (("" (expand "init_xstate" 3)
                    (("" (expand "patient_menu_act" 3)
                      (("" (expand "patient_menu" 3)
                        (("" (lift-if 3)
                          (("" (split 3)
                            (("1" (flatten 1)
                              (("1"
                                (expand "connect_new_element" 1)
                                (("1"
                                  (lift-if 1)
                                  (("1"
                                    (split 1)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (split 1)
                                        (("1"
                                          (flatten 1)
                                          (("1"
                                            (expand
                                             "update_patient_prev_entry"
                                             1)
                                            (("1"
                                              (expand "p_enter" 1)
                                              (("1"
                                                (expand
                                                 "connect_to_coordinator"
                                                 1)
                                                (("1"
                                                  (lift-if 1)
                                                  (("1"
                                                    (split 1)
                                                    (("1"
                                                      (flatten 1)
                                                      (("1"
                                                        (lift-if 1)
                                                        (("1"
                                                          (split 1)
                                                          (("1"
                                                            (flatten 1)
                                                            (("1"
                                                              (expand
                                                               "p_device"
                                                               1)
                                                              (("1"
                                                                (lift-if
                                                                 1)
                                                                (("1"
                                                                  (split
                                                                   1)
                                                                  (("1"
                                                                    (flatten
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "p_device_entry"
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "p_enter_name"
                                                                         1)
                                                                        (("1"
                                                                          (lift-if
                                                                           1)
                                                                          (("1"
                                                                            (split
                                                                             1)
                                                                            (("1"
                                                                              (flatten
                                                                               1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (flatten
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "p_complete_device_p"
                                                                                 1)
                                                                                (("2"
                                                                                  (expand
                                                                                   "p_complete_device"
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "connect_to_coordinator"
                                                                                     2)
                                                                                    (("2"
                                                                                      (lift-if
                                                                                       2)
                                                                                      (("2"
                                                                                        (split
                                                                                         2)
                                                                                        (("1"
                                                                                          (flatten
                                                                                           1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "p_complete_device_p"
                                                                                             1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "p_enter"
                                                                                               1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "p_enter_name"
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (lift-if
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (flatten
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "update_patient_prev_entry"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "p_device"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (lift-if
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (flatten
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "p_device_entry"
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "p_complete_device"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "p_enter"
                                                                                                                       3)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "p_enter_name"
                                                                                                                         3)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "p_complete_device_p"
                                                                                                                           3)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "update_patient_prev_entry"
                                                                                                                             3)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "p_change_menu"
                                                                                                                               3)
                                                                                                                              (("1"
                                                                                                                                (lift-if
                                                                                                                                 3)
                                                                                                                                (("1"
                                                                                                                                  (split
                                                                                                                                   3)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "p_complete_device"
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "p_device"
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (flatten
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (lift-if
                                                                                                                                           1)
                                                                                                                                          (("1"
                                                                                                                                            (split
                                                                                                                                             1)
                                                                                                                                            (("1"
                                                                                                                                              (flatten
                                                                                                                                               1)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "p_device_entry"
                                                                                                                                                 1)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "p_change_menu"
                                                                                                                                                   1)
                                                                                                                                                  (("1"
                                                                                                                                                    (lift-if
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (split
                                                                                                                                                       1)
                                                                                                                                                      (("1"
                                                                                                                                                        (flatten
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "connect_to_coordinator"
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "init_state"
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "init_p_state"
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "init_disp_top"
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (flatten
                                                                                                                                                         1)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "connect_to_coordinator"
                                                                                                                                                           1)
                                                                                                                                                          (("2"
                                                                                                                                                            (lift-if
                                                                                                                                                             1)
                                                                                                                                                            (("2"
                                                                                                                                                              (split
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "init_state"
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "init_p_state"
                                                                                                                                                                   1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "connect_device_to_patient"
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (apply-extensionality
                                                                                                                                                                       1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lift-if
                                                                                                                                                                         1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (split
                                                                                                                                                                           1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (flatten
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "add_nde_patient_device"
                                                                                                                                                                               1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (lift-if
                                                                                                                                                                                 1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (split
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (flatten
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (grind)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (flatten
                                                                                                                                                                             1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lift-if
                                                                                                                                                                               2)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (split
                                                                                                                                                                                 2)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (grind)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (propax)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "init_state"
                                                                                                                                                                 1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "init_p_state"
                                                                                                                                                                   1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "connect_to_coordinator"
                                                                                                                                               1)
                                                                                                                                              (("2"
                                                                                                                                                (grind)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (flatten
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "init_state"
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "init_p_state"
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "connect_to_coordinator"
                                                                                                                                           1)
                                                                                                                                          (("2"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (flatten
                                                                                                                 1)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "init_state"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "init_p_state"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "init_state"
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "init_p_state"
                                                                                             1)
                                                                                            (("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "p_enter_name"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "init_state"
                                                                       1)
                                                                      (("2"
                                                                        (expand
                                                                         "init_p_state"
                                                                         1)
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "p_enter_name"
                                                             1)
                                                            (("2"
                                                              (expand
                                                               "init_state"
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "init_p_state"
                                                                 1)
                                                                (("2"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "init_state"
                                                       1)
                                                      (("2"
                                                        (expand
                                                         "init_p_state"
                                                         1)
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (split 1)
                                            (("1"
                                              (expand
                                               "connect_to_coordinator"
                                               1)
                                              (("1"
                                                (expand
                                                 "connect_to_coordinator"
                                                 1)
                                                (("1"
                                                  (expand
                                                   "update_patient_prev_entry"
                                                   1)
                                                  (("1"
                                                    (lift-if 1)
                                                    (("1"
                                                      (split 1)
                                                      (("1"
                                                        (flatten 1)
                                                        (("1"
                                                          (lift-if 1)
                                                          (("1"
                                                            (split 1)
                                                            (("1"
                                                              (flatten
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "connect_device_to_patient"
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "p_enter_name"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "p_enter"
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "p_device"
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "init_state"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "init_p_state"
                                                                           1)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "p_device_entry"
                                                                               1)
                                                                              (("1"
                                                                                (lift-if
                                                                                 1)
                                                                                (("1"
                                                                                  (split
                                                                                   1)
                                                                                  (("1"
                                                                                    (flatten
                                                                                     1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "p_change_menu"
                                                                                       2)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "p_complete_device_p"
                                                                                         2)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "init_disp_top"
                                                                                           1)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "p_complete_device_p"
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "init_disp_top"
                                                                                       1)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "p_device"
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "p_enter_name"
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "p_enter"
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "p_escape"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "init_state"
                                                                       1)
                                                                      (("2"
                                                                        (expand
                                                                         "init_p_state"
                                                                         1)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (expand
                                                                             "p_change_menu"
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "connect_device_to_patient"
                                                                               1)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "init_state" 1)
                              (("2"
                                (expand "init_p_state" 1)
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((m_connect_patient_coord const-decl "interface_st" p_interface_th
     nil)
    (patient_enter_device_name const-decl "state" system_th nil)
    (patient_menu_act const-decl "interface_st" system_th nil)
    (p_escape const-decl "interface_st" system_th nil)
    (nonempty_add_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (update_patient_device_alarm_disp const-decl "i_state"
     coordinator_th nil)
    (c_d_t_patient const-decl "i_state" coordinator_th nil)
    (member const-decl "bool" sets nil)
    (p_enter const-decl "interface_st" system_th nil)
    (p_device const-decl "interface_st" system_th nil)
    (p_device_entry const-decl "interface_st" system_th nil)
    (p_complete_device const-decl "p_state" patient_th nil)
    (p_change_menu const-decl "m_state" menu_th nil)
    (update_patient_alarm_disp const-decl "i_state" coordinator_th nil)
    (include_patient const-decl "i_state" coordinator_th nil)
    (emptyset const-decl "set" sets nil)
    (init_m_state const-decl "m_state" menu_th nil)
    (init_cm const-decl "menu_state" menu_th nil)
    (disp_focus_type type-decl nil coord_t_and_c_th nil)
    (patient_edit_type type-decl nil coord_t_and_c_th nil)
    (dpanel_type type-eq-decl nil patient_th nil)
    (p_dstates type-eq-decl nil patient_th nil)
    (node type-eq-decl nil node_th nil)
    (patient_mode_type type-decl nil coord_t_and_c_th nil)
    (constraint_setup_type type-eq-decl nil patient_th nil)
    (panel type-eq-decl nil coord_t_and_c_th nil)
    (p_disp_main_type type-eq-decl nil patient_th nil)
    (p_disp_top_type type-eq-decl nil patient_th nil)
    (p_entry_window_type type-eq-decl nil patient_th nil)
    (coord_panel_setup_type type-eq-decl nil patient_th nil)
    (rule_setup_type type-eq-decl nil patient_th nil)
    (patient_constraint_type type-eq-decl nil devices_th nil)
    (v_state type-eq-decl nil vital_signs_th nil)
    (p_state type-eq-decl nil patient_th nil)
    (error adt-constructor-decl "(error?)" coord_t_and_c_th nil)
    (error? adt-recognizer-decl "[patient_mode_type -> boolean]"
     coord_t_and_c_th nil)
    (d_state type-eq-decl nil infusion_pumps_th nil)
    (ivols type-eq-decl nil coord_t_and_c_th nil)
    (irates type-eq-decl nil coord_t_and_c_th nil)
    (priority_type type-decl nil coord_t_and_c_th nil)
    (mode type-decl nil coord_t_and_c_th nil)
    (dispmode type-decl nil coord_t_and_c_th nil)
    (clamp_state type-decl nil coord_t_and_c_th nil)
    (itimes type-eq-decl nil coord_t_and_c_th nil)
    (parset type-eq-decl nil coord_t_and_c_th nil)
    (num_parameter type-eq-decl nil coord_t_and_c_th nil)
    (enum_parameter type-eq-decl nil coord_t_and_c_th nil)
    (action_ids type-eq-decl nil coord_t_and_c_th nil)
    (main_act type-eq-decl nil devices_th nil)
    (main_num_par type-eq-decl nil devices_th nil)
    (main_enum_par type-eq-decl nil devices_th nil)
    (devices_type type-eq-decl nil patient_th nil)
    (rel_op_type type-decl nil coord_t_and_c_th nil)
    (par type-decl nil coord_t_and_c_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (nindex type-eq-decl nil coord_t_and_c_th nil)
    (enum type-decl nil coord_t_and_c_th nil)
    (devs_type type-eq-decl nil devices_th nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (init_rule const-decl "patient_constraint_type" patient_th nil)
    (rule_type type-eq-decl nil devices_th nil)
    (production_type type-eq-decl nil devices_th nil)
    (dev_act_type type-eq-decl nil devices_th nil)
    (cindex type-eq-decl nil coord_t_and_c_th nil)
    (climit const-decl "nat" coord_t_and_c_th nil)
    (no_focus adt-constructor-decl "(no_focus?)" coord_t_and_c_th nil)
    (no_focus? adt-recognizer-decl "[disp_focus_type -> boolean]"
     coord_t_and_c_th nil)
    (edit_none adt-constructor-decl "(edit_none?)" coord_t_and_c_th
     nil)
    (edit_none? adt-recognizer-decl "[patient_edit_type -> boolean]"
     coord_t_and_c_th nil)
    (top adt-constructor-decl "(top?:: [patient_mode_type -> boolean])"
     coord_t_and_c_th nil)
    (top? adt-recognizer-decl "[patient_mode_type -> boolean]"
     coord_t_and_c_th nil)
    (infusion_pump adt-constructor-decl "(infusion_pump?)" devices_th
     nil)
    (infusion_pump? adt-recognizer-decl "[device_type -> boolean]"
     devices_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (menu_set type-eq-decl nil coord_t_and_c_th nil)
    (menu type-decl nil coord_t_and_c_th nil)
    (coord_entry_window_type type-eq-decl nil coordinator_th nil)
    (coord_disp_top_type type-eq-decl nil coordinator_th nil)
    (disp_patient_type type-eq-decl nil coordinator_th nil)
    (disp_device_type type-eq-decl nil coordinator_th nil)
    (disp_alarm_type type-eq-decl nil coordinator_th nil)
    (coord_db_type type-eq-decl nil coordinator_th nil)
    (update_n_graph const-decl "n_state" node_th nil)
    (n_state type-eq-decl nil node_th nil)
    (pan_msg_waiting_type type-eq-decl nil node_th nil)
    (connected type-eq-decl nil node_th nil)
    (network_error_type type-eq-decl nil node_th nil)
    (pan_message_type type-eq-decl nil node_th nil)
    (act_message_type type-eq-decl nil node_th nil)
    (act_msg_waiting_type type-eq-decl nil node_th nil)
    (add_nde_patient_device const-decl "p_state" patient_th nil)
    (device_type type-decl nil devices_th nil)
    (device type-eq-decl nil devices_th nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (posrat_div_posrat_is_posrat application-judgement "posrat"
     rationals nil)
    (increment_node const-decl "node" node_th nil)
    (connect_device_to_patient const-decl "interface_st" system_th nil)
    (p_complete_device_p const-decl "interface_st" system_th nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (init_state const-decl "state" system_th nil)
    (init_i_state const-decl "i_state" coordinator_th nil)
    (empty_config const-decl "patient_config" coordinator_th nil)
    (empty_device_display const-decl "disp_device_type" coordinator_th
     nil)
    (empty_patient_display const-decl "disp_patient_type"
     coordinator_th nil)
    (empty_alarm_disp const-decl "disp_alarm_type" coordinator_th nil)
    (empty_top_display const-decl "coord_disp_top_type" coordinator_th
     nil)
    (i_empty_entry_window const-decl "coord_entry_window_type"
     coordinator_th nil)
    (coord_node const-decl "node" node_th nil)
    (init_p_state const-decl "p_state" patient_th nil)
    (init_d_state const-decl "d_state" infusion_pumps_th nil)
    (init_ip_panel const-decl "panel" infusion_pumps_th nil)
    (init_vs const-decl "v_state" vital_signs_th nil)
    (init_vs_panel const-decl "panel" vital_signs_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (empty_constraint_setup const-decl "constraint_setup_type"
     patient_th nil)
    (init_constraint const-decl "constraint_type" patient_th nil)
    (null_ec const-decl "enum_constraint_type" patient_th nil)
    (null_nc const-decl "num_constraint_type" patient_th nil)
    (d_bot const-decl "device" devices_th nil)
    (init_rule_setup const-decl "rule_setup_type" patient_th nil)
    (init_panel_display const-decl "coord_panel_setup_type" patient_th
     nil)
    (init_disp_main const-decl "p_disp_main_type" patient_th nil)
    (init_disp_top const-decl "p_disp_top_type" patient_th nil)
    (empty_entry_window const-decl "p_entry_window_type" patient_th
     nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (undef_device const-decl "devs_type" devices_th nil)
    (nil_pd const-decl "patient_to_device" system_th nil)
    (nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (init_n_state const-decl "n_state" node_th nil)
    (empty_act_q const-decl "act_q_type" node_th nil)
    (empty_pan_q const-decl "pan_q_type" node_th nil)
    (empty_act_msg const-decl "act_message_type" node_th nil)
    (empty_pan_msg const-decl "pan_message_type" node_th nil)
    (empty_panel const-decl "panel" coord_t_and_c_th nil)
    (no_node const-decl "node" node_th nil)
    (root_node const-decl "node" node_th nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" p_interface_th nil)
    (maxinfuse formal-const-decl "posnat" p_interface_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" p_interface_th nil)
    (p_enter_name const-decl "p_state" patient_th nil)
    (connect_to_coordinator const-decl "interface_st" system_th nil)
    (update_patient_prev_entry const-decl "interface_st" system_th nil)
    (connect_new_element const-decl "interface_st" system_th nil)
    (patient_menu const-decl "interface_st" system_th nil)
    (init_xstate const-decl "interface_st" system_th nil)
    (m_connect_device_patient const-decl "interface_st" p_interface_th
     nil)
    (m_c_p_c formula-decl nil p_interface_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil))
   shostak))
 (m_s_d_p_w 0
  (m_s_d_p_w-1 nil 3878205164
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (expand "m_select_d_p_window")
          (("" (expand "patient_menu_act" 3)
            (("" (expand "patient_menu" 3)
              (("" (expand "update_patient_prev_entry" 3)
                (("" (expand "p_select" 3)
                  (("" (expand "p_change_menu" 3)
                    (("" (assert)
                      (("" (expand "p_device" 3)
                        (("" (expand "p_select_display_mode" 3)
                          (("" (expand "mapping_to_ps" 3)
                            (("" (expand "patient_select_mode" 3)
                              (("" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((m_select_d_p_window const-decl "interface_st" p_interface_th nil)
    (patient_menu const-decl "interface_st" system_th nil)
    (p_select const-decl "interface_st" system_th nil)
    (p_select_display_mode const-decl "interface_st" system_th nil)
    (patient_select_mode const-decl "state" system_th nil)
    (mapping_to_ps const-decl "interface_st" system_th nil)
    (p_device const-decl "interface_st" system_th nil)
    (p_change_menu const-decl "m_state" menu_th nil)
    (update_patient_prev_entry const-decl "interface_st" system_th nil)
    (patient_menu_act const-decl "interface_st" system_th nil))
   shostak))
 (m_initial_window 0
  (m_initial_window-1 nil 3878283308
   ("" (skosimp*)
    (("" (beta)
      (("" (lemma "m_c_d_p" ("d" "d!1" "p" "p!1"))
        (("" (beta -1)
          (("" (split -1)
            (("1"
              (lemma "m_s_d_p_w"
               ("d" "d!1" "p" "p!1" "xs"
                "m_connect_device_patient(p!1, d!1, m_connect_patient_coord (p!1, init_xstate))"))
              (("1" (beta -1)
                (("1" (split -1)
                  (("1" (flatten)
                    (("1" (replace -1 3)
                      (("1" (replace -2 3)
                        (("1" (expand "patient_select_mode" 3)
                          (("1" (expand "connect_device_to_patient" 3)
                            (("1" (expand "connect_to_coordinator" 3)
                              (("1"
                                (lift-if 3)
                                (("1"
                                  (split 3)
                                  (("1"
                                    (flatten 1)
                                    (("1"
                                      (lift-if 2)
                                      (("1"
                                        (split 2)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "init_xstate" 1)
                                            (("1"
                                              (apply-extensionality 1)
                                              (("1"
                                                (apply-extensionality
                                                 1)
                                                (("1"
                                                  (lift-if 1)
                                                  (("1"
                                                    (split 1)
                                                    (("1"
                                                      (flatten 1)
                                                      (("1"
                                                        (hide 3)
                                                        (("1"
                                                          (hide 2)
                                                          (("1"
                                                            (expand
                                                             "p_select_d_mode"
                                                             1)
                                                            (("1"
                                                              (lift-if
                                                               1)
                                                              (("1"
                                                                (split
                                                                 1)
                                                                (("1"
                                                                  (flatten
                                                                   1)
                                                                  (("1"
                                                                    (lift-if
                                                                     1)
                                                                    (("1"
                                                                      (split
                                                                       1)
                                                                      (("1"
                                                                        (flatten
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "add_nde_patient_device"
                                                                           1)
                                                                          (("1"
                                                                            (expand
                                                                             "init_state"
                                                                             1)
                                                                            (("1"
                                                                              (expand
                                                                               "init_p_state"
                                                                               1)
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           "per_d_select"
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "init_state"
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "init_p_state"
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "add_nde_patient_device"
                                                                                 1)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "per_d_select"
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "init_state"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "init_p_state"
                                                                       1)
                                                                      (("2"
                                                                        (expand
                                                                         "add_nde_patient_device"
                                                                         1)
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten 1)
                                    (("2"
                                      (expand "init_xstate" 1)
                                      (("2"
                                        (expand "init_state" 1)
                                        (("2"
                                          (expand "init_p_state" 1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (assert) nil nil) ("3" (assert) nil nil)
                   ("4" (grind) nil nil) ("5" (grind) nil nil)
                   ("6" (grind) nil nil) ("7" (grind) nil nil))
                  nil))
                nil))
              nil)
             ("2" (grind) nil nil) ("3" (grind) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((init_xstate const-decl "interface_st" system_th nil)
    (m_connect_patient_coord const-decl "interface_st" p_interface_th
     nil)
    (m_connect_device_patient const-decl "interface_st" p_interface_th
     nil)
    (interface_st type-eq-decl nil system_th nil)
    (state type-eq-decl nil system_th nil)
    (m_state type-eq-decl nil menu_th nil)
    (m_s_d_p_w formula-decl nil p_interface_th nil)
    (patient_select_mode const-decl "state" system_th nil)
    (connect_to_coordinator const-decl "interface_st" system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (init_p_state const-decl "p_state" patient_th nil)
    (empty_entry_window const-decl "p_entry_window_type" patient_th
     nil)
    (rel_op_type type-decl nil coord_t_and_c_th nil)
    (par type-decl nil coord_t_and_c_th nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (nindex type-eq-decl nil coord_t_and_c_th nil)
    (enum type-decl nil coord_t_and_c_th nil)
    (devs_type type-eq-decl nil devices_th nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (top adt-constructor-decl "(top?:: [patient_mode_type -> boolean])"
     coord_t_and_c_th nil)
    (top? adt-recognizer-decl "[patient_mode_type -> boolean]"
     coord_t_and_c_th nil)
    (add_nde_patient_device const-decl "p_state" patient_th nil)
    (p_select_d_mode const-decl "p_state" patient_th nil)
    (p_state type-eq-decl nil patient_th nil)
    (v_state type-eq-decl nil vital_signs_th nil)
    (patient_constraint_type type-eq-decl nil devices_th nil)
    (rule_setup_type type-eq-decl nil patient_th nil)
    (coord_panel_setup_type type-eq-decl nil patient_th nil)
    (p_entry_window_type type-eq-decl nil patient_th nil)
    (p_disp_top_type type-eq-decl nil patient_th nil)
    (p_disp_main_type type-eq-decl nil patient_th nil)
    (panel type-eq-decl nil coord_t_and_c_th nil)
    (constraint_setup_type type-eq-decl nil patient_th nil)
    (p_dstates type-eq-decl nil patient_th nil)
    (dpanel_type type-eq-decl nil patient_th nil)
    (patient_edit_type type-decl nil coord_t_and_c_th nil)
    (include_patient const-decl "i_state" coordinator_th nil)
    (clear adt-constructor-decl "(clear?)" node_th nil)
    (clear? adt-recognizer-decl "[nw_error_type -> boolean]" node_th
     nil)
    (update_patient_alarm_disp const-decl "i_state" coordinator_th nil)
    (infusion_pump adt-constructor-decl "(infusion_pump?)" devices_th
     nil)
    (infusion_pump? adt-recognizer-decl "[device_type -> boolean]"
     devices_th nil)
    (c_d_t_patient const-decl "i_state" coordinator_th nil)
    (device_type type-decl nil devices_th nil)
    (update_patient_device_alarm_disp const-decl "i_state"
     coordinator_th nil)
    (menu_set type-eq-decl nil coord_t_and_c_th nil)
    (menu type-decl nil coord_t_and_c_th nil)
    (patient_mode_type type-decl nil coord_t_and_c_th nil)
    (coord_entry_window_type type-eq-decl nil coordinator_th nil)
    (coord_disp_top_type type-eq-decl nil coordinator_th nil)
    (disp_patient_type type-eq-decl nil coordinator_th nil)
    (disp_focus_type type-decl nil coord_t_and_c_th nil)
    (disp_device_type type-eq-decl nil coordinator_th nil)
    (disp_alarm_type type-eq-decl nil coordinator_th nil)
    (coord_db_type type-eq-decl nil coordinator_th nil)
    (nw_error_type type-decl nil node_th nil)
    (update_n_graph const-decl "n_state" node_th nil)
    (pan_msg_waiting_type type-eq-decl nil node_th nil)
    (connected type-eq-decl nil node_th nil)
    (network_error_type type-eq-decl nil node_th nil)
    (pan_message_type type-eq-decl nil node_th nil)
    (act_message_type type-eq-decl nil node_th nil)
    (act_msg_waiting_type type-eq-decl nil node_th nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (node type-eq-decl nil node_th nil)
    (init_state const-decl "state" system_th nil)
    (per_d_select const-decl "boolean" patient_th nil)
    (connect_device_to_patient const-decl "interface_st" system_th nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (nonempty_add_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (m_select_d_p_window const-decl "interface_st" p_interface_th nil)
    (p_select_display_mode const-decl "interface_st" system_th nil)
    (mapping_to_ps const-decl "interface_st" system_th nil)
    (p_select const-decl "interface_st" system_th nil)
    (connect_new_element const-decl "interface_st" system_th nil)
    (member const-decl "bool" sets nil)
    (p_complete_device_p const-decl "interface_st" system_th nil)
    (p_complete_device const-decl "p_state" patient_th nil)
    (p_device const-decl "interface_st" system_th nil)
    (p_escape const-decl "interface_st" system_th nil)
    (p_device_entry const-decl "interface_st" system_th nil)
    (patient_menu_act const-decl "interface_st" system_th nil)
    (patient_menu const-decl "interface_st" system_th nil)
    (update_patient_prev_entry const-decl "interface_st" system_th nil)
    (p_enter const-decl "interface_st" system_th nil)
    (p_change_menu const-decl "m_state" menu_th nil)
    (patient_enter_device_name const-decl "state" system_th nil)
    (p_enter_name const-decl "p_state" patient_th nil)
    (emptyset const-decl "set" sets nil)
    (increment_node const-decl "node" node_th nil)
    (init_m_state const-decl "m_state" menu_th nil)
    (init_cm const-decl "menu_state" menu_th nil)
    (init_i_state const-decl "i_state" coordinator_th nil)
    (empty_config const-decl "patient_config" coordinator_th nil)
    (empty_device_display const-decl "disp_device_type" coordinator_th
     nil)
    (empty_patient_display const-decl "disp_patient_type"
     coordinator_th nil)
    (empty_alarm_disp const-decl "disp_alarm_type" coordinator_th nil)
    (empty_top_display const-decl "coord_disp_top_type" coordinator_th
     nil)
    (i_empty_entry_window const-decl "coord_entry_window_type"
     coordinator_th nil)
    (coord_node const-decl "node" node_th nil)
    (init_d_state const-decl "d_state" infusion_pumps_th nil)
    (init_ip_panel const-decl "panel" infusion_pumps_th nil)
    (init_vs const-decl "v_state" vital_signs_th nil)
    (init_vs_panel const-decl "panel" vital_signs_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (empty_constraint_setup const-decl "constraint_setup_type"
     patient_th nil)
    (init_constraint const-decl "constraint_type" patient_th nil)
    (null_ec const-decl "enum_constraint_type" patient_th nil)
    (null_nc const-decl "num_constraint_type" patient_th nil)
    (d_bot const-decl "device" devices_th nil)
    (init_rule_setup const-decl "rule_setup_type" patient_th nil)
    (init_panel_display const-decl "coord_panel_setup_type" patient_th
     nil)
    (init_disp_main const-decl "p_disp_main_type" patient_th nil)
    (init_disp_top const-decl "p_disp_top_type" patient_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (undef_device const-decl "devs_type" devices_th nil)
    (nil_pd const-decl "patient_to_device" system_th nil)
    (nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (init_n_state const-decl "n_state" node_th nil)
    (empty_act_q const-decl "act_q_type" node_th nil)
    (empty_pan_q const-decl "pan_q_type" node_th nil)
    (empty_act_msg const-decl "act_message_type" node_th nil)
    (empty_pan_msg const-decl "pan_message_type" node_th nil)
    (empty_panel const-decl "panel" coord_t_and_c_th nil)
    (no_node const-decl "node" node_th nil)
    (root_node const-decl "node" node_th nil)
    (m_c_d_p formula-decl nil p_interface_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" p_interface_th nil)
    (maxinfuse formal-const-decl "posnat" p_interface_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" p_interface_th nil)
    (device type-eq-decl nil devices_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil))
   shostak)))

