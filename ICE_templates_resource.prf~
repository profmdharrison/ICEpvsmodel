(ICE_templates_rsce_th
 (pdfa_lemma 0
  (pdfa_lemma-1 nil 3866695727
   ("" (skosimp*)
    (("" (expand "p_d_fun_action" 1)
      (("" (expand "p_d_fun_actionx" 1)
        (("" (expand "reflect_device_to_patient" 1)
          (("" (expand "p_fun_act" 1) (("" (propax) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((p_d_fun_action const-decl "state" ICE_templates_rsce_th nil)
    (reflect_device_to_patient const-decl "state" ICE_templates_rsce_th
     nil)
    (p_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (p_d_fun_actionx const-decl "state" ICE_templates_rsce_th nil))
   shostak))
 (cdfa_lemma 0
  (cdfa_lemma-1 nil 3860235469
   ("" (skosimp*)
    (("" (expand "c_d_fun_action" 1)
      (("" (expand "c_d_fun_actionx" 1)
        (("" (expand "reflect_device_to_coordinator" 1)
          (("" (expand "c_fun_act" 1) (("" (propax) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((c_d_fun_action const-decl "state" ICE_templates_rsce_th nil)
    (reflect_device_to_coordinator const-decl "state"
     ICE_templates_rsce_th nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (c_d_fun_actionx const-decl "state" ICE_templates_rsce_th nil))
   shostak))
 (cpfa_lemma 0
  (cpfa_lemma-1 nil 3896261682
   ("" (skosimp*)
    (("" (expand "c_p_fun_action" 1)
      (("" (expand "c_p_fun_actionx" 1)
        (("" (expand "reflect_device_to_coordinator" 1)
          (("" (expand "c_fun_act" 1) (("" (propax) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((c_p_fun_action const-decl "state" ICE_templates_rsce_th nil)
    (reflect_device_to_coordinator const-decl "state"
     ICE_templates_rsce_th nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (c_p_fun_actionx const-decl "state" ICE_templates_rsce_th nil))
   shostak))
 (lemma2ippannpdv 0
  (lemma2ippannpdv-1 nil 3866700239
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split -8)
          (("1" (assert)
            (("1" (split 7)
              (("1" (grind) nil nil) ("2" (grind) nil nil)
               ("3" (grind) nil nil) ("4" (grind) nil nil)
               ("5" (grind) nil nil) ("6" (grind) nil nil))
              nil))
            nil)
           ("2" (assert)
            (("2" (split 7)
              (("1" (grind) nil nil) ("2" (grind) nil nil)
               ("3" (grind) nil nil) ("4" (grind) nil nil)
               ("5" (grind) nil nil) ("6" (grind) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (coord_node const-decl "node" node_th nil)
    (next_pan_pm const-decl "n_state" node_th nil)
    (sub_pan_buff const-decl "pan_q_type" node_th nil)
    (empty_pan_msg const-decl "pan_message_type" node_th nil)
    (empty_panel const-decl "panel" coord_t_and_c_th nil)
    (no_node const-decl "node" node_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (tick_pan_device const-decl "state" system_th nil)
    (pan_send const-decl "n_state" node_th nil)
    (add_pan_buff const-decl "pan_q_type" node_th nil)
    (available_act const-decl "panel" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (tick const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (timeout const-decl "itimes" infusion_pumps_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (<= const-decl "bool" reals nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (/= const-decl "boolean" notequal nil)
    (available_act const-decl "panel" vital_signs_th nil)
    (tick_vs const-decl "v_state" vital_signs_th nil)
    (upd_pan const-decl "panel" vital_signs_th nil)
    (per_tick_vs const-decl "boolean" vital_signs_th nil))
   shostak))
 (lemma2xnpp 0
  (lemma2xnpp-1 nil 3893239965
   ("" (skosimp)
    (("" (beta)
      (("" (flatten)
        (("" (split 7)
          (("1" (flatten 1) (("1" (grind) nil nil)) nil)
           ("2" (flatten 1) (("2" (grind) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (<= const-decl "bool" reals nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (coord_node const-decl "node" node_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (nil_device const-decl "device" devices_th nil)
    (/= const-decl "boolean" notequal nil)
    (timeout const-decl "itimes" infusion_pumps_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (tick const-decl "d_state" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (available_act const-decl "panel" infusion_pumps_th nil)
    (add_pan_buff const-decl "pan_q_type" node_th nil)
    (pan_send const-decl "n_state" node_th nil)
    (tick_pan_device const-decl "state" system_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (no_node const-decl "node" node_th nil)
    (empty_panel const-decl "panel" coord_t_and_c_th nil)
    (empty_pan_msg const-decl "pan_message_type" node_th nil)
    (sub_pan_buff const-decl "pan_q_type" node_th nil)
    (next_pan_pm const-decl "n_state" node_th nil)
    (per_tick_vs const-decl "boolean" vital_signs_th nil)
    (upd_pan const-decl "panel" vital_signs_th nil)
    (tick_vs const-decl "v_state" vital_signs_th nil)
    (available_act const-decl "panel" vital_signs_th nil))
   shostak))
 (panlemma1np 0
  (panlemma1np-1 nil 3858417274
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split)
          (("1" (grind) nil nil) ("2" (grind) nil nil)
           ("3" (grind) nil nil) ("4" (grind) nil nil)
           ("5" (grind) nil nil) ("6" (grind) nil nil)
           ("7" (grind) nil nil) ("8" (grind) nil nil)
           ("9" (grind) nil nil) ("10" (grind) nil nil)
           ("11" (grind) nil nil) ("12" (grind) nil nil)
           ("13" (grind) nil nil) ("14" (grind) nil nil)
           ("15" (grind) nil nil))
          nil))
        nil))
      nil))
    nil)
   ((nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (coord_node const-decl "node" node_th nil)
    (tick_pan_device const-decl "state" system_th nil)
    (available_act const-decl "panel" vital_signs_th nil)
    (tick_vs const-decl "v_state" vital_signs_th nil)
    (upd_pan const-decl "panel" vital_signs_th nil)
    (per_tick_vs const-decl "boolean" vital_signs_th nil)
    (pan_send const-decl "n_state" node_th nil)
    (add_pan_buff const-decl "pan_q_type" node_th nil)
    (available_act const-decl "panel" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (tick const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (timeout const-decl "itimes" infusion_pumps_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (<= const-decl "bool" reals nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (/= const-decl "boolean" notequal nil)
    (tick_pan_patient const-decl "state" system_th nil)
    (update_t_panel const-decl "patient_db_type" system_th nil)
    (filter_panel const-decl "panel" coord_t_and_c_th nil)
    (emptyset const-decl "set" sets nil)
    (empty_num_parameter const-decl "num_parameter" coord_t_and_c_th
     nil)
    (empty_enum_parameter const-decl "enum_parameter" coord_t_and_c_th
     nil)
    (next_pan_pm const-decl "n_state" node_th nil)
    (sub_pan_buff const-decl "pan_q_type" node_th nil)
    (empty_pan_msg const-decl "pan_message_type" node_th nil)
    (empty_panel const-decl "panel" coord_t_and_c_th nil)
    (no_node const-decl "node" node_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (tick_pan_coordinator const-decl "state" system_th nil)
    (update_p_panel const-decl "i_state" coordinator_th nil)
    (setup_p_m_panel const-decl "i_state" coordinator_th nil)
    (setup_p_d_panel const-decl "i_state" coordinator_th nil)
    (member const-decl "bool" sets nil)
    (setup_p_t_panel const-decl "i_state" coordinator_th nil)
    (empty_patient_display const-decl "disp_patient_type"
     coordinator_th nil)
    (next_cm const-decl "n_state" node_th nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   shostak))
 (panlemma1npx 0
  (panlemma1npx-1 nil 3859868755
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split) (("1" (grind) nil nil) ("2" (grind) nil nil))
          nil))
        nil))
      nil))
    nil)
   ((nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (coord_node const-decl "node" node_th nil)
    (tick_pan_device const-decl "state" system_th nil)
    (available_act const-decl "panel" vital_signs_th nil)
    (tick_vs const-decl "v_state" vital_signs_th nil)
    (upd_pan const-decl "panel" vital_signs_th nil)
    (per_tick_vs const-decl "boolean" vital_signs_th nil)
    (pan_send const-decl "n_state" node_th nil)
    (add_pan_buff const-decl "pan_q_type" node_th nil)
    (available_act const-decl "panel" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (tick const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (timeout const-decl "itimes" infusion_pumps_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (<= const-decl "bool" reals nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (/= const-decl "boolean" notequal nil)
    (tick_pan_patient const-decl "state" system_th nil)
    (update_t_panel const-decl "patient_db_type" system_th nil)
    (filter_panel const-decl "panel" coord_t_and_c_th nil)
    (emptyset const-decl "set" sets nil)
    (empty_num_parameter const-decl "num_parameter" coord_t_and_c_th
     nil)
    (empty_enum_parameter const-decl "enum_parameter" coord_t_and_c_th
     nil)
    (next_pan_pm const-decl "n_state" node_th nil)
    (sub_pan_buff const-decl "pan_q_type" node_th nil)
    (empty_pan_msg const-decl "pan_message_type" node_th nil)
    (empty_panel const-decl "panel" coord_t_and_c_th nil)
    (no_node const-decl "node" node_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   shostak))
 (panlemma1npexec 0
  (panlemma1npexec-1 nil 3864382680
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split -8)
          (("1" (flatten -1)
            (("1" (assert)
              (("1" (split 7)
                (("1" (grind) nil nil) ("2" (grind) nil nil)) nil))
              nil))
            nil)
           ("2" (flatten -1)
            (("2" (assert)
              (("2" (split 6)
                (("1" (grind) nil nil) ("2" (grind) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((finite_emptyset name-judgement "finite_set" finite_sets nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (no_node const-decl "node" node_th nil)
    (empty_panel const-decl "panel" coord_t_and_c_th nil)
    (empty_pan_msg const-decl "pan_message_type" node_th nil)
    (sub_pan_buff const-decl "pan_q_type" node_th nil)
    (next_pan_pm const-decl "n_state" node_th nil)
    (coord_node const-decl "node" node_th nil)
    (empty_enum_parameter const-decl "enum_parameter" coord_t_and_c_th
     nil)
    (empty_num_parameter const-decl "num_parameter" coord_t_and_c_th
     nil)
    (emptyset const-decl "set" sets nil)
    (filter_panel const-decl "panel" coord_t_and_c_th nil)
    (update_t_panel const-decl "patient_db_type" system_th nil)
    (tick_pan_patient const-decl "state" system_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (nil_device const-decl "device" devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (<= const-decl "bool" reals nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (timeout const-decl "itimes" infusion_pumps_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (tick const-decl "d_state" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (available_act const-decl "panel" infusion_pumps_th nil)
    (add_pan_buff const-decl "pan_q_type" node_th nil)
    (pan_send const-decl "n_state" node_th nil)
    (tick_pan_device const-decl "state" system_th nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (per_tick_vs const-decl "boolean" vital_signs_th nil)
    (upd_pan const-decl "panel" vital_signs_th nil)
    (tick_vs const-decl "v_state" vital_signs_th nil)
    (available_act const-decl "panel" vital_signs_th nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (posrat_div_posrat_is_posrat application-judgement "posrat"
     rationals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil))
   shostak))
 (panlemma1ip 0
  (panlemma1ip-1 nil 3859868936
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split)
          (("1" (grind) nil nil) ("2" (grind) nil nil)
           ("3" (grind) nil nil) ("4" (grind) nil nil)
           ("5" (grind) nil nil) ("6" (grind) nil nil)
           ("7" (grind) nil nil) ("8" (grind) nil nil)
           ("9" (grind) nil nil) ("10" (grind) nil nil)
           ("11" (grind) nil nil) ("12" (grind) nil nil)
           ("13" (grind) nil nil) ("14" (grind) nil nil)
           ("15" (grind) nil nil) ("16" (grind) nil nil)
           ("17" (grind) nil nil) ("18" (grind) nil nil))
          nil))
        nil))
      nil))
    nil)
   ((nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (coord_node const-decl "node" node_th nil)
    (tick_pan_device const-decl "state" system_th nil)
    (pan_send const-decl "n_state" node_th nil)
    (add_pan_buff const-decl "pan_q_type" node_th nil)
    (available_act const-decl "panel" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (tick const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (timeout const-decl "itimes" infusion_pumps_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (<= const-decl "bool" reals nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (/= const-decl "boolean" notequal nil)
    (tick_pan_patient const-decl "state" system_th nil)
    (update_t_panel const-decl "patient_db_type" system_th nil)
    (filter_panel const-decl "panel" coord_t_and_c_th nil)
    (emptyset const-decl "set" sets nil)
    (empty_num_parameter const-decl "num_parameter" coord_t_and_c_th
     nil)
    (empty_enum_parameter const-decl "enum_parameter" coord_t_and_c_th
     nil)
    (next_pan_pm const-decl "n_state" node_th nil)
    (sub_pan_buff const-decl "pan_q_type" node_th nil)
    (empty_pan_msg const-decl "pan_message_type" node_th nil)
    (empty_panel const-decl "panel" coord_t_and_c_th nil)
    (no_node const-decl "node" node_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (tick_pan_coordinator const-decl "state" system_th nil)
    (update_p_panel const-decl "i_state" coordinator_th nil)
    (setup_p_m_panel const-decl "i_state" coordinator_th nil)
    (setup_p_d_panel const-decl "i_state" coordinator_th nil)
    (member const-decl "bool" sets nil)
    (setup_p_t_panel const-decl "i_state" coordinator_th nil)
    (empty_patient_display const-decl "disp_patient_type"
     coordinator_th nil)
    (next_cm const-decl "n_state" node_th nil)
    (available_act const-decl "panel" vital_signs_th nil)
    (tick_vs const-decl "v_state" vital_signs_th nil)
    (upd_pan const-decl "panel" vital_signs_th nil)
    (per_tick_vs const-decl "boolean" vital_signs_th nil))
   shostak))
 (panlemma1ipx 0
  (panlemma1ipx-1 nil 3860228312
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split)
          (("1" (grind) nil nil) ("2" (grind) nil nil)
           ("3" (grind) nil nil) ("4" (grind) nil nil)
           ("5" (grind) nil nil) ("6" (grind) nil nil)
           ("7" (grind) nil nil) ("8" (grind) nil nil)
           ("9" (grind) nil nil) ("10" (grind) nil nil)
           ("11" (grind) nil nil) ("12" (grind) nil nil))
          nil))
        nil))
      nil))
    nil)
   ((nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (coord_node const-decl "node" node_th nil)
    (tick_pan_device const-decl "state" system_th nil)
    (available_act const-decl "panel" vital_signs_th nil)
    (tick_vs const-decl "v_state" vital_signs_th nil)
    (upd_pan const-decl "panel" vital_signs_th nil)
    (per_tick_vs const-decl "boolean" vital_signs_th nil)
    (pan_send const-decl "n_state" node_th nil)
    (add_pan_buff const-decl "pan_q_type" node_th nil)
    (available_act const-decl "panel" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (tick const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (timeout const-decl "itimes" infusion_pumps_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (<= const-decl "bool" reals nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (/= const-decl "boolean" notequal nil)
    (tick_pan_patient const-decl "state" system_th nil)
    (update_t_panel const-decl "patient_db_type" system_th nil)
    (filter_panel const-decl "panel" coord_t_and_c_th nil)
    (emptyset const-decl "set" sets nil)
    (empty_num_parameter const-decl "num_parameter" coord_t_and_c_th
     nil)
    (empty_enum_parameter const-decl "enum_parameter" coord_t_and_c_th
     nil)
    (next_pan_pm const-decl "n_state" node_th nil)
    (sub_pan_buff const-decl "pan_q_type" node_th nil)
    (empty_pan_msg const-decl "pan_message_type" node_th nil)
    (empty_panel const-decl "panel" coord_t_and_c_th nil)
    (no_node const-decl "node" node_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (tick_pan_coordinator const-decl "state" system_th nil)
    (update_p_panel const-decl "i_state" coordinator_th nil)
    (setup_p_m_panel const-decl "i_state" coordinator_th nil)
    (setup_p_d_panel const-decl "i_state" coordinator_th nil)
    (member const-decl "bool" sets nil)
    (setup_p_t_panel const-decl "i_state" coordinator_th nil)
    (empty_patient_display const-decl "disp_patient_type"
     coordinator_th nil)
    (next_cm const-decl "n_state" node_th nil))
   shostak))
 (panlemma1ipy 0
  (panlemma1ipy-1 nil 3861353736
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split)
          (("1" (flatten -1)
            (("1" (split 8)
              (("1" (expand "tick_pan_device" 1)
                (("1" (replace -2 1) (("1" (propax) nil nil)) nil))
                nil)
               ("2" (expand "tick_pan_patient" 1)
                (("2" (lift-if 1) (("2" (propax) nil nil)) nil)) nil)
               ("3" (expand "tick_pan_coordinator" 1)
                (("3" (lift-if 1)
                  (("3" (split 1)
                    (("1" (flatten 1)
                      (("1" (expand "setup_p_t_panel" 1)
                        (("1" (lift-if 1)
                          (("1" (expand "update_patient_alarm_disp" 1)
                            (("1" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten 1)
                      (("2" (split 2)
                        (("1" (flatten 1)
                          (("1" (expand "setup_p_d_panel" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (split 1)
                                        (("1"
                                          (flatten 1)
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten 1)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand
                                     "update_patient_alarm_disp"
                                     2)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1)
                          (("2" (split 2)
                            (("1" (flatten 1)
                              (("1"
                                (expand "setup_p_m_panel" 1)
                                (("1"
                                  (lift-if 1)
                                  (("1"
                                    (split 1)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (split 2)
                                        (("1"
                                          (flatten 1)
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten 1)
                                      (("2"
                                        (expand
                                         "update_patient_alarm_disp"
                                         1)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten 1)
                              (("2"
                                (split 2)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "update_p_panel" 1)
                                    (("1"
                                      (lift-if 1)
                                      (("1"
                                        (split 1)
                                        (("1" (propax) nil nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (expand
                                             "update_patient_alarm_disp"
                                             2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand
                                     "update_patient_alarm_disp"
                                     2)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("4" (expand "tick_pan_device" 1)
                (("4" (assert) nil nil)) nil)
               ("5" (expand "tick_pan_patient" 1)
                (("5" (lift-if 1) (("5" (propax) nil nil)) nil)) nil)
               ("6" (expand "tick_pan_coordinator" 1)
                (("6" (lift-if 1)
                  (("6" (split 1)
                    (("1" (expand "setup_p_t_panel" 1)
                      (("1" (flatten 1)
                        (("1" (lift-if 1)
                          (("1" (split 1)
                            (("1" (propax) nil nil)
                             ("2" (flatten 1)
                              (("2"
                                (expand "update_patient_alarm_disp" 1)
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten 1)
                      (("2" (split 2)
                        (("1" (flatten 1)
                          (("1" (expand "setup_p_d_panel" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (split 1)
                                        (("1"
                                          (flatten 1)
                                          (("1"
                                            (beta 1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (beta 2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten 1)
                                      (("2"
                                        (beta 2)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand
                                     "update_patient_alarm_disp"
                                     2)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1)
                          (("2" (split 2)
                            (("1" (flatten 1)
                              (("1"
                                (expand "setup_p_m_panel" 1)
                                (("1"
                                  (lift-if 1)
                                  (("1"
                                    (split 1)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (split 2)
                                        (("1"
                                          (flatten 1)
                                          (("1"
                                            (beta 1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (beta 2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten 1)
                                      (("2"
                                        (expand
                                         "update_patient_alarm_disp"
                                         1)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten 1)
                              (("2"
                                (split 2)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "update_p_panel" 1)
                                    (("1"
                                      (lift-if 1)
                                      (("1"
                                        (split 1)
                                        (("1" (propax) nil nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (expand
                                             "update_patient_alarm_disp"
                                             2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand
                                     "update_patient_alarm_disp"
                                     2)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("7" (expand "tick_pan_device" 1)
                (("7" (replace -2 1) (("7" (propax) nil nil)) nil))
                nil)
               ("8" (expand "tick_pan_patient" 1)
                (("8" (lift-if 1) (("8" (propax) nil nil)) nil)) nil)
               ("9" (expand "tick_pan_coordinator" 1)
                (("9" (lift-if 1)
                  (("9" (split 1)
                    (("1" (flatten 1)
                      (("1" (expand "setup_p_t_panel" 1)
                        (("1" (lift-if 1)
                          (("1" (split 1)
                            (("1" (propax) nil nil)
                             ("2" (flatten 1)
                              (("2"
                                (expand "update_patient_alarm_disp" 1)
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten 1)
                      (("2" (split 2)
                        (("1" (flatten 1)
                          (("1" (expand "setup_p_d_panel" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (split 1)
                                        (("1"
                                          (beta 1)
                                          (("1" (flatten 1) nil nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (beta 2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten 1)
                                      (("2"
                                        (beta 2)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand
                                     "update_patient_alarm_disp"
                                     2)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1)
                          (("2" (split 2)
                            (("1" (flatten 1)
                              (("1"
                                (expand "setup_p_m_panel" 1)
                                (("1"
                                  (lift-if 1)
                                  (("1"
                                    (split 1)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (split 2)
                                        (("1"
                                          (flatten 1)
                                          (("1"
                                            (beta 1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (beta 2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten 1)
                                      (("2"
                                        (expand
                                         "update_patient_alarm_disp"
                                         1)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten 1)
                              (("2"
                                (split 2)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "update_p_panel" 1)
                                    (("1"
                                      (lift-if 1)
                                      (("1"
                                        (split 1)
                                        (("1" (propax) nil nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (expand
                                             "update_patient_alarm_disp"
                                             2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand
                                     "update_patient_alarm_disp"
                                     2)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("10" (expand "tick_pan_device" 1)
                (("10" (replace -2 1) (("10" (propax) nil nil)) nil))
                nil)
               ("11" (expand "tick_pan_patient" 1)
                (("11" (lift-if 1) (("11" (propax) nil nil)) nil)) nil)
               ("12" (expand "tick_pan_coordinator" 1)
                (("12" (lift-if 1)
                  (("12" (split 1)
                    (("1" (flatten 1)
                      (("1" (expand "setup_p_t_panel" 1)
                        (("1" (lift-if 1)
                          (("1" (split 1)
                            (("1" (propax) nil nil)
                             ("2" (flatten 1)
                              (("2"
                                (expand "update_patient_alarm_disp" 1)
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten 1)
                      (("2" (split 2)
                        (("1" (flatten 1)
                          (("1" (expand "setup_p_d_panel" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (split 1)
                                        (("1"
                                          (flatten 1)
                                          (("1"
                                            (beta 1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (beta 2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten 1)
                                      (("2"
                                        (beta 2)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand
                                     "update_patient_alarm_disp"
                                     2)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1)
                          (("2" (split 2)
                            (("1" (flatten 1)
                              (("1"
                                (expand "setup_p_m_panel" 1)
                                (("1"
                                  (lift-if 1)
                                  (("1"
                                    (split 1)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (split 2)
                                        (("1"
                                          (flatten 1)
                                          (("1"
                                            (beta 1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (beta 2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten 1)
                                      (("2"
                                        (expand
                                         "update_patient_alarm_disp"
                                         1)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten 1)
                              (("2"
                                (split 2)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "update_p_panel" 1)
                                    (("1"
                                      (lift-if 1)
                                      (("1"
                                        (split 1)
                                        (("1" (propax) nil nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (expand
                                             "update_patient_alarm_disp"
                                             2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand
                                     "update_patient_alarm_disp"
                                     2)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten -1)
            (("2" (split 8)
              (("1" (expand "tick_pan_device" 1)
                (("1" (assert) nil nil)) nil)
               ("2" (expand "tick_pan_patient" 1)
                (("2" (assert) nil nil)) nil)
               ("3" (expand "tick_pan_coordinator" 1)
                (("3" (lift-if 1)
                  (("3" (split 1)
                    (("1" (flatten 1)
                      (("1" (expand "setup_p_t_panel" 1)
                        (("1" (lift-if 1)
                          (("1" (split 1)
                            (("1" (propax) nil nil)
                             ("2" (flatten 1)
                              (("2"
                                (expand "update_patient_alarm_disp" 1)
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten 1)
                      (("2" (split 2)
                        (("1" (flatten 1)
                          (("1" (expand "setup_p_d_panel" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (split 1)
                                        (("1"
                                          (flatten 1)
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten 1)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand
                                     "update_patient_alarm_disp"
                                     2)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1)
                          (("2" (split 2)
                            (("1" (flatten 1)
                              (("1"
                                (expand "setup_p_m_panel" 1)
                                (("1"
                                  (lift-if 1)
                                  (("1"
                                    (split 1)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (split 2)
                                        (("1"
                                          (flatten 1)
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten 1)
                                      (("2"
                                        (expand
                                         "update_patient_alarm_disp"
                                         1)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten 1)
                              (("2"
                                (split 2)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "update_p_panel" 1)
                                    (("1"
                                      (lift-if 1)
                                      (("1"
                                        (split 1)
                                        (("1" (propax) nil nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (expand
                                             "update_patient_alarm_disp"
                                             2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand
                                     "update_patient_alarm_disp"
                                     2)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("4" (expand "tick_pan_device" 1)
                (("4" (replace -2 1) (("4" (assert 1) nil nil)) nil))
                nil)
               ("5" (expand "tick_pan_patient" 1)
                (("5" (lift-if 1) (("5" (propax) nil nil)) nil)) nil)
               ("6" (expand "tick_pan_coordinator" 1)
                (("6" (lift-if 1)
                  (("6" (split 1)
                    (("1" (flatten 1)
                      (("1" (expand "setup_p_t_panel" 1)
                        (("1" (lift-if 1)
                          (("1" (split 1)
                            (("1" (propax) nil nil)
                             ("2" (flatten 1)
                              (("2"
                                (expand "update_patient_alarm_disp" 1)
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten 1)
                      (("2" (split 2)
                        (("1" (flatten 1)
                          (("1" (expand "setup_p_d_panel" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (split 1)
                                        (("1"
                                          (flatten 1)
                                          (("1"
                                            (beta 1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (beta 2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten 1)
                                      (("2"
                                        (beta 2)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand
                                     "update_patient_alarm_disp"
                                     2)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1)
                          (("2" (split 2)
                            (("1" (flatten 1)
                              (("1"
                                (expand "setup_p_m_panel" 1)
                                (("1"
                                  (lift-if 1)
                                  (("1"
                                    (split 1)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (split 2)
                                        (("1"
                                          (flatten 1)
                                          (("1"
                                            (beta 1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (beta 2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten 1)
                                      (("2"
                                        (expand
                                         "update_patient_alarm_disp"
                                         1)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten 1)
                              (("2"
                                (split 2)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "update_p_panel" 1)
                                    (("1"
                                      (lift-if 1)
                                      (("1"
                                        (split 1)
                                        (("1" (propax) nil nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (expand
                                             "update_patient_alarm_disp"
                                             2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand
                                     "update_patient_alarm_disp"
                                     2)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("7" (expand "tick_pan_device" 1)
                (("7" (replace -2 1) (("7" (assert) nil nil)) nil))
                nil)
               ("8" (expand "tick_pan_patient" 1)
                (("8" (lift-if 1) (("8" (propax) nil nil)) nil)) nil)
               ("9" (expand "tick_pan_coordinator" 1)
                (("9" (lift-if 1)
                  (("9" (split 1)
                    (("1" (flatten 1)
                      (("1" (expand "setup_p_t_panel" 1)
                        (("1" (lift-if 1)
                          (("1" (split 1)
                            (("1" (propax) nil nil)
                             ("2" (flatten 1)
                              (("2"
                                (expand "update_patient_alarm_disp" 1)
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten 1)
                      (("2" (split 2)
                        (("1" (flatten 1)
                          (("1" (expand "setup_p_d_panel" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (split 1)
                                        (("1"
                                          (flatten 1)
                                          (("1"
                                            (beta 1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (beta 2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten 1)
                                      (("2"
                                        (beta 2)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand
                                     "update_patient_alarm_disp"
                                     2)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1)
                          (("2" (split 2)
                            (("1" (flatten 1)
                              (("1"
                                (expand "setup_p_m_panel" 1)
                                (("1"
                                  (lift-if 1)
                                  (("1"
                                    (split 1)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (split 2)
                                        (("1"
                                          (flatten 1)
                                          (("1"
                                            (beta 1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (beta 2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten 1)
                                      (("2"
                                        (expand
                                         "update_patient_alarm_disp"
                                         1)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten 1)
                              (("2"
                                (split 2)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "update_p_panel" 1)
                                    (("1"
                                      (lift-if 1)
                                      (("1"
                                        (split 1)
                                        (("1" (propax) nil nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (expand
                                             "update_patient_alarm_disp"
                                             2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand
                                     "update_patient_alarm_disp"
                                     2)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("10" (expand "tick_pan_device" 1)
                (("10" (replace -2 1) (("10" (assert) nil nil)) nil))
                nil)
               ("11" (expand "tick_pan_patient" 1)
                (("11" (lift-if 1) (("11" (propax) nil nil)) nil)) nil)
               ("12" (expand "tick_pan_coordinator" 1)
                (("12" (lift-if 1)
                  (("12" (split 1)
                    (("1" (flatten 1)
                      (("1" (expand "setup_p_t_panel" 1)
                        (("1" (lift-if 1)
                          (("1" (split 1)
                            (("1" (propax) nil nil)
                             ("2" (flatten 1)
                              (("2"
                                (expand "update_patient_alarm_disp" 1)
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten 1)
                      (("2" (split 2)
                        (("1" (flatten 1)
                          (("1" (expand "setup_p_d_panel" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (split 1)
                                        (("1"
                                          (flatten 1)
                                          (("1"
                                            (beta 1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (beta 2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten 1)
                                      (("2"
                                        (beta 2)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand
                                     "update_patient_alarm_disp"
                                     2)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1)
                          (("2" (split 2)
                            (("1" (flatten 1)
                              (("1"
                                (expand "setup_p_m_panel" 1)
                                (("1"
                                  (lift-if 1)
                                  (("1"
                                    (split 1)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (split 2)
                                        (("1"
                                          (flatten 1)
                                          (("1"
                                            (beta 1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (beta 2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten 1)
                                      (("2"
                                        (expand
                                         "update_patient_alarm_disp"
                                         1)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten 1)
                              (("2"
                                (split 2)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "update_p_panel" 1)
                                    (("1"
                                      (lift-if 1)
                                      (("1"
                                        (split 1)
                                        (("1" (propax) nil nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (expand
                                             "update_patient_alarm_disp"
                                             2)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand
                                     "update_patient_alarm_disp"
                                     2)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((tick_pan_device const-decl "state" system_th nil)
    (tick_pan_patient const-decl "state" system_th nil)
    (update_p_panel const-decl "i_state" coordinator_th nil)
    (setup_p_m_panel const-decl "i_state" coordinator_th nil)
    (setup_p_d_panel const-decl "i_state" coordinator_th nil)
    (update_patient_alarm_disp const-decl "i_state" coordinator_th nil)
    (setup_p_t_panel const-decl "i_state" coordinator_th nil)
    (tick_pan_coordinator const-decl "state" system_th nil))
   shostak))
 (lemma2ippan 0
  (lemma2ippan-1 nil 3859872560
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split)
          (("1" (flatten -1)
            (("1" (assert)
              (("1" (split 10)
                (("1" (grind) nil nil) ("2" (grind) nil nil)
                 ("3" (grind) nil nil) ("4" (grind) nil nil)
                 ("5" (grind) nil nil) ("6" (grind) nil nil)
                 ("7" (grind) nil nil) ("8" (grind) nil nil)
                 ("9" (grind) nil nil) ("10" (grind) nil nil)
                 ("11" (grind) nil nil) ("12" (grind) nil nil)
                 ("13" (grind) nil nil) ("14" (grind) nil nil))
                nil))
              nil))
            nil)
           ("2" (flatten -1)
            (("2" (assert) (("2" (grind) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((update_patient_alarm_disp const-decl "i_state" coordinator_th nil)
    (setup_p_t_panel const-decl "i_state" coordinator_th nil)
    (member const-decl "bool" sets nil)
    (setup_p_d_panel const-decl "i_state" coordinator_th nil)
    (setup_p_m_panel const-decl "i_state" coordinator_th nil)
    (/= const-decl "boolean" notequal nil)
    (update_p_panel const-decl "i_state" coordinator_th nil)
    (tick_pan_coordinator const-decl "state" system_th nil)
    (next_cm const-decl "n_state" node_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (<= const-decl "bool" reals nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (timeout const-decl "itimes" infusion_pumps_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (tick const-decl "d_state" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (available_act const-decl "panel" infusion_pumps_th nil)
    (add_pan_buff const-decl "pan_q_type" node_th nil)
    (pan_send const-decl "n_state" node_th nil)
    (tick_pan_device const-decl "state" system_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (no_node const-decl "node" node_th nil)
    (empty_panel const-decl "panel" coord_t_and_c_th nil)
    (empty_pan_msg const-decl "pan_message_type" node_th nil)
    (sub_pan_buff const-decl "pan_q_type" node_th nil)
    (next_pan_pm const-decl "n_state" node_th nil)
    (coord_node const-decl "node" node_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (nil_device const-decl "device" devices_th nil)
    (empty_enum_parameter const-decl "enum_parameter" coord_t_and_c_th
     nil)
    (empty_num_parameter const-decl "num_parameter" coord_t_and_c_th
     nil)
    (emptyset const-decl "set" sets nil)
    (filter_panel const-decl "panel" coord_t_and_c_th nil)
    (update_t_panel const-decl "patient_db_type" system_th nil)
    (tick_pan_patient const-decl "state" system_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (posrat_div_posrat_is_posrat application-judgement "posrat"
     rationals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (available_act const-decl "panel" vital_signs_th nil)
    (tick_vs const-decl "v_state" vital_signs_th nil)
    (upd_pan const-decl "panel" vital_signs_th nil)
    (per_tick_vs const-decl "boolean" vital_signs_th nil))
   shostak))
 (lemma2xnqq 0
  (lemma2xnqq-1 nil 3893245492
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split 9)
          (("1" (grind) nil nil) ("2" (grind) nil nil)
           ("3" (grind) nil nil) ("4" (grind) nil nil)
           ("5" (grind) nil nil) ("6" (grind) nil nil)
           ("7" (grind) nil nil) ("8" (grind) nil nil))
          nil))
        nil))
      nil))
    nil)
   ((finite_emptyset name-judgement "finite_set" finite_sets nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (tick_pan_patient const-decl "state" system_th nil)
    (update_t_panel const-decl "patient_db_type" system_th nil)
    (filter_panel const-decl "panel" coord_t_and_c_th nil)
    (emptyset const-decl "set" sets nil)
    (empty_num_parameter const-decl "num_parameter" coord_t_and_c_th
     nil)
    (empty_enum_parameter const-decl "enum_parameter" coord_t_and_c_th
     nil)
    (next_pan_pm const-decl "n_state" node_th nil)
    (sub_pan_buff const-decl "pan_q_type" node_th nil)
    (empty_pan_msg const-decl "pan_message_type" node_th nil)
    (empty_panel const-decl "panel" coord_t_and_c_th nil)
    (no_node const-decl "node" node_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (tick_pan_device const-decl "state" system_th nil)
    (pan_send const-decl "n_state" node_th nil)
    (add_pan_buff const-decl "pan_q_type" node_th nil)
    (available_act const-decl "panel" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (tick const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (timeout const-decl "itimes" infusion_pumps_th nil)
    (/= const-decl "boolean" notequal nil)
    (nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (coord_node const-decl "node" node_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (<= const-decl "bool" reals nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (posrat_div_posrat_is_posrat application-judgement "posrat"
     rationals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (available_act const-decl "panel" vital_signs_th nil)
    (tick_vs const-decl "v_state" vital_signs_th nil)
    (upd_pan const-decl "panel" vital_signs_th nil)
    (per_tick_vs const-decl "boolean" vital_signs_th nil)
    (next_cm const-decl "n_state" node_th nil)
    (tick_pan_coordinator const-decl "state" system_th nil)
    (update_p_panel const-decl "i_state" coordinator_th nil)
    (setup_p_m_panel const-decl "i_state" coordinator_th nil)
    (setup_p_d_panel const-decl "i_state" coordinator_th nil)
    (member const-decl "bool" sets nil)
    (setup_p_t_panel const-decl "i_state" coordinator_th nil)
    (update_patient_alarm_disp const-decl "i_state" coordinator_th
     nil))
   shostak))
 (panlemma1ipz 0
  (panlemma1ipz-1 nil 3875959810
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split)
          (("1" (flatten -1)
            (("1" (split 13)
              (("1" (expand "tick_pan_device" 1)
                (("1" (assert) nil nil)) nil)
               ("2" (expand "tick_pan_device" 1)
                (("2" (assert) nil nil)) nil)
               ("3" (expand "tick_pan_device" 1)
                (("3" (assert) nil nil)) nil))
              nil))
            nil)
           ("2" (flatten -1)
            (("2" (split 13)
              (("1" (expand "tick_pan_device" 1)
                (("1" (assert) nil nil)) nil)
               ("2" (expand "tick_pan_device" 1)
                (("2" (assert) nil nil)) nil)
               ("3" (expand "tick_pan_device" 1)
                (("3" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (tick_pan_device const-decl "state" system_th nil))
   shostak))
 (actcoordlemma1np 0
  (actcoordlemma1np-1 nil 3859950781
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split)
          (("1" (expand "coordinator_enter_action" 1)
            (("1" (assert) nil nil)) nil)
           ("2" (expand "coordinator_enter_action" 1)
            (("2" (assert) (("2" (grind) nil nil)) nil)) nil)
           ("3" (expand "coordinator_enter_action" 1)
            (("3" (assert) (("3" (grind) nil nil)) nil)) nil)
           ("4" (expand "coordinator_enter_action" 1)
            (("4" (assert) (("4" (grind) nil nil)) nil)) nil)
           ("5" (expand "coordinator_enter_action" 1)
            (("5" (assert) nil nil)) nil)
           ("6" (expand "coordinator_enter_action" 1)
            (("6" (assert) (("6" (grind) nil nil)) nil)) nil)
           ("7" (expand "coordinator_enter_action" 1)
            (("7" (assert) (("7" (grind) nil nil)) nil)) nil)
           ("8" (expand "coordinator_enter_action" 1)
            (("8" (assert) (("8" (grind) nil nil)) nil)) nil)
           ("9" (expand "coordinator_enter_action" 1)
            (("9" (assert) (("9" (grind) nil nil)) nil)) nil)
           ("10" (expand "coordinator_enter_action" 1)
            (("10" (assert) (("10" (grind) nil nil)) nil)) nil)
           ("11" (expand "coordinator_enter_action" 1)
            (("11" (assert) (("11" (grind) nil nil)) nil)) nil)
           ("12" (expand "coordinator_enter_action" 1)
            (("12" (assert) nil nil)) nil)
           ("13" (expand "coordinator_enter_action" 1)
            (("13" (assert) nil nil)) nil)
           ("14" (expand "coordinator_enter_action" 1)
            (("14" (assert) (("14" (grind) nil nil)) nil)) nil)
           ("15" (expand "coordinator_enter_action" 1)
            (("15" (assert) (("15" (grind) nil nil)) nil)) nil)
           ("16" (expand "coordinator_enter_action" 1)
            (("16" (assert) (("16" (grind) nil nil)) nil)) nil)
           ("17" (expand "coordinator_enter_action" 1)
            (("17" (assert) nil nil)) nil)
           ("18" (expand "coordinator_enter_action" 1)
            (("18" (assert) (("18" (grind) nil nil)) nil)) nil)
           ("19" (expand "coordinator_enter_action" 1)
            (("19" (assert) (("19" (grind) nil nil)) nil)) nil)
           ("20" (expand "coordinator_enter_action" 1)
            (("20" (assert) (("20" (grind) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (coordinator_enter_action const-decl "state" system_th nil)
    (coord_act_mono const-decl "state" system_th nil)
    (c_act_mono const-decl "state" system_th nil)
    (execute_patient_device const-decl "state" system_th nil)
    (ex_a const-decl "state" system_th nil)
    (act_send const-decl "n_state" node_th nil)
    (add_act_buff const-decl "act_q_type" node_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (coord_node const-decl "node" node_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (<= const-decl "bool" reals nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (tick_act_device const-decl "state" system_th nil)
    (dev_ex const-decl "p_state" patient_th nil)
    (execute_vs const-decl "v_state" vital_signs_th nil)
    (alarm_vs const-decl "v_state" vital_signs_th nil)
    (switch_vs const-decl "v_state" vital_signs_th nil)
    (execute_ip const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (fun_ip const-decl "d_state" infusion_pumps_th nil)
    (fun_pause const-decl "d_state" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (fun_infuse const-decl "d_state" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (fun_chooserate const-decl "d_state" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (fun_choosevtbi const-decl "d_state" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (fun_choosetime const-decl "d_state" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (fun_confirm const-decl "d_state" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (fun_bolus const-decl "d_state" infusion_pumps_th nil)
    (bolus_timeout const-decl "itimes" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (fun_decr const-decl "d_state" infusion_pumps_th nil)
    (/= const-decl "boolean" notequal nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (fun_incr const-decl "d_state" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (fun_power const-decl "d_state" infusion_pumps_th nil)
    (init_d_state const-decl "d_state" infusion_pumps_th nil)
    (init_ip_panel const-decl "panel" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (tick_act_patient const-decl "state" system_th nil)
    (next_act_patient const-decl "state" system_th nil)
    (next_act_pm const-decl "n_state" node_th nil)
    (sub_act_buff const-decl "act_q_type" node_th nil)
    (empty_act_msg const-decl "act_message_type" node_th nil)
    (no_node const-decl "node" node_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak))
 (actcoordlemma1npx 0
  (actcoordlemma1npx-1 nil 3882436779
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split 14)
          (("1" (expand "coordinator_enter_action" 1)
            (("1" (assert) nil nil)) nil)
           ("2" (expand "coordinator_enter_action" 1)
            (("2" (assert)
              (("2" (lift-if 1)
                (("2" (split 1)
                  (("1" (flatten 1)
                    (("1" (expand "coord_act_mono" 1)
                      (("1" (lift-if 1)
                        (("1" (split 1)
                          (("1" (flatten 1)
                            (("1" (expand "c_act_mono" 1)
                              (("1" (grind) nil nil)) nil))
                            nil)
                           ("2" (grind) nil nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (grind) nil nil))
                  nil))
                nil))
              nil))
            nil)
           ("3" (expand "coordinator_enter_action" 1)
            (("3" (grind) nil nil)) nil)
           ("4" (expand "coordinator_enter_action" 1)
            (("4" (grind) nil nil)) nil)
           ("5" (expand "coordinator_enter_action" 1)
            (("5" (assert) nil nil)) nil)
           ("6" (expand "coordinator_enter_action" 1)
            (("6" (grind) nil nil)) nil)
           ("7" (expand "coordinator_enter_action" 1)
            (("7" (grind) nil nil)) nil)
           ("8" (expand "coordinator_enter_action" 1)
            (("8" (grind) nil nil)) nil)
           ("9" (expand "coordinator_enter_action" 1)
            (("9" (grind) nil nil)) nil)
           ("10" (expand "coordinator_enter_action" 1)
            (("10" (grind) nil nil)) nil)
           ("11" (expand "coordinator_enter_action" 1)
            (("11" (grind) nil nil)) nil)
           ("12" (expand "coordinator_enter_action" 1)
            (("12" (assert) nil nil)) nil)
           ("13" (expand "coordinator_enter_action" 1)
            (("13" (grind) nil nil)) nil)
           ("14" (expand "coordinator_enter_action" 1)
            (("14" (grind) nil nil)) nil)
           ("15" (expand "coordinator_enter_action" 1)
            (("15" (grind) nil nil)) nil)
           ("16" (expand "coordinator_enter_action" 1)
            (("16" (grind) nil nil)) nil)
           ("17" (expand "coordinator_enter_action" 1)
            (("17" (assert) nil nil)) nil)
           ("18" (expand "coordinator_enter_action" 1)
            (("18" (grind) nil nil)) nil)
           ("19" (expand "coordinator_enter_action" 1)
            (("19" (grind) nil nil)) nil)
           ("20" (expand "coordinator_enter_action" 1)
            (("20" (grind) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((coordinator_enter_action const-decl "state" system_th nil)
    (coord_act_mono const-decl "state" system_th nil)
    (c_act_mono const-decl "state" system_th nil)
    (tick_act_device const-decl "state" system_th nil)
    (dev_ex const-decl "p_state" patient_th nil)
    (execute_vs const-decl "v_state" vital_signs_th nil)
    (alarm_vs const-decl "v_state" vital_signs_th nil)
    (switch_vs const-decl "v_state" vital_signs_th nil)
    (execute_ip const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (fun_ip const-decl "d_state" infusion_pumps_th nil)
    (fun_pause const-decl "d_state" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (fun_infuse const-decl "d_state" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (fun_chooserate const-decl "d_state" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (fun_choosevtbi const-decl "d_state" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (fun_choosetime const-decl "d_state" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (fun_confirm const-decl "d_state" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (fun_bolus const-decl "d_state" infusion_pumps_th nil)
    (bolus_timeout const-decl "itimes" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (fun_decr const-decl "d_state" infusion_pumps_th nil)
    (/= const-decl "boolean" notequal nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (fun_incr const-decl "d_state" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (fun_power const-decl "d_state" infusion_pumps_th nil)
    (init_d_state const-decl "d_state" infusion_pumps_th nil)
    (init_ip_panel const-decl "panel" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (tick_act_patient const-decl "state" system_th nil)
    (next_act_patient const-decl "state" system_th nil)
    (next_act_pm const-decl "n_state" node_th nil)
    (sub_act_buff const-decl "act_q_type" node_th nil)
    (empty_act_msg const-decl "act_message_type" node_th nil)
    (no_node const-decl "node" node_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (execute_patient_device const-decl "state" system_th nil)
    (ex_a const-decl "state" system_th nil)
    (act_send const-decl "n_state" node_th nil)
    (add_act_buff const-decl "act_q_type" node_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (coord_node const-decl "node" node_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (<= const-decl "bool" reals nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil))
   shostak))
 (actcoordiplemma3x 0
  (actcoordiplemma3x-1 nil 3859955639
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split)
          (("1" (expand "coordinator_enter_action" 1)
            (("1" (assert) nil nil)) nil)
           ("2" (expand "coordinator_enter_action" 1)
            (("2" (assert) (("2" (grind) nil nil)) nil)) nil)
           ("3" (expand "coordinator_enter_action" 1)
            (("3" (assert)
              (("3" (lift-if 1)
                (("3" (split 1)
                  (("1" (flatten 1)
                    (("1" (expand "tick_act_patient" 1)
                      (("1" (expand "next_act_patient" 1)
                        (("1" (lift-if 1) (("1" (propax) nil nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (flatten 1)
                    (("2" (expand "tick_act_patient" 3)
                      (("2" (expand "next_act_patient" 3)
                        (("2" (lift-if 3) (("2" (propax) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("4" (expand "tick_act_device" 1) (("4" (propax) nil nil))
            nil)
           ("5" (expand "coordinator_enter_action" 1)
            (("5" (assert) nil nil)) nil)
           ("6" (expand "coord_act_mono" 1)
            (("6" (lift-if 1)
              (("6" (split)
                (("1" (flatten 1)
                  (("1" (expand "c_act_mono" 1)
                    (("1" (lift-if 1)
                      (("1" (split 1)
                        (("1" (flatten 1)
                          (("1" (expand "coordinator_enter_action" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "execute_patient_device" 1)
                                    (("1"
                                      (lift-if 1)
                                      (("1"
                                        (split 1)
                                        (("1"
                                          (flatten 1)
                                          (("1"
                                            (expand "ex_a" 1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (split 2)
                                            (("1"
                                              (flatten 1)
                                              (("1"
                                                (expand "ex_a" 1)
                                                (("1"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand "execute_patient_device" 3)
                                    (("2"
                                      (lift-if 3)
                                      (("2"
                                        (split 3)
                                        (("1"
                                          (flatten 1)
                                          (("1"
                                            (expand "ex_a" 1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (split 2)
                                            (("1" (flatten 1) nil nil)
                                             ("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "c_act_mono" 2)
                    (("2" (lift-if 2)
                      (("2" (split 2)
                        (("1" (flatten 1) nil nil)
                         ("2" (flatten 1)
                          (("2" (expand "execute_patient_device" 2)
                            (("2" (lift-if 2)
                              (("2"
                                (split 2)
                                (("1" (flatten 1) nil nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("7" (expand "tick_act_patient" 1)
            (("7" (expand "next_act_patient" 1)
              (("7" (lift-if 1) (("7" (propax) nil nil)) nil)) nil))
            nil)
           ("8" (expand "tick_act_device" 1) (("8" (propax) nil nil))
            nil)
           ("9" (expand "coordinator_enter_action" 1)
            (("9" (assert) nil nil)) nil)
           ("10" (expand "coord_act_mono" 1)
            (("10" (lift-if 1)
              (("10" (split 1)
                (("1" (flatten 1)
                  (("1" (expand "c_act_mono" 1)
                    (("1" (lift-if 1)
                      (("1" (split 1)
                        (("1" (flatten 1)
                          (("1" (expand "execute_patient_device" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "ex_a" 1)
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "c_act_mono" 2)
                    (("2" (lift-if 2)
                      (("2" (split 2)
                        (("1" (flatten 1) nil nil)
                         ("2" (flatten 1)
                          (("2" (expand "execute_patient_device" 2)
                            (("2" (lift-if 2)
                              (("2"
                                (split 2)
                                (("1" (flatten 1) nil nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("11" (expand "tick_act_patient" 1)
            (("11" (expand "next_act_patient" 1)
              (("11" (lift-if 1) (("11" (propax) nil nil)) nil)) nil))
            nil)
           ("12" (expand "tick_act_device" 1) (("12" (propax) nil nil))
            nil)
           ("13" (expand "coordinator_enter_action" 1)
            (("13" (assert) nil nil)) nil)
           ("14" (expand "coord_act_mono" 1)
            (("14" (lift-if 1)
              (("14" (split 1)
                (("1" (flatten 1)
                  (("1" (expand "c_act_mono" 1)
                    (("1" (lift-if 1)
                      (("1" (split 1)
                        (("1" (flatten 1)
                          (("1" (expand "execute_patient_device" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "ex_a" 1)
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "c_act_mono" 2)
                    (("2" (lift-if 2)
                      (("2" (split 2)
                        (("1" (flatten 1) nil nil)
                         ("2" (flatten 1)
                          (("2" (expand "execute_patient_device" 2)
                            (("2" (lift-if 2)
                              (("2"
                                (split 2)
                                (("1" (flatten 1) nil nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("15" (expand "tick_act_patient" 1)
            (("15" (expand "next_act_patient" 1)
              (("15" (lift-if 1) (("15" (propax) nil nil)) nil)) nil))
            nil)
           ("16" (expand "tick_act_device" 1)
            (("16" (lift-if 1)
              (("16" (split 1)
                (("1" (flatten 1)
                  (("1" (expand "dev_ex" 1)
                    (("1" (lift-if 1) (("1" (propax) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "dev_ex" 2)
                    (("2" (lift-if 2) (("2" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("17" (expand "coordinator_enter_action" 1)
            (("17" (assert) nil nil)) nil)
           ("18" (expand "coord_act_mono" 1)
            (("18" (lift-if 1)
              (("18" (split 1)
                (("1" (flatten 1)
                  (("1" (expand "c_act_mono" 1)
                    (("1" (lift-if 1)
                      (("1" (split 1)
                        (("1" (flatten 1)
                          (("1" (expand "execute_patient_device" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "ex_a" 1)
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "c_act_mono" 2)
                    (("2" (lift-if 2)
                      (("2" (split 2)
                        (("1" (flatten 1) nil nil)
                         ("2" (flatten 1)
                          (("2" (expand "execute_patient_device" 2)
                            (("2" (lift-if 2)
                              (("2"
                                (split 2)
                                (("1" (flatten 1) nil nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("19" (expand "tick_act_patient" 1)
            (("19" (expand "next_act_patient" 1)
              (("19" (lift-if 1)
                (("19" (expand "coord_act_mono" 1)
                  (("19" (lift-if 1)
                    (("19" (split 1)
                      (("1" (flatten 1)
                        (("1" (expand "c_act_mono" 1)
                          (("1" (lift-if 1)
                            (("1" (split 1)
                              (("1"
                                (flatten 1)
                                (("1"
                                  (expand "execute_patient_device" 1)
                                  (("1"
                                    (lift-if 1)
                                    (("1"
                                      (split 1)
                                      (("1"
                                        (flatten 1)
                                        (("1"
                                          (expand "ex_a" 1)
                                          (("1" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten 1)
                                        (("2"
                                          (split 2)
                                          (("1"
                                            (flatten 1)
                                            (("1"
                                              (expand "ex_a" 1)
                                              (("1" (propax) nil nil))
                                              nil))
                                            nil)
                                           ("2" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (flatten 1) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (flatten 1)
                        (("2" (expand "c_act_mono" 2)
                          (("2" (lift-if 2)
                            (("2" (split 2)
                              (("1" (flatten 1) nil nil)
                               ("2"
                                (flatten 1)
                                (("2"
                                  (expand "execute_patient_device" 2)
                                  (("2"
                                    (lift-if 2)
                                    (("2"
                                      (split 2)
                                      (("1" (flatten 1) nil nil)
                                       ("2"
                                        (flatten 1)
                                        (("2"
                                          (split 2)
                                          (("1"
                                            (flatten 1)
                                            (("1"
                                              (expand "ex_a" 1)
                                              (("1" (propax) nil nil))
                                              nil))
                                            nil)
                                           ("2" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("20" (expand "coordinator_enter_action" 1)
            (("20" (assert) nil nil)) nil)
           ("21" (expand "coord_act_mono" 1)
            (("21" (lift-if 1)
              (("21" (split 1)
                (("1" (flatten 1)
                  (("1" (expand "c_act_mono" 1)
                    (("1" (lift-if 1)
                      (("1" (split 1)
                        (("1" (flatten 1)
                          (("1" (expand "execute_patient_device" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "ex_a" 1)
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 1)
                                    (("1"
                                      (split 2)
                                      (("1"
                                        (flatten 1)
                                        (("1"
                                          (expand "ex_a" 1)
                                          (("1" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("2" (propax) nil nil))
                                      nil)
                                     ("2" (propax) nil nil)
                                     ("3"
                                      (split 2)
                                      (("1"
                                        (flatten 1)
                                        (("1"
                                          (expand "ex_a" 1)
                                          (("1" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("2" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "c_act_mono" 2)
                    (("2" (lift-if 2)
                      (("2" (split 2)
                        (("1" (flatten 1) nil nil)
                         ("2" (flatten 1)
                          (("2" (expand "execute_patient_device" 2)
                            (("2" (lift-if 2)
                              (("2"
                                (split 2)
                                (("1" (flatten 1) nil nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("22" (expand "tick_act_patient" 1)
            (("22" (expand "next_act_patient" 1)
              (("22" (lift-if 1) (("22" (propax) nil nil)) nil)) nil))
            nil)
           ("23" (expand "tick_act_device" 1)
            (("23" (lift-if 1)
              (("23" (split 1)
                (("1" (flatten 1)
                  (("1" (expand "dev_ex" 1)
                    (("1" (lift-if 1)
                      (("1" (expand "tick_act_patient" 1)
                        (("1" (expand "next_act_patient" 1)
                          (("1" (lift-if 1) (("1" (propax) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "dev_ex" 2)
                    (("2" (lift-if 2)
                      (("2" (expand "tick_act_patient" 2)
                        (("2" (expand "next_act_patient" 2)
                          (("2" (lift-if 2) (("2" (propax) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("24" (expand "coordinator_enter_action" 1)
            (("24" (assert) nil nil)) nil)
           ("25" (expand "coord_act_mono" 1)
            (("25" (lift-if 1)
              (("25" (split 1)
                (("1" (flatten 1)
                  (("1" (expand "c_act_mono" 1)
                    (("1" (lift-if 1)
                      (("1" (split 1)
                        (("1" (flatten 1)
                          (("1" (expand "execute_patient_device" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "ex_a" 1)
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "c_act_mono" 2)
                    (("2" (lift-if 2)
                      (("2" (split 2)
                        (("1" (flatten 1) nil nil)
                         ("2" (flatten 1)
                          (("2" (expand "execute_patient_device" 2)
                            (("2" (lift-if 2)
                              (("2"
                                (split 2)
                                (("1" (flatten 1) nil nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("26" (expand "tick_act_patient" 1)
            (("26" (expand "next_act_patient" 1)
              (("26" (lift-if 1) (("26" (propax) nil nil)) nil)) nil))
            nil)
           ("27" (expand "tick_act_device" 1) (("27" (propax) nil nil))
            nil)
           ("28" (expand "coordinator_enter_action" 1)
            (("28" (assert) nil nil)) nil)
           ("29" (expand "coord_act_mono" 1)
            (("29" (lift-if 1)
              (("29" (split 1)
                (("1" (flatten 1)
                  (("1" (expand "c_act_mono" 1)
                    (("1" (lift-if 1)
                      (("1" (split 1)
                        (("1" (flatten 1)
                          (("1" (expand "execute_patient_device" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "ex_a" 1)
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "c_act_mono" 2)
                    (("2" (lift-if 2)
                      (("2" (split 2)
                        (("1" (flatten 1) nil nil)
                         ("2" (flatten 1)
                          (("2" (expand "execute_patient_device" 2)
                            (("2" (lift-if 2)
                              (("2"
                                (split 2)
                                (("1" (flatten 1) nil nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("30" (expand "tick_act_patient" 1)
            (("30" (expand "next_act_patient" 1)
              (("30" (lift-if 1) (("30" (propax) nil nil)) nil)) nil))
            nil)
           ("31" (expand "tick_act_device" 1) (("31" (propax) nil nil))
            nil)
           ("32" (expand "coordinator_enter_action" 1)
            (("32" (assert) nil nil)) nil)
           ("33" (expand "coord_act_mono" 1)
            (("33" (lift-if 1)
              (("33" (split 1)
                (("1" (flatten 1)
                  (("1" (expand "c_act_mono" 1)
                    (("1" (lift-if 1)
                      (("1" (split 1)
                        (("1" (flatten 1)
                          (("1" (expand "execute_patient_device" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "ex_a" 1)
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "c_act_mono" 2)
                    (("2" (lift-if 2)
                      (("2" (split 2)
                        (("1" (flatten 1) nil nil)
                         ("2" (flatten 1)
                          (("2" (expand "execute_patient_device" 2)
                            (("2" (lift-if 2)
                              (("2"
                                (split 2)
                                (("1" (flatten 1) nil nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("34" (expand "tick_act_patient" 1)
            (("34" (expand "next_act_patient" 1)
              (("34" (lift-if 1) (("34" (propax) nil nil)) nil)) nil))
            nil)
           ("35" (expand "tick_act_device" 1)
            (("35" (lift-if 1)
              (("35" (split 1)
                (("1" (flatten 1)
                  (("1" (expand "dev_ex" 1)
                    (("1" (lift-if 1) (("1" (propax) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "dev_ex" 2)
                    (("2" (lift-if 2) (("2" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((coordinator_enter_action const-decl "state" system_th nil)
    (tick_act_device const-decl "state" system_th nil)
    (dev_ex const-decl "p_state" patient_th nil)
    (execute_vs const-decl "v_state" vital_signs_th nil)
    (alarm_vs const-decl "v_state" vital_signs_th nil)
    (switch_vs const-decl "v_state" vital_signs_th nil)
    (execute_ip const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (fun_ip const-decl "d_state" infusion_pumps_th nil)
    (fun_pause const-decl "d_state" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (fun_infuse const-decl "d_state" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (fun_chooserate const-decl "d_state" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (fun_choosevtbi const-decl "d_state" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (fun_choosetime const-decl "d_state" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (fun_confirm const-decl "d_state" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (fun_bolus const-decl "d_state" infusion_pumps_th nil)
    (bolus_timeout const-decl "itimes" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (fun_decr const-decl "d_state" infusion_pumps_th nil)
    (/= const-decl "boolean" notequal nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (fun_incr const-decl "d_state" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (fun_power const-decl "d_state" infusion_pumps_th nil)
    (init_d_state const-decl "d_state" infusion_pumps_th nil)
    (init_ip_panel const-decl "panel" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (tick_act_patient const-decl "state" system_th nil)
    (next_act_patient const-decl "state" system_th nil)
    (next_act_pm const-decl "n_state" node_th nil)
    (sub_act_buff const-decl "act_q_type" node_th nil)
    (empty_act_msg const-decl "act_message_type" node_th nil)
    (no_node const-decl "node" node_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (coord_act_mono const-decl "state" system_th nil)
    (c_act_mono const-decl "state" system_th nil)
    (execute_patient_device const-decl "state" system_th nil)
    (ex_a const-decl "state" system_th nil)
    (act_send const-decl "n_state" node_th nil)
    (add_act_buff const-decl "act_q_type" node_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (coord_node const-decl "node" node_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (<= const-decl "bool" reals nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil))
   shostak))
 (actcoordiplemma3y 0
  (actcoordiplemma3y-1 nil 3859957873
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split)
          (("1" (expand "coordinator_enter_action" 1)
            (("1" (assert) nil nil)) nil)
           ("2" (expand "coord_act_mono" 1)
            (("2" (lift-if 1)
              (("2" (split 1)
                (("1" (flatten 1)
                  (("1" (expand "c_act_mono" 1)
                    (("1" (lift-if 1)
                      (("1" (split 1)
                        (("1" (flatten 1)
                          (("1" (expand "execute_patient_device" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "ex_a" 1)
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "c_act_mono" 2)
                    (("2" (lift-if 2)
                      (("2" (split 2)
                        (("1" (flatten 1) nil nil)
                         ("2" (flatten 1)
                          (("2" (expand "execute_patient_device" 2)
                            (("2" (lift-if 2)
                              (("2"
                                (split 2)
                                (("1" (flatten 1) nil nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("3" (expand "tick_act_patient" 1)
            (("3" (expand "next_act_patient" 1)
              (("3" (lift-if 1) (("3" (propax) nil nil)) nil)) nil))
            nil)
           ("4" (expand "tick_act_device" 1) (("4" (propax) nil nil))
            nil)
           ("5" (expand "coordinator_enter_action" 1)
            (("5" (assert) nil nil)) nil)
           ("6" (expand "coord_act_mono" 1)
            (("6" (lift-if 1)
              (("6" (split 1)
                (("1" (flatten 1)
                  (("1" (expand "c_act_mono" 1)
                    (("1" (lift-if 1)
                      (("1" (split 1)
                        (("1" (flatten 1)
                          (("1" (expand "execute_patient_device" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "ex_a" 1)
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "c_act_mono" 2)
                    (("2" (lift-if 2)
                      (("2" (split 2)
                        (("1" (flatten 1) nil nil)
                         ("2" (flatten 1)
                          (("2" (expand "execute_patient_device" 2)
                            (("2" (lift-if 2)
                              (("2"
                                (split 2)
                                (("1" (flatten 1) nil nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("7" (expand "tick_act_patient" 1)
            (("7" (expand "next_act_patient" 1)
              (("7" (lift-if 1) (("7" (propax) nil nil)) nil)) nil))
            nil)
           ("8" (expand "tick_act_device" 1) (("8" (propax) nil nil))
            nil)
           ("9" (expand "coordinator_enter_action" 1)
            (("9" (assert) nil nil)) nil)
           ("10" (expand "coord_act_mono" 1)
            (("10" (lift-if 1)
              (("10" (split 1)
                (("1" (flatten 1)
                  (("1" (expand "c_act_mono" 1)
                    (("1" (lift-if 1)
                      (("1" (split 1)
                        (("1" (flatten 1)
                          (("1" (expand "execute_patient_device" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "ex_a" 1)
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "c_act_mono" 2)
                    (("2" (lift-if 2)
                      (("2" (split 2)
                        (("1" (flatten 1) nil nil)
                         ("2" (flatten 1)
                          (("2" (expand "execute_patient_device" 2)
                            (("2" (lift-if 2)
                              (("2"
                                (split 2)
                                (("1" (flatten 1) nil nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("11" (expand "tick_act_patient" 1)
            (("11" (expand "next_act_patient" 1)
              (("11" (lift-if 1) (("11" (propax) nil nil)) nil)) nil))
            nil)
           ("12" (expand "tick_act_device" 1) (("12" (propax) nil nil))
            nil)
           ("13" (expand "coordinator_enter_action" 1)
            (("13" (assert) nil nil)) nil)
           ("14" (expand "coord_act_mono" 1)
            (("14" (lift-if 1)
              (("14" (split 1)
                (("1" (flatten 1)
                  (("1" (expand "c_act_mono" 1)
                    (("1" (lift-if 1)
                      (("1" (split 1)
                        (("1" (flatten 1)
                          (("1" (expand "execute_patient_device" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "ex_a" 1)
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "c_act_mono" 2)
                    (("2" (lift-if 2)
                      (("2" (split 2)
                        (("1" (flatten 1) nil nil)
                         ("2" (flatten 1)
                          (("2" (expand "execute_patient_device" 2)
                            (("2" (lift-if 2)
                              (("2"
                                (split 2)
                                (("1" (flatten 1) nil nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("15" (expand "tick_act_patient" 1)
            (("15" (expand "next_act_patient" 1)
              (("15" (lift-if 1) (("15" (propax) nil nil)) nil)) nil))
            nil)
           ("16" (expand "tick_act_device" 1) (("16" (propax) nil nil))
            nil)
           ("17" (expand "coordinator_enter_action" 1)
            (("17" (assert) nil nil)) nil)
           ("18" (expand "coord_act_mono" 1)
            (("18" (lift-if 1)
              (("18" (split 1)
                (("1" (flatten 1)
                  (("1" (expand "c_act_mono" 1)
                    (("1" (lift-if 1)
                      (("1" (split 1)
                        (("1" (flatten 1)
                          (("1" (expand "execute_patient_device" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "ex_a" 1)
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "c_act_mono" 2)
                    (("2" (lift-if 2)
                      (("2" (split 2)
                        (("1" (flatten 1) nil nil)
                         ("2" (flatten 1)
                          (("2" (expand "execute_patient_device" 2)
                            (("2" (lift-if 2)
                              (("2"
                                (split 2)
                                (("1" (flatten 1) nil nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (split 2)
                                    (("1"
                                      (flatten 1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("19" (expand "tick_act_patient" 1)
            (("19" (expand "next_act_patient" 1)
              (("19" (lift-if 1) (("19" (propax) nil nil)) nil)) nil))
            nil)
           ("20" (expand "tick_act_device" 1) (("20" (propax) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((coordinator_enter_action const-decl "state" system_th nil)
    (ex_a const-decl "state" system_th nil)
    (execute_patient_device const-decl "state" system_th nil)
    (c_act_mono const-decl "state" system_th nil)
    (coord_act_mono const-decl "state" system_th nil)
    (next_act_patient const-decl "state" system_th nil)
    (tick_act_patient const-decl "state" system_th nil)
    (tick_act_device const-decl "state" system_th nil))
   shostak))
 (actlemma2ipenter_coord 0
  (actlemma2ipenter_coord-1 nil 3860572735
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split -11)
          (("1" (flatten -1)
            (("1" (assert)
              (("1" (split 12)
                (("1" (grind) nil nil) ("2" (grind) nil nil)) nil))
              nil))
            nil)
           ("2" (flatten -1)
            (("2" (assert)
              (("2" (split 12)
                (("1" (grind) nil nil) ("2" (grind) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (<= const-decl "bool" reals nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (coordinator_enter_action const-decl "state" system_th nil)
    (coord_node const-decl "node" node_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (add_act_buff const-decl "act_q_type" node_th nil)
    (act_send const-decl "n_state" node_th nil)
    (ex_a const-decl "state" system_th nil)
    (execute_patient_device const-decl "state" system_th nil)
    (c_act_mono const-decl "state" system_th nil)
    (coord_act_mono const-decl "state" system_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (no_node const-decl "node" node_th nil)
    (empty_act_msg const-decl "act_message_type" node_th nil)
    (sub_act_buff const-decl "act_q_type" node_th nil)
    (next_act_pm const-decl "n_state" node_th nil)
    (next_act_patient const-decl "state" system_th nil)
    (tick_act_patient const-decl "state" system_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (nil_device const-decl "device" devices_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   shostak))
 (actlemma2ipenter_coordx 0
  (actlemma2ipenter_coordx-1 nil 3895724500
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split -9)
          (("1" (flatten -1)
            (("1" (assert)
              (("1" (split 12)
                (("1" (flatten 1)
                  (("1" (expand "c_d_per_actionx" -1)
                    (("1" (flatten -1) (("1" (grind) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "c_p_per_actionx" -1)
                    (("2" (flatten -1)
                      (("2" (expand "coordinator_enter_action" 1)
                        (("2" (assert)
                          (("2" (expand "coord_act_mono" 1)
                            (("2" (expand "c_act_mono" 1)
                              (("2"
                                (replace -2 1)
                                (("2"
                                  (replace -3 1)
                                  (("2" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("3" (grind) nil nil))
                nil))
              nil))
            nil)
           ("2" (flatten -1)
            (("2" (assert)
              (("2" (split 12)
                (("1" (flatten 1)
                  (("1" (expand "c_d_per_actionx" -1)
                    (("1" (flatten -1) (("1" (grind) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "c_p_per_actionx" -1)
                    (("2" (flatten -1) (("2" (grind) nil nil)) nil))
                    nil))
                  nil)
                 ("3" (grind) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((c_p_per_actionx const-decl "boolean" ICE_templates_rsce_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (tick_act_patient const-decl "state" system_th nil)
    (next_act_patient const-decl "state" system_th nil)
    (next_act_pm const-decl "n_state" node_th nil)
    (sub_act_buff const-decl "act_q_type" node_th nil)
    (empty_act_msg const-decl "act_message_type" node_th nil)
    (no_node const-decl "node" node_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (coord_act_mono const-decl "state" system_th nil)
    (c_act_mono const-decl "state" system_th nil)
    (execute_patient_device const-decl "state" system_th nil)
    (ex_a const-decl "state" system_th nil)
    (act_send const-decl "n_state" node_th nil)
    (add_act_buff const-decl "act_q_type" node_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (coord_node const-decl "node" node_th nil)
    (coordinator_enter_action const-decl "state" system_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (<= const-decl "bool" reals nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (c_d_per_actionx const-decl "boolean" ICE_templates_rsce_th nil))
   shostak))
 (lemma_fun_act_p 0
  (lemma_fun_act_p-1 nil 3859880797
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split)
          (("1" (grind) nil nil) ("2" (grind) nil nil)
           ("3" (grind) nil nil) ("4" (grind) nil nil)
           ("5" (grind) nil nil) ("6" (grind) nil nil)
           ("7" (grind) nil nil) ("8" (grind) nil nil)
           ("9" (grind) nil nil) ("10" (grind) nil nil)
           ("11" (grind) nil nil) ("12" (grind) nil nil))
          nil))
        nil))
      nil))
    nil)
   ((coord_node const-decl "node" node_th nil)
    (p_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (tick_act_device const-decl "state" system_th nil)
    (dev_ex const-decl "p_state" patient_th nil)
    (execute_vs const-decl "v_state" vital_signs_th nil)
    (alarm_vs const-decl "v_state" vital_signs_th nil)
    (switch_vs const-decl "v_state" vital_signs_th nil)
    (execute_ip const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (fun_ip const-decl "d_state" infusion_pumps_th nil)
    (fun_pause const-decl "d_state" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (fun_infuse const-decl "d_state" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (fun_chooserate const-decl "d_state" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (fun_choosevtbi const-decl "d_state" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (fun_choosetime const-decl "d_state" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (fun_confirm const-decl "d_state" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (fun_bolus const-decl "d_state" infusion_pumps_th nil)
    (bolus_timeout const-decl "itimes" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (fun_decr const-decl "d_state" infusion_pumps_th nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (fun_incr const-decl "d_state" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (fun_power const-decl "d_state" infusion_pumps_th nil)
    (init_d_state const-decl "d_state" infusion_pumps_th nil)
    (init_ip_panel const-decl "panel" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (next_act_pm const-decl "n_state" node_th nil)
    (sub_act_buff const-decl "act_q_type" node_th nil)
    (empty_act_msg const-decl "act_message_type" node_th nil)
    (no_node const-decl "node" node_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (patient_act_mono const-decl "state" system_th nil)
    (act_send const-decl "n_state" node_th nil)
    (add_act_buff const-decl "act_q_type" node_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (/= const-decl "boolean" notequal nil)
    (patient_enter_action const-decl "state" system_th nil)
    (p_null const-decl "patient" patient_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (<= const-decl "bool" reals nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (plimit const-decl "nat" coord_t_and_c_th nil))
   shostak))
 (p_to_act_ip 0
  (p_to_act_ip-1 nil 3866780327
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split -12)
          (("1" (assert)
            (("1" (expand "p_fun_act" 8)
              (("1" (expand "patient_enter_action" 8)
                (("1" (split -11)
                  (("1" (flatten -1)
                    (("1" (assert)
                      (("1" (expand "patient_act_mono" 8)
                        (("1" (expand "tick_act_device" 8)
                          (("1" (expand "dev_ex" 8)
                            (("1" (assert)
                              (("1"
                                (replace -13 8)
                                (("1" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (flatten -1)
                    (("2" (assert)
                      (("2" (expand "patient_act_mono" 8)
                        (("2" (expand "tick_act_device" 8)
                          (("2" (expand "dev_ex" 8)
                            (("2" (replace -13 8)
                              (("2" (grind) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (assert)
            (("2" (expand "p_fun_act" 8)
              (("2" (expand "patient_enter_action" 8)
                (("2" (split -11)
                  (("1" (flatten -1)
                    (("1" (assert)
                      (("1" (expand "patient_act_mono" 8)
                        (("1" (expand "tick_act_device" 8)
                          (("1" (expand "dev_ex" 8)
                            (("1" (grind) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (flatten -1)
                    (("2" (assert)
                      (("2" (expand "patient_act_mono" 8)
                        (("2" (expand "tick_act_device" 8)
                          (("2" (expand "dev_ex" 8)
                            (("2" (grind) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((p_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (tick_act_device const-decl "state" system_th nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (<= const-decl "bool" reals nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (coord_node const-decl "node" node_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (/= const-decl "boolean" notequal nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (nil_device const-decl "device" devices_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (add_act_buff const-decl "act_q_type" node_th nil)
    (act_send const-decl "n_state" node_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (no_node const-decl "node" node_th nil)
    (empty_act_msg const-decl "act_message_type" node_th nil)
    (sub_act_buff const-decl "act_q_type" node_th nil)
    (next_act_pm const-decl "n_state" node_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (init_ip_panel const-decl "panel" infusion_pumps_th nil)
    (init_d_state const-decl "d_state" infusion_pumps_th nil)
    (fun_power const-decl "d_state" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (fun_incr const-decl "d_state" infusion_pumps_th nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (fun_decr const-decl "d_state" infusion_pumps_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (bolus_timeout const-decl "itimes" infusion_pumps_th nil)
    (fun_bolus const-decl "d_state" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (fun_confirm const-decl "d_state" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (fun_choosetime const-decl "d_state" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (fun_choosevtbi const-decl "d_state" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (fun_chooserate const-decl "d_state" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (fun_infuse const-decl "d_state" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (fun_pause const-decl "d_state" infusion_pumps_th nil)
    (fun_ip const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (execute_ip const-decl "d_state" infusion_pumps_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (dev_ex const-decl "p_state" patient_th nil)
    (patient_act_mono const-decl "state" system_th nil)
    (patient_enter_action const-decl "state" system_th nil)
    (switch_vs const-decl "v_state" vital_signs_th nil)
    (alarm_vs const-decl "v_state" vital_signs_th nil)
    (execute_vs const-decl "v_state" vital_signs_th nil))
   shostak))
 (p_to_act_ip_coord 0
  (p_to_act_ip_coord-1 nil 3860578725
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "actlemma2ipenter_coord"
           ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1"
                (with-labels (flatten -1)
                 ((al2ipnappammsgpe al2ippamdevstpe)))
                (("1"
                  (lemma "actcoordlemma1npx"
                   ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1" (split -38)
                          (("1" (flatten -1)
                            (("1" (assert)
                              (("1"
                                (expand "c_fun_act" 12)
                                (("1"
                                  (expand "tick_act_device" 12)
                                  (("1"
                                    (replace -17 12)
                                    (("1"
                                      (replace -16 12)
                                      (("1"
                                        (replace -15 12)
                                        (("1"
                                          (expand "dev_ex" 12)
                                          (("1"
                                            (flatten 12)
                                            (("1"
                                              (replace -40 -23)
                                              (("1"
                                                (replace -23 12)
                                                (("1"
                                                  (beta 12)
                                                  (("1"
                                                    (replace -24 12)
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (flatten -1)
                            (("2" (assert)
                              (("2"
                                (flatten 12)
                                (("2"
                                  (expand "c_fun_act" 12)
                                  (("2"
                                    (expand "tick_act_device" 12)
                                    (("2"
                                      (replace -21 12)
                                      (("2"
                                        (replace -20 12)
                                        (("2"
                                          (replace -19 12)
                                          (("2"
                                            (expand "dev_ex" 12)
                                            (("2"
                                              (replace -40 -23)
                                              (("2"
                                                (replace -23 12)
                                                (("2"
                                                  (beta 12)
                                                  (("2"
                                                    (replace -25 12)
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil) ("3" (propax) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (split -18)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -18)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (assert) nil nil)
                       ("11" (propax) nil nil) ("12" (assert) nil nil)
                       ("13" (assert) nil nil) ("14" (propax) nil nil)
                       ("15" (assert) nil nil) ("16" (assert) nil nil)
                       ("17" (propax) nil nil) ("18" (assert) nil nil)
                       ("19" (assert) nil nil) ("20" (propax) nil nil)
                       ("21" (propax) nil nil) ("22" (assert) nil nil)
                       ("23" (propax) nil nil) ("24" (propax) nil nil)
                       ("25" (assert) nil nil) ("26" (propax) nil nil)
                       ("27" (propax) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -15)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -15)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (assert) nil nil)
               ("11" (propax) nil nil) ("12" (assert) nil nil)
               ("13" (assert) nil nil) ("14" (propax) nil nil)
               ("15" (propax) nil nil) ("16" (propax) nil nil)
               ("17" (propax) nil nil) ("18" (propax) nil nil)
               ("19" (propax) nil nil) ("20" (propax) nil nil)
               ("21" (propax) nil nil) ("22" (propax) nil nil)
               ("23" (assert) nil nil) ("24" (propax) nil nil)
               ("25" (assert) nil nil) ("26" (assert) nil nil)
               ("27" (assert) nil nil) ("28" (propax) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (actlemma2ipenter_coord formula-decl nil ICE_templates_rsce_th nil)
    (actcoordlemma1npx formula-decl nil ICE_templates_rsce_th nil)
    (tick_act_device const-decl "state" system_th nil)
    (dev_ex const-decl "p_state" patient_th nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil))
   shostak))
 (p_to_act_ip_coordx 0
  (p_to_act_ip_coordx-1 nil 3895642435
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "actlemma2ipenter_coordx"
           ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "actcoordlemma1npx"
                   ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1" (split -35)
                          (("1" (flatten -1)
                            (("1" (assert)
                              (("1"
                                (split 12)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "c_d_per_actionx" -1)
                                    (("1"
                                      (flatten -1)
                                      (("1"
                                        (expand "c_fun_act" 1)
                                        (("1"
                                          (expand "tick_act_device" 1)
                                          (("1"
                                            (replace -23 1)
                                            (("1"
                                              (replace -22 1)
                                              (("1"
                                                (replace -21 1)
                                                (("1"
                                                  (expand "dev_ex" 1)
                                                  (("1"
                                                    (split -29)
                                                    (("1"
                                                      (replace -1 1)
                                                      (("1"
                                                        (beta 1)
                                                        (("1"
                                                          (replace
                                                           -31
                                                           1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "c_d_per_actionx"
                                                       1)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand "c_p_per_actionx" -1)
                                    (("2"
                                      (flatten -1)
                                      (("2"
                                        (expand "c_fun_act" 1)
                                        (("2"
                                          (expand "tick_act_device" 1)
                                          (("2"
                                            (replace -23 1)
                                            (("2"
                                              (replace -22 1)
                                              (("2"
                                                (replace -21 1)
                                                (("2"
                                                  (expand "dev_ex" 1)
                                                  (("2"
                                                    (split -30)
                                                    (("1"
                                                      (replace -1 1)
                                                      (("1"
                                                        (beta 1)
                                                        (("1"
                                                          (replace
                                                           -31
                                                           1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "c_p_per_actionx"
                                                       1)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (flatten -1)
                            (("2" (assert)
                              (("2"
                                (split 12)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "c_d_per_actionx" -1)
                                    (("1"
                                      (flatten -1)
                                      (("1"
                                        (expand "c_fun_act" 1)
                                        (("1"
                                          (expand "tick_act_device" 1)
                                          (("1"
                                            (replace -27 1)
                                            (("1"
                                              (replace -26 1)
                                              (("1"
                                                (replace -25 1)
                                                (("1"
                                                  (expand "dev_ex" 1)
                                                  (("1"
                                                    (split -29)
                                                    (("1"
                                                      (replace -1 1)
                                                      (("1"
                                                        (beta 1)
                                                        (("1"
                                                          (replace
                                                           -32
                                                           1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "c_d_per_actionx"
                                                       1)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand "c_p_per_actionx" -1)
                                    (("2"
                                      (flatten -1)
                                      (("2"
                                        (expand "c_fun_act" 1)
                                        (("2"
                                          (expand "tick_act_device" 1)
                                          (("2"
                                            (replace -27 1)
                                            (("2"
                                              (replace -26 1)
                                              (("2"
                                                (replace -25 1)
                                                (("2"
                                                  (expand "dev_ex" 1)
                                                  (("2"
                                                    (split -30)
                                                    (("1"
                                                      (replace -1 1)
                                                      (("1"
                                                        (beta 1)
                                                        (("1"
                                                          (replace
                                                           -32
                                                           1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "c_p_per_actionx"
                                                       1)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil) ("3" (propax) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (split -15)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -15)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (assert) nil nil)
                       ("11" (propax) nil nil)
                       ("12" (split -15)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("13" (split -15)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("14" (propax) nil nil)
                       ("15" (split -15)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("16" (assert) nil nil) ("17" (propax) nil nil)
                       ("18" (assert) nil nil) ("19" (assert) nil nil)
                       ("20" (propax) nil nil) ("21" (propax) nil nil)
                       ("22" (assert) nil nil) ("23" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -11)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -11)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (assert) nil nil)
               ("11" (propax) nil nil) ("12" (assert) nil nil)
               ("13" (assert) nil nil) ("14" (propax) nil nil)
               ("15" (propax) nil nil) ("16" (propax) nil nil)
               ("17" (propax) nil nil) ("18" (propax) nil nil)
               ("19" (assert) nil nil) ("20" (propax) nil nil)
               ("21" (assert) nil nil)
               ("22" (split -11)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("23" (split -11)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("24" (propax) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (actlemma2ipenter_coordx formula-decl nil ICE_templates_rsce_th
     nil)
    (actcoordlemma1npx formula-decl nil ICE_templates_rsce_th nil)
    (c_p_per_actionx const-decl "boolean" ICE_templates_rsce_th nil)
    (tick_act_device const-decl "state" system_th nil)
    (dev_ex const-decl "p_state" patient_th nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (c_d_per_actionx const-decl "boolean" ICE_templates_rsce_th nil))
   shostak))
 (lemma_fun_act_cp 0
  (lemma_fun_act_cp-1 nil 3859961987
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "actcoordlemma1npx"
           ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "actcoordiplemma3x"
                   ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1"
                          (lemma "actcoordiplemma3y"
                           ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
                          (("1" (beta -1)
                            (("1" (split -1)
                              (("1"
                                (flatten -1)
                                (("1"
                                  (expand "c_fun_act" 13)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (split 13)
                                      (("1"
                                        (split -85)
                                        (("1"
                                          (flatten -1)
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (flatten -1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (split -85)
                                        (("1"
                                          (flatten -1)
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (flatten -1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (expand
                                         "coordinator_enter_action"
                                         1)
                                        (("3"
                                          (assert)
                                          (("3"
                                            (expand "coord_act_mono" 1)
                                            (("3"
                                              (expand "c_act_mono" 1)
                                              (("3"
                                                (replace -86 1)
                                                (("3"
                                                  (replace -87 1)
                                                  (("3"
                                                    (expand
                                                     "execute_patient_device"
                                                     1)
                                                    (("3"
                                                      (assert)
                                                      (("3"
                                                        (expand
                                                         "tick_act_patient"
                                                         1)
                                                        (("3"
                                                          (expand
                                                           "next_act_patient"
                                                           1)
                                                          (("3"
                                                            (expand
                                                             "next_act_pm"
                                                             1)
                                                            (("3"
                                                              (expand
                                                               "tick_act_device"
                                                               1)
                                                              (("3"
                                                                (lift-if
                                                                 1)
                                                                (("3"
                                                                  (split
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "ex_a"
                                                                     1)
                                                                    (("1"
                                                                      (flatten
                                                                       1)
                                                                      (("1"
                                                                        (lift-if
                                                                         1)
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten
                                                                     1)
                                                                    (("2"
                                                                      (lift-if
                                                                       2)
                                                                      (("2"
                                                                        (split
                                                                         2)
                                                                        (("1"
                                                                          (expand
                                                                           "ex_a"
                                                                           1)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten
                                                                           1)
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (propax) nil nil)
                               ("3" (propax) nil nil)
                               ("4" (propax) nil nil)
                               ("5" (propax) nil nil)
                               ("6"
                                (split -65)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (assert)
                                  (("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("7" (assert) nil nil)
                               ("8"
                                (split -65)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("9" (assert) nil nil)
                               ("10" (assert) nil nil)
                               ("11" (propax) nil nil)
                               ("12"
                                (split -65)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("13"
                                (split -65)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("14" (propax) nil nil)
                               ("15"
                                (split -65)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("16" (assert) nil nil)
                               ("17" (propax) nil nil)
                               ("18" (assert) nil nil)
                               ("19" (assert) nil nil)
                               ("20" (propax) nil nil)
                               ("21" (propax) nil nil)
                               ("22" (assert) nil nil)
                               ("23" (propax) nil nil)
                               ("24" (propax) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil) ("3" (propax) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (split -30)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -30)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (assert) nil nil)
                       ("11" (propax) nil nil)
                       ("12" (split -30)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("13" (split -30)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("14" (propax) nil nil)
                       ("15" (split -30)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("16" (assert) nil nil) ("17" (propax) nil nil)
                       ("18" (assert) nil nil) ("19" (assert) nil nil)
                       ("20" (propax) nil nil) ("21" (propax) nil nil)
                       ("22" (assert) nil nil) ("23" (assert) nil nil)
                       ("24" (propax) nil nil) ("25" (propax) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -10)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -10)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (assert) nil nil)
               ("11" (propax) nil nil)
               ("12" (split -10)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("13" (split -10)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("14" (propax) nil nil)
               ("15" (split -10)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("16" (assert) nil nil) ("17" (propax) nil nil)
               ("18" (assert) nil nil) ("19" (assert) nil nil)
               ("20" (propax) nil nil) ("21" (propax) nil nil)
               ("22" (assert) nil nil) ("23" (assert) nil nil)
               ("24" (propax) nil nil) ("25" (propax) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (actcoordlemma1npx formula-decl nil ICE_templates_rsce_th nil)
    (actcoordiplemma3x formula-decl nil ICE_templates_rsce_th nil)
    (actcoordiplemma3y formula-decl nil ICE_templates_rsce_th nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (c_act_mono const-decl "state" system_th nil)
    (next_act_patient const-decl "state" system_th nil)
    (tick_act_device const-decl "state" system_th nil)
    (ex_a const-decl "state" system_th nil)
    (p_null const-decl "patient" patient_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (coord_node const-decl "node" node_th nil)
    (dev_ex const-decl "p_state" patient_th nil)
    (execute_vs const-decl "v_state" vital_signs_th nil)
    (alarm_vs const-decl "v_state" vital_signs_th nil)
    (switch_vs const-decl "v_state" vital_signs_th nil)
    (execute_ip const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (fun_ip const-decl "d_state" infusion_pumps_th nil)
    (fun_pause const-decl "d_state" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (fun_infuse const-decl "d_state" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (fun_chooserate const-decl "d_state" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (fun_choosevtbi const-decl "d_state" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (fun_choosetime const-decl "d_state" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (fun_confirm const-decl "d_state" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (fun_bolus const-decl "d_state" infusion_pumps_th nil)
    (bolus_timeout const-decl "itimes" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (fun_decr const-decl "d_state" infusion_pumps_th nil)
    (/= const-decl "boolean" notequal nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (fun_incr const-decl "d_state" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (fun_power const-decl "d_state" infusion_pumps_th nil)
    (init_d_state const-decl "d_state" infusion_pumps_th nil)
    (init_ip_panel const-decl "panel" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (act_send const-decl "n_state" node_th nil)
    (add_act_buff const-decl "act_q_type" node_th nil)
    (sub_act_buff const-decl "act_q_type" node_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (empty_act_msg const-decl "act_message_type" node_th nil)
    (no_node const-decl "node" node_th nil)
    (next_act_pm const-decl "n_state" node_th nil)
    (tick_act_patient const-decl "state" system_th nil)
    (execute_patient_device const-decl "state" system_th nil)
    (coord_act_mono const-decl "state" system_th nil)
    (coordinator_enter_action const-decl "state" system_th nil))
   shostak))
 (lemma_fun_act_cpx 0
  (lemma_fun_act_cpx-1 nil 3896250123
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "actcoordlemma1npx"
           ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "actcoordiplemma3x"
                   ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1"
                          (lemma "actcoordiplemma3y"
                           ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
                          (("1" (beta -1)
                            (("1" (split -1)
                              (("1"
                                (flatten -1)
                                (("1"
                                  (expand "c_fun_act" 13)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (split 13)
                                      (("1"
                                        (flatten 1)
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (flatten 1)
                                        (("2" (assert) nil nil))
                                        nil)
                                       ("3"
                                        (expand "tick_act_device" 1)
                                        (("3"
                                          (expand "tick_act_patient" 1)
                                          (("3"
                                            (expand
                                             "next_act_patient"
                                             1)
                                            (("3"
                                              (lift-if 1)
                                              (("3"
                                                (expand
                                                 "coord_act_mono"
                                                 1)
                                                (("3"
                                                  (lift-if 1)
                                                  (("3"
                                                    (split 1)
                                                    (("1"
                                                      (flatten 1)
                                                      (("1"
                                                        (expand
                                                         "c_act_mono"
                                                         1)
                                                        (("1"
                                                          (lift-if 1)
                                                          (("1"
                                                            (split 1)
                                                            (("1"
                                                              (flatten
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "execute_patient_device"
                                                                 1)
                                                                (("1"
                                                                  (lift-if
                                                                   1)
                                                                  (("1"
                                                                    (split
                                                                     1)
                                                                    (("1"
                                                                      (flatten
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "coordinator_enter_action"
                                                                         1)
                                                                        (("1"
                                                                          (lift-if
                                                                           1)
                                                                          (("1"
                                                                            (split
                                                                             1)
                                                                            (("1"
                                                                              (flatten
                                                                               1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (flatten
                                                                               1)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (flatten
                                                                       1)
                                                                      (("2"
                                                                        (split
                                                                         2)
                                                                        (("1"
                                                                          (flatten
                                                                           1)
                                                                          (("1"
                                                                            (expand
                                                                             "coordinator_enter_action"
                                                                             1)
                                                                            (("1"
                                                                              (lift-if
                                                                               1)
                                                                              (("1"
                                                                                (split
                                                                                 1)
                                                                                (("1"
                                                                                  (flatten
                                                                                   1)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (flatten
                                                                                   1)
                                                                                  (("2"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "coordinator_enter_action"
                                                                             2)
                                                                            (("2"
                                                                              (lift-if
                                                                               2)
                                                                              (("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten
                                                               1)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten 1)
                                                      (("2"
                                                        (expand
                                                         "c_act_mono"
                                                         2)
                                                        (("2"
                                                          (lift-if 2)
                                                          (("2"
                                                            (split 2)
                                                            (("1"
                                                              (flatten
                                                               1)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (flatten
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "execute_patient_device"
                                                                 2)
                                                                (("2"
                                                                  (lift-if
                                                                   2)
                                                                  (("2"
                                                                    (split
                                                                     2)
                                                                    (("1"
                                                                      (flatten
                                                                       1)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (flatten
                                                                       1)
                                                                      (("2"
                                                                        (split
                                                                         2)
                                                                        (("1"
                                                                          (flatten
                                                                           1)
                                                                          (("1"
                                                                            (expand
                                                                             "coordinator_enter_action"
                                                                             1)
                                                                            (("1"
                                                                              (lift-if
                                                                               1)
                                                                              (("1"
                                                                                (split
                                                                                 1)
                                                                                (("1"
                                                                                  (flatten
                                                                                   1)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (flatten
                                                                                   1)
                                                                                  (("2"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "coordinator_enter_action"
                                                                             2)
                                                                            (("2"
                                                                              (lift-if
                                                                               2)
                                                                              (("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (propax) nil nil)
                               ("3" (propax) nil nil)
                               ("4" (propax) nil nil)
                               ("5" (propax) nil nil)
                               ("6"
                                (split -65)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("7" (assert) nil nil)
                               ("8"
                                (split -65)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("9" (assert) nil nil)
                               ("10" (assert) nil nil)
                               ("11" (propax) nil nil)
                               ("12"
                                (split -65)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("13"
                                (split -65)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("14" (propax) nil nil)
                               ("15"
                                (split -65)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("16" (assert) nil nil)
                               ("17" (propax) nil nil)
                               ("18" (assert) nil nil)
                               ("19" (assert) nil nil)
                               ("20" (propax) nil nil)
                               ("21" (propax) nil nil)
                               ("22" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil) ("3" (propax) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (split -30)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -30)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (assert) nil nil)
                       ("11" (propax) nil nil)
                       ("12" (split -30)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("13" (split -30)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("14" (propax) nil nil)
                       ("15" (split -30)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("16" (assert) nil nil) ("17" (propax) nil nil)
                       ("18" (assert) nil nil) ("19" (assert) nil nil)
                       ("20" (propax) nil nil) ("21" (propax) nil nil)
                       ("22" (assert) nil nil) ("23" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -10)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -10)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (assert) nil nil)
               ("11" (propax) nil nil)
               ("12" (split -10)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("13" (split -10)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("14" (propax) nil nil)
               ("15" (split -10)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("16" (assert) nil nil) ("17" (propax) nil nil)
               ("18" (assert) nil nil) ("19" (assert) nil nil)
               ("20" (propax) nil nil) ("21" (propax) nil nil)
               ("22" (assert) nil nil) ("23" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (actcoordlemma1npx formula-decl nil ICE_templates_rsce_th nil)
    (actcoordiplemma3x formula-decl nil ICE_templates_rsce_th nil)
    (actcoordiplemma3y formula-decl nil ICE_templates_rsce_th nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (tick_act_patient const-decl "state" system_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (nil_device const-decl "device" devices_th nil)
    (coord_node const-decl "node" node_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (add_act_buff const-decl "act_q_type" node_th nil)
    (act_send const-decl "n_state" node_th nil)
    (ex_a const-decl "state" system_th nil)
    (coordinator_enter_action const-decl "state" system_th nil)
    (execute_patient_device const-decl "state" system_th nil)
    (c_act_mono const-decl "state" system_th nil)
    (coord_act_mono const-decl "state" system_th nil)
    (next_act_patient const-decl "state" system_th nil)
    (tick_act_device const-decl "state" system_th nil))
   shostak))
 (lemma_fun_act_cpdisp 0
  (lemma_fun_act_cpdisp-1 nil 3893827572
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "actcoordlemma1npx"
           ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "actcoordiplemma3x"
                   ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1"
                          (lemma "actcoordiplemma3y"
                           ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
                          (("1" (beta -1)
                            (("1" (split -1)
                              (("1"
                                (flatten -1)
                                (("1"
                                  (expand "c_fun_act" 13)
                                  (("1"
                                    (expand
                                     "coordinator_enter_action"
                                     13)
                                    (("1"
                                      (split -87)
                                      (("1"
                                        (flatten -1)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand
                                             "coord_act_mono"
                                             13)
                                            (("1"
                                              (expand "c_act_mono" 13)
                                              (("1"
                                                (replace -89 13)
                                                (("1"
                                                  (replace -90 13)
                                                  (("1"
                                                    (expand
                                                     "execute_patient_device"
                                                     13)
                                                    (("1"
                                                      (expand
                                                       "ex_a"
                                                       13)
                                                      (("1"
                                                        (expand
                                                         "tick_act_patient"
                                                         13)
                                                        (("1"
                                                          (split 13)
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten -1)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (expand
                                             "coord_act_mono"
                                             13)
                                            (("2"
                                              (expand "c_act_mono" 13)
                                              (("2"
                                                (replace -89 13)
                                                (("2"
                                                  (replace -90 13)
                                                  (("2"
                                                    (expand
                                                     "execute_patient_device"
                                                     13)
                                                    (("2"
                                                      (expand
                                                       "ex_a"
                                                       13)
                                                      (("2"
                                                        (expand
                                                         "tick_act_patient"
                                                         13)
                                                        (("2"
                                                          (split 13)
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (propax) nil nil)
                               ("3" (propax) nil nil)
                               ("4" (propax) nil nil)
                               ("5" (propax) nil nil)
                               ("6"
                                (split -67)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("7" (assert) nil nil)
                               ("8"
                                (split -67)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("9" (assert) nil nil)
                               ("10" (assert) nil nil)
                               ("11" (propax) nil nil)
                               ("12"
                                (split -67)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("13"
                                (split -67)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("14" (propax) nil nil)
                               ("15"
                                (split -67)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("16" (assert) nil nil)
                               ("17" (propax) nil nil)
                               ("18" (assert) nil nil)
                               ("19" (assert) nil nil)
                               ("20" (propax) nil nil)
                               ("21" (propax) nil nil)
                               ("22" (assert) nil nil)
                               ("23" (propax) nil nil)
                               ("24" (propax) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil) ("3" (propax) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (split -32)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -32)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (assert) nil nil)
                       ("11" (propax) nil nil)
                       ("12" (split -32)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("13" (split -32)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("14" (propax) nil nil)
                       ("15" (split -32)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("16" (assert) nil nil) ("17" (propax) nil nil)
                       ("18" (assert) nil nil) ("19" (assert) nil nil)
                       ("20" (propax) nil nil) ("21" (propax) nil nil)
                       ("22" (assert) nil nil) ("23" (assert) nil nil)
                       ("24" (propax) nil nil) ("25" (propax) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -12)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -12)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (split -12)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("10" (assert) nil nil) ("11" (propax) nil nil)
               ("12" (split -12)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("13" (split -12)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("14" (propax) nil nil)
               ("15" (split -12)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("16" (assert) nil nil) ("17" (propax) nil nil)
               ("18" (assert) nil nil) ("19" (assert) nil nil)
               ("20" (propax) nil nil) ("21" (propax) nil nil)
               ("22" (assert) nil nil) ("23" (assert) nil nil)
               ("24" (propax) nil nil) ("25" (propax) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (actcoordlemma1npx formula-decl nil ICE_templates_rsce_th nil)
    (actcoordiplemma3x formula-decl nil ICE_templates_rsce_th nil)
    (actcoordiplemma3y formula-decl nil ICE_templates_rsce_th nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (c_act_mono const-decl "state" system_th nil)
    (ex_a const-decl "state" system_th nil)
    (tick_act_device const-decl "state" system_th nil)
    (dev_ex const-decl "p_state" patient_th nil)
    (execute_ip const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (fun_ip const-decl "d_state" infusion_pumps_th nil)
    (fun_pause const-decl "d_state" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (fun_infuse const-decl "d_state" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (fun_chooserate const-decl "d_state" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (fun_choosevtbi const-decl "d_state" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (fun_choosetime const-decl "d_state" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (fun_confirm const-decl "d_state" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (fun_bolus const-decl "d_state" infusion_pumps_th nil)
    (bolus_timeout const-decl "itimes" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (fun_decr const-decl "d_state" infusion_pumps_th nil)
    (/= const-decl "boolean" notequal nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (fun_incr const-decl "d_state" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (fun_power const-decl "d_state" infusion_pumps_th nil)
    (init_d_state const-decl "d_state" infusion_pumps_th nil)
    (init_ip_panel const-decl "panel" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (next_act_patient const-decl "state" system_th nil)
    (next_act_pm const-decl "n_state" node_th nil)
    (sub_act_buff const-decl "act_q_type" node_th nil)
    (empty_act_msg const-decl "act_message_type" node_th nil)
    (no_node const-decl "node" node_th nil)
    (act_send const-decl "n_state" node_th nil)
    (add_act_buff const-decl "act_q_type" node_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (coord_node const-decl "node" node_th nil)
    (tick_act_patient const-decl "state" system_th nil)
    (execute_patient_device const-decl "state" system_th nil)
    (coord_act_mono const-decl "state" system_th nil)
    (switch_vs const-decl "v_state" vital_signs_th nil)
    (alarm_vs const-decl "v_state" vital_signs_th nil)
    (execute_vs const-decl "v_state" vital_signs_th nil)
    (coordinator_enter_action const-decl "state" system_th nil))
   shostak))
 (lemma_fun_act_cpdispx 0
  (lemma_fun_act_cpdispx-1 nil 3895832279
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split -10)
          (("1" (flatten -1)
            (("1" (assert)
              (("1" (split 13)
                (("1" (expand "c_fun_act" 1)
                  (("1" (expand "tick_act_device" 1)
                    (("1" (lift-if 1)
                      (("1" (split 1)
                        (("1" (flatten 1)
                          (("1" (expand "dev_ex" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (expand "tick_act_patient" 1)
                                (("1"
                                  (expand "next_act_patient" 1)
                                  (("1"
                                    (lift-if 1)
                                    (("1"
                                      (expand "coord_act_mono" 1)
                                      (("1"
                                        (lift-if 1)
                                        (("1"
                                          (split 1)
                                          (("1"
                                            (flatten 1)
                                            (("1"
                                              (expand "c_act_mono" 1)
                                              (("1"
                                                (lift-if 1)
                                                (("1"
                                                  (split 1)
                                                  (("1"
                                                    (flatten 1)
                                                    (("1"
                                                      (expand
                                                       "execute_patient_device"
                                                       1)
                                                      (("1"
                                                        (lift-if 1)
                                                        (("1"
                                                          (split 1)
                                                          (("1"
                                                            (flatten 1)
                                                            (("1"
                                                              (expand
                                                               "ex_a"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "coordinator_enter_action"
                                                                 1)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten 1)
                                                            (("2"
                                                              (split 2)
                                                              (("1"
                                                                (flatten
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "ex_a"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "coordinator_enter_action"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "coordinator_enter_action"
                                                                   2)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten 1)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten 1)
                                            (("2"
                                              (expand "c_act_mono" 2)
                                              (("2"
                                                (lift-if 2)
                                                (("2"
                                                  (split 2)
                                                  (("1"
                                                    (flatten 1)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (flatten 1)
                                                    (("2"
                                                      (expand
                                                       "execute_patient_device"
                                                       2)
                                                      (("2"
                                                        (lift-if 2)
                                                        (("2"
                                                          (split 2)
                                                          (("1"
                                                            (flatten 1)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (flatten 1)
                                                            (("2"
                                                              (split 2)
                                                              (("1"
                                                                (flatten
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "ex_a"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "coordinator_enter_action"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "coordinator_enter_action"
                                                                   2)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1)
                          (("2" (expand "dev_ex" 2)
                            (("2" (lift-if 2)
                              (("2"
                                (expand "tick_act_patient" 2)
                                (("2"
                                  (expand "next_act_patient" 2)
                                  (("2"
                                    (lift-if 2)
                                    (("2"
                                      (expand "coord_act_mono" 2)
                                      (("2"
                                        (lift-if 2)
                                        (("2"
                                          (split 2)
                                          (("1"
                                            (flatten 1)
                                            (("1"
                                              (expand "c_act_mono" 1)
                                              (("1"
                                                (lift-if 1)
                                                (("1"
                                                  (split 1)
                                                  (("1"
                                                    (flatten 1)
                                                    (("1"
                                                      (expand
                                                       "execute_patient_device"
                                                       1)
                                                      (("1"
                                                        (lift-if 1)
                                                        (("1"
                                                          (split 1)
                                                          (("1"
                                                            (flatten 1)
                                                            (("1"
                                                              (expand
                                                               "ex_a"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "coordinator_enter_action"
                                                                 1)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten 1)
                                                            (("2"
                                                              (split 2)
                                                              (("1"
                                                                (flatten
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "ex_a"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "coordinator_enter_action"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "coordinator_enter_action"
                                                                   2)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten 1)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten 1)
                                            (("2"
                                              (expand "c_act_mono" 2)
                                              (("2"
                                                (lift-if 2)
                                                (("2"
                                                  (split 2)
                                                  (("1"
                                                    (flatten 1)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (flatten 1)
                                                    (("2"
                                                      (expand
                                                       "execute_patient_device"
                                                       2)
                                                      (("2"
                                                        (lift-if 2)
                                                        (("2"
                                                          (split 2)
                                                          (("1"
                                                            (flatten 1)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (flatten 1)
                                                            (("2"
                                                              (split 2)
                                                              (("1"
                                                                (flatten
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "ex_a"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "coordinator_enter_action"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "coordinator_enter_action"
                                                                   2)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (expand "c_fun_act" 1)
                  (("2" (expand "tick_act_device" 1)
                    (("2" (lift-if 1)
                      (("2" (split 1)
                        (("1" (flatten 1)
                          (("1" (expand "dev_ex" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (expand "tick_act_patient" 1)
                                (("1"
                                  (expand "next_act_patient" 1)
                                  (("1"
                                    (lift-if 1)
                                    (("1"
                                      (expand "coord_act_mono" 1)
                                      (("1"
                                        (lift-if 1)
                                        (("1"
                                          (split 1)
                                          (("1"
                                            (flatten 1)
                                            (("1"
                                              (expand "c_act_mono" 1)
                                              (("1"
                                                (lift-if 1)
                                                (("1"
                                                  (split 1)
                                                  (("1"
                                                    (flatten 1)
                                                    (("1"
                                                      (expand
                                                       "execute_patient_device"
                                                       1)
                                                      (("1"
                                                        (lift-if 1)
                                                        (("1"
                                                          (split 1)
                                                          (("1"
                                                            (flatten 1)
                                                            (("1"
                                                              (expand
                                                               "ex_a"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "coordinator_enter_action"
                                                                 1)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten 1)
                                                            (("2"
                                                              (split 2)
                                                              (("1"
                                                                (flatten
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "ex_a"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "coordinator_enter_action"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "coordinator_enter_action"
                                                                   2)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten 1)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten 1)
                                            (("2"
                                              (expand "c_act_mono" 2)
                                              (("2"
                                                (lift-if 2)
                                                (("2"
                                                  (split 2)
                                                  (("1"
                                                    (flatten 1)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (flatten 1)
                                                    (("2"
                                                      (expand
                                                       "execute_patient_device"
                                                       2)
                                                      (("2"
                                                        (lift-if 2)
                                                        (("2"
                                                          (split 2)
                                                          (("1"
                                                            (flatten 1)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (flatten 1)
                                                            (("2"
                                                              (split 2)
                                                              (("1"
                                                                (flatten
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "ex_a"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "coordinator_enter_action"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "coordinator_enter_action"
                                                                   2)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1)
                          (("2" (expand "dev_ex" 2)
                            (("2" (lift-if 2)
                              (("2"
                                (expand "tick_act_patient" 2)
                                (("2"
                                  (expand "next_act_patient" 2)
                                  (("2"
                                    (lift-if 2)
                                    (("2"
                                      (expand "coord_act_mono" 2)
                                      (("2"
                                        (lift-if 2)
                                        (("2"
                                          (split 2)
                                          (("1"
                                            (flatten 1)
                                            (("1"
                                              (expand "c_act_mono" 1)
                                              (("1"
                                                (lift-if 1)
                                                (("1"
                                                  (split 1)
                                                  (("1"
                                                    (flatten 1)
                                                    (("1"
                                                      (expand
                                                       "execute_patient_device"
                                                       1)
                                                      (("1"
                                                        (lift-if 1)
                                                        (("1"
                                                          (split 1)
                                                          (("1"
                                                            (flatten 1)
                                                            (("1"
                                                              (expand
                                                               "ex_a"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "coordinator_enter_action"
                                                                 1)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten 1)
                                                            (("2"
                                                              (split 2)
                                                              (("1"
                                                                (flatten
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "ex_a"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "coordinator_enter_action"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "coordinator_enter_action"
                                                                   2)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten 1)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten 1)
                                            (("2"
                                              (expand "c_act_mono" 2)
                                              (("2"
                                                (lift-if 2)
                                                (("2"
                                                  (split 2)
                                                  (("1"
                                                    (flatten 1)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (flatten 1)
                                                    (("2"
                                                      (expand
                                                       "execute_patient_device"
                                                       2)
                                                      (("2"
                                                        (lift-if 2)
                                                        (("2"
                                                          (split 2)
                                                          (("1"
                                                            (flatten 1)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (flatten 1)
                                                            (("2"
                                                              (split 2)
                                                              (("1"
                                                                (flatten
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "ex_a"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "coordinator_enter_action"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "coordinator_enter_action"
                                                                   2)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("3" (expand "c_fun_act" 1)
                  (("3" (expand "tick_act_device" 1)
                    (("3" (expand "tick_act_patient" 1)
                      (("3" (expand "next_act_patient" 1)
                        (("3" (lift-if 1)
                          (("3" (expand "coord_act_mono" 1)
                            (("3" (lift-if 1)
                              (("3"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "c_act_mono" 1)
                                    (("1"
                                      (lift-if 1)
                                      (("1"
                                        (split 1)
                                        (("1"
                                          (flatten 1)
                                          (("1"
                                            (expand
                                             "execute_patient_device"
                                             1)
                                            (("1"
                                              (lift-if 1)
                                              (("1"
                                                (split 1)
                                                (("1"
                                                  (flatten 1)
                                                  (("1"
                                                    (expand "ex_a" 1)
                                                    (("1"
                                                      (expand
                                                       "coordinator_enter_action"
                                                       1)
                                                      (("1"
                                                        (lift-if 1)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten 1)
                                                  (("2"
                                                    (split 2)
                                                    (("1"
                                                      (flatten 1)
                                                      (("1"
                                                        (expand
                                                         "ex_a"
                                                         1)
                                                        (("1"
                                                          (expand
                                                           "coordinator_enter_action"
                                                           1)
                                                          (("1"
                                                            (lift-if 1)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten 1)
                                                      (("2"
                                                        (expand
                                                         "coordinator_enter_action"
                                                         2)
                                                        (("2"
                                                          (lift-if 2)
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (flatten 1) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand "c_act_mono" 2)
                                    (("2"
                                      (lift-if 2)
                                      (("2"
                                        (split 2)
                                        (("1" (flatten 1) nil nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (expand
                                             "execute_patient_device"
                                             2)
                                            (("2"
                                              (lift-if 2)
                                              (("2"
                                                (split 2)
                                                (("1"
                                                  (flatten 1)
                                                  nil
                                                  nil)
                                                 ("2"
                                                  (flatten 1)
                                                  (("2"
                                                    (split 2)
                                                    (("1"
                                                      (flatten 1)
                                                      (("1"
                                                        (expand
                                                         "ex_a"
                                                         1)
                                                        (("1"
                                                          (expand
                                                           "coordinator_enter_action"
                                                           1)
                                                          (("1"
                                                            (lift-if 1)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten 1)
                                                      (("2"
                                                        (expand
                                                         "coordinator_enter_action"
                                                         2)
                                                        (("2"
                                                          (lift-if 2)
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten -1)
            (("2" (assert)
              (("2" (split 13)
                (("1" (expand "c_fun_act" 1)
                  (("1" (expand "tick_act_device" 1)
                    (("1" (lift-if 1)
                      (("1" (split 1)
                        (("1" (flatten 1)
                          (("1" (expand "dev_ex" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (expand "tick_act_patient" 1)
                                (("1"
                                  (expand "next_act_patient" 1)
                                  (("1"
                                    (lift-if 1)
                                    (("1"
                                      (expand "coord_act_mono" 1)
                                      (("1"
                                        (lift-if 1)
                                        (("1"
                                          (split 1)
                                          (("1"
                                            (flatten 1)
                                            (("1"
                                              (expand "c_act_mono" 1)
                                              (("1"
                                                (lift-if 1)
                                                (("1"
                                                  (split 1)
                                                  (("1"
                                                    (flatten 1)
                                                    (("1"
                                                      (expand
                                                       "execute_patient_device"
                                                       1)
                                                      (("1"
                                                        (lift-if 1)
                                                        (("1"
                                                          (split 1)
                                                          (("1"
                                                            (flatten 1)
                                                            (("1"
                                                              (expand
                                                               "ex_a"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "coordinator_enter_action"
                                                                 1)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten 1)
                                                            (("2"
                                                              (split 2)
                                                              (("1"
                                                                (flatten
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "ex_a"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "coordinator_enter_action"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "coordinator_enter_action"
                                                                   2)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten 1)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten 1)
                                            (("2"
                                              (expand "c_act_mono" 2)
                                              (("2"
                                                (lift-if 2)
                                                (("2"
                                                  (split 2)
                                                  (("1"
                                                    (flatten 1)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (flatten 1)
                                                    (("2"
                                                      (expand
                                                       "execute_patient_device"
                                                       2)
                                                      (("2"
                                                        (lift-if 2)
                                                        (("2"
                                                          (split 2)
                                                          (("1"
                                                            (flatten 1)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (flatten 1)
                                                            (("2"
                                                              (split 2)
                                                              (("1"
                                                                (flatten
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "ex_a"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "coordinator_enter_action"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "coordinator_enter_action"
                                                                   2)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1)
                          (("2" (expand "dev_ex" 2)
                            (("2" (lift-if 2)
                              (("2"
                                (expand "tick_act_patient" 2)
                                (("2"
                                  (expand "next_act_patient" 2)
                                  (("2"
                                    (lift-if 2)
                                    (("2"
                                      (expand "coord_act_mono" 2)
                                      (("2"
                                        (lift-if 2)
                                        (("2"
                                          (split 2)
                                          (("1"
                                            (flatten 1)
                                            (("1"
                                              (expand "c_act_mono" 1)
                                              (("1"
                                                (lift-if 1)
                                                (("1"
                                                  (split 1)
                                                  (("1"
                                                    (flatten 1)
                                                    (("1"
                                                      (expand
                                                       "execute_patient_device"
                                                       1)
                                                      (("1"
                                                        (lift-if 1)
                                                        (("1"
                                                          (split 1)
                                                          (("1"
                                                            (flatten 1)
                                                            (("1"
                                                              (expand
                                                               "ex_a"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "coordinator_enter_action"
                                                                 1)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten 1)
                                                            (("2"
                                                              (split 2)
                                                              (("1"
                                                                (flatten
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "ex_a"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "coordinator_enter_action"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "coordinator_enter_action"
                                                                   2)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten 1)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten 1)
                                            (("2"
                                              (expand "c_act_mono" 2)
                                              (("2"
                                                (lift-if 2)
                                                (("2"
                                                  (split 2)
                                                  (("1"
                                                    (flatten 1)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (flatten 1)
                                                    (("2"
                                                      (expand
                                                       "execute_patient_device"
                                                       2)
                                                      (("2"
                                                        (lift-if 2)
                                                        (("2"
                                                          (split 2)
                                                          (("1"
                                                            (flatten 1)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (flatten 1)
                                                            (("2"
                                                              (split 2)
                                                              (("1"
                                                                (flatten
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "ex_a"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "coordinator_enter_action"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "coordinator_enter_action"
                                                                   2)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (expand "c_fun_act" 1)
                  (("2" (expand "tick_act_device" 1)
                    (("2" (lift-if 1)
                      (("2" (split 1)
                        (("1" (flatten 1)
                          (("1" (expand "dev_ex" 1)
                            (("1" (lift-if 1)
                              (("1"
                                (expand "tick_act_patient" 1)
                                (("1"
                                  (expand "next_act_patient" 1)
                                  (("1"
                                    (lift-if 1)
                                    (("1"
                                      (expand "coord_act_mono" 1)
                                      (("1"
                                        (lift-if 1)
                                        (("1"
                                          (split 1)
                                          (("1"
                                            (flatten 1)
                                            (("1"
                                              (expand "c_act_mono" 1)
                                              (("1"
                                                (lift-if 1)
                                                (("1"
                                                  (split 1)
                                                  (("1"
                                                    (flatten 1)
                                                    (("1"
                                                      (expand
                                                       "execute_patient_device"
                                                       1)
                                                      (("1"
                                                        (lift-if 1)
                                                        (("1"
                                                          (split 1)
                                                          (("1"
                                                            (flatten 1)
                                                            (("1"
                                                              (expand
                                                               "ex_a"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "coordinator_enter_action"
                                                                 1)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten 1)
                                                            (("2"
                                                              (split 2)
                                                              (("1"
                                                                (flatten
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "ex_a"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "coordinator_enter_action"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "coordinator_enter_action"
                                                                   2)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten 1)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten 1)
                                            (("2"
                                              (expand "c_act_mono" 2)
                                              (("2"
                                                (lift-if 2)
                                                (("2"
                                                  (split 2)
                                                  (("1"
                                                    (flatten 1)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (flatten 1)
                                                    (("2"
                                                      (expand
                                                       "execute_patient_device"
                                                       2)
                                                      (("2"
                                                        (lift-if 2)
                                                        (("2"
                                                          (split 2)
                                                          (("1"
                                                            (flatten 1)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (flatten 1)
                                                            (("2"
                                                              (split 2)
                                                              (("1"
                                                                (flatten
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "ex_a"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "coordinator_enter_action"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "coordinator_enter_action"
                                                                   2)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1)
                          (("2" (expand "dev_ex" 2)
                            (("2" (lift-if 2)
                              (("2"
                                (expand "tick_act_patient" 2)
                                (("2"
                                  (expand "next_act_patient" 2)
                                  (("2"
                                    (lift-if 2)
                                    (("2"
                                      (expand "coord_act_mono" 2)
                                      (("2"
                                        (lift-if 2)
                                        (("2"
                                          (split 2)
                                          (("1"
                                            (flatten 1)
                                            (("1"
                                              (expand "c_act_mono" 1)
                                              (("1"
                                                (lift-if 1)
                                                (("1"
                                                  (split 1)
                                                  (("1"
                                                    (flatten 1)
                                                    (("1"
                                                      (expand
                                                       "execute_patient_device"
                                                       1)
                                                      (("1"
                                                        (lift-if 1)
                                                        (("1"
                                                          (split 1)
                                                          (("1"
                                                            (flatten 1)
                                                            (("1"
                                                              (expand
                                                               "ex_a"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "coordinator_enter_action"
                                                                 1)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten 1)
                                                            (("2"
                                                              (split 2)
                                                              (("1"
                                                                (flatten
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "ex_a"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "coordinator_enter_action"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "coordinator_enter_action"
                                                                   2)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten 1)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten 1)
                                            (("2"
                                              (expand "c_act_mono" 2)
                                              (("2"
                                                (lift-if 2)
                                                (("2"
                                                  (split 2)
                                                  (("1"
                                                    (flatten 1)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (flatten 1)
                                                    (("2"
                                                      (expand
                                                       "execute_patient_device"
                                                       2)
                                                      (("2"
                                                        (lift-if 2)
                                                        (("2"
                                                          (split 2)
                                                          (("1"
                                                            (flatten 1)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (flatten 1)
                                                            (("2"
                                                              (split 2)
                                                              (("1"
                                                                (flatten
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "ex_a"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "coordinator_enter_action"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "coordinator_enter_action"
                                                                   2)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("3" (expand "c_fun_act" 1)
                  (("3" (expand "tick_act_device" 1)
                    (("3" (expand "tick_act_patient" 1)
                      (("3" (expand "next_act_patient" 1)
                        (("3" (lift-if 1)
                          (("3" (expand "coord_act_mono" 1)
                            (("3" (lift-if 1)
                              (("3"
                                (split 1)
                                (("1"
                                  (flatten 1)
                                  (("1"
                                    (expand "c_act_mono" 1)
                                    (("1"
                                      (lift-if 1)
                                      (("1"
                                        (split 1)
                                        (("1"
                                          (flatten 1)
                                          (("1"
                                            (expand
                                             "execute_patient_device"
                                             1)
                                            (("1"
                                              (lift-if 1)
                                              (("1"
                                                (split 1)
                                                (("1"
                                                  (flatten 1)
                                                  (("1"
                                                    (expand "ex_a" 1)
                                                    (("1"
                                                      (expand
                                                       "coordinator_enter_action"
                                                       1)
                                                      (("1"
                                                        (lift-if 1)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten 1)
                                                  (("2"
                                                    (split 2)
                                                    (("1"
                                                      (flatten 1)
                                                      (("1"
                                                        (expand
                                                         "ex_a"
                                                         1)
                                                        (("1"
                                                          (expand
                                                           "coordinator_enter_action"
                                                           1)
                                                          (("1"
                                                            (lift-if 1)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten 1)
                                                      (("2"
                                                        (expand
                                                         "coordinator_enter_action"
                                                         2)
                                                        (("2"
                                                          (lift-if 2)
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (flatten 1) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten 1)
                                  (("2"
                                    (expand "c_act_mono" 2)
                                    (("2"
                                      (lift-if 2)
                                      (("2"
                                        (split 2)
                                        (("1" (flatten 1) nil nil)
                                         ("2"
                                          (flatten 1)
                                          (("2"
                                            (expand
                                             "execute_patient_device"
                                             2)
                                            (("2"
                                              (lift-if 2)
                                              (("2"
                                                (split 2)
                                                (("1"
                                                  (flatten 1)
                                                  nil
                                                  nil)
                                                 ("2"
                                                  (flatten 1)
                                                  (("2"
                                                    (split 2)
                                                    (("1"
                                                      (flatten 1)
                                                      (("1"
                                                        (expand
                                                         "ex_a"
                                                         1)
                                                        (("1"
                                                          (expand
                                                           "coordinator_enter_action"
                                                           1)
                                                          (("1"
                                                            (lift-if 1)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten 1)
                                                      (("2"
                                                        (expand
                                                         "coordinator_enter_action"
                                                         2)
                                                        (("2"
                                                          (lift-if 2)
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (next_act_patient const-decl "state" system_th nil)
    (coord_act_mono const-decl "state" system_th nil)
    (c_act_mono const-decl "state" system_th nil)
    (execute_patient_device const-decl "state" system_th nil)
    (ex_a const-decl "state" system_th nil)
    (coordinator_enter_action const-decl "state" system_th nil)
    (tick_act_patient const-decl "state" system_th nil)
    (dev_ex const-decl "p_state" patient_th nil)
    (tick_act_device const-decl "state" system_th nil))
   shostak))
 (lemma_fun_act_cpdispy 0
  (lemma_fun_act_cpdispy-1 nil 3897968755
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "lemma_fun_act_cpx"
           ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "panlemma1ip"
                   ("p" "p!1" "d" "d!1" "st"
                    "c_fun_act(a!1, d!1, p!1, st!1)"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1" (split 13)
                          (("1" (propax) nil nil)
                           ("2" (assert) nil nil)
                           ("3" (assert) nil nil)
                           ("4" (assert) nil nil)
                           ("5" (propax) nil nil)
                           ("6" (assert) nil nil)
                           ("7" (assert) nil nil)
                           ("8" (assert) nil nil))
                          nil))
                        nil)
                       ("2" (assert) nil nil) ("3" (assert) nil nil)
                       ("4" (split -28)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("5" (split -28)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("6" (split -28)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -28)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (assert) nil nil)
                       ("11" (assert) nil nil) ("12" (assert) nil nil)
                       ("13" (split -28)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("14" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -10)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -10)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (assert) nil nil)
               ("11" (propax) nil nil)
               ("12" (split -10)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("13" (split -10)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("14" (propax) nil nil)
               ("15" (split -10)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("16" (assert) nil nil) ("17" (propax) nil nil)
               ("18" (assert) nil nil) ("19" (assert) nil nil)
               ("20" (assert) nil nil) ("21" (propax) nil nil)
               ("22" (propax) nil nil) ("23" (propax) nil nil)
               ("24" (propax) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (lemma_fun_act_cpx formula-decl nil ICE_templates_rsce_th nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (panlemma1ip formula-decl nil ICE_templates_rsce_th nil))
   shostak))
 (lemma_fun_act_cpon 0
  (lemma_fun_act_cpon-1 nil 3863169229
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split -12)
          (("1" (flatten -1)
            (("1" (assert)
              (("1" (flatten 13)
                (("1" (expand "c_d_per_action" -17)
                  (("1" (flatten -17)
                    (("1" (expand "c_fun_act" -19)
                      (("1" (expand "coordinator_enter_action" -19)
                        (("1" (expand "coord_act_mono" -19)
                          (("1" (expand "c_act_mono" -19)
                            (("1" (replace -14 -19)
                              (("1"
                                (replace -15 -19)
                                (("1"
                                  (expand "execute_patient_device" -19)
                                  (("1"
                                    (replace -17 -19)
                                    (("1"
                                      (expand "ex_a" -19)
                                      (("1"
                                        (expand "tick_act_patient" -19)
                                        (("1"
                                          (expand
                                           "next_act_patient"
                                           -19)
                                          (("1"
                                            (expand "next_act_pm" -19)
                                            (("1"
                                              (expand
                                               "tick_act_device"
                                               -19)
                                              (("1"
                                                (expand "dev_ex" -19)
                                                (("1"
                                                  (expand
                                                   "next_act_pm"
                                                   -19)
                                                  (("1"
                                                    (lift-if -19)
                                                    (("1"
                                                      (split -19)
                                                      (("1"
                                                        (flatten -1)
                                                        (("1"
                                                          (lift-if -2)
                                                          (("1"
                                                            (split -2)
                                                            (("1"
                                                              (flatten
                                                               -1)
                                                              (("1"
                                                                (lift-if
                                                                 -2)
                                                                (("1"
                                                                  (split
                                                                   -2)
                                                                  (("1"
                                                                    (grind)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten
                                                               -1)
                                                              (("2"
                                                                (lift-if
                                                                 -1)
                                                                (("2"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (expand
                                                                     "empty_act_msg"
                                                                     -1)
                                                                    (("1"
                                                                      (flatten
                                                                       -1)
                                                                      (("1"
                                                                        (expand
                                                                         "execute_ip"
                                                                         -2)
                                                                        (("1"
                                                                          (expand
                                                                           "fun_ip"
                                                                           -2)
                                                                          (("1"
                                                                            (expand
                                                                             "update_panel"
                                                                             -2)
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten
                                                                     -1)
                                                                    (("2"
                                                                      (expand
                                                                       "act_send"
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "execute_ip"
                                                                         -1)
                                                                        (("2"
                                                                          (expand
                                                                           "update_panel"
                                                                           -1)
                                                                          (("2"
                                                                            (expand
                                                                             "act_send"
                                                                             -2)
                                                                            (("2"
                                                                              (expand
                                                                               "add_act_buff"
                                                                               -2)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten -1)
                                                        (("2"
                                                          (lift-if -1)
                                                          (("2"
                                                            (split -1)
                                                            (("1"
                                                              (flatten
                                                               -1)
                                                              (("1"
                                                                (lift-if
                                                                 -2)
                                                                (("1"
                                                                  (split
                                                                   -2)
                                                                  (("1"
                                                                    (flatten
                                                                     -1)
                                                                    (("1"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten -1)
            (("2" (assert)
              (("2" (flatten 13)
                (("2" (expand "c_d_per_action" -17)
                  (("2" (flatten -17)
                    (("2" (expand "c_fun_act" 13)
                      (("2" (expand "coordinator_enter_action" 13)
                        (("2" (grind) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((c_d_per_action const-decl "boolean" ICE_templates_rsce_th nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (coord_act_mono const-decl "state" system_th nil)
    (execute_patient_device const-decl "state" system_th nil)
    (ex_a const-decl "state" system_th nil)
    (next_act_patient const-decl "state" system_th nil)
    (tick_act_device const-decl "state" system_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (p_null const-decl "patient" patient_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (sub_act_buff const-decl "act_q_type" node_th nil)
    (execute_ip const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (fun_ip const-decl "d_state" infusion_pumps_th nil)
    (act_send const-decl "n_state" node_th nil)
    (add_act_buff const-decl "act_q_type" node_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (coord_node const-decl "node" node_th nil)
    (empty_act_msg const-decl "act_message_type" node_th nil)
    (no_node const-decl "node" node_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (<= const-decl "bool" reals nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (fun_pause const-decl "d_state" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (fun_infuse const-decl "d_state" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (fun_chooserate const-decl "d_state" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (fun_choosevtbi const-decl "d_state" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (fun_choosetime const-decl "d_state" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (fun_confirm const-decl "d_state" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (fun_bolus const-decl "d_state" infusion_pumps_th nil)
    (bolus_timeout const-decl "itimes" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (fun_decr const-decl "d_state" infusion_pumps_th nil)
    (/= const-decl "boolean" notequal nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (fun_incr const-decl "d_state" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (fun_power const-decl "d_state" infusion_pumps_th nil)
    (init_d_state const-decl "d_state" infusion_pumps_th nil)
    (init_ip_panel const-decl "panel" infusion_pumps_th nil)
    (nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (dev_ex const-decl "p_state" patient_th nil)
    (next_act_pm const-decl "n_state" node_th nil)
    (tick_act_patient const-decl "state" system_th nil)
    (c_act_mono const-decl "state" system_th nil)
    (coordinator_enter_action const-decl "state" system_th nil)
    (switch_vs const-decl "v_state" vital_signs_th nil)
    (alarm_vs const-decl "v_state" vital_signs_th nil)
    (execute_vs const-decl "v_state" vital_signs_th nil))
   shostak))
 (lemma_fun_act_cponx 0
  (lemma_fun_act_cponx-1 nil 3896158818
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split -10)
          (("1" (flatten -1)
            (("1" (assert)
              (("1" (split 13)
                (("1" (flatten 1)
                  (("1" (expand "c_d_per_actionx" -1)
                    (("1" (flatten -1)
                      (("1" (expand "c_fun_act" -7)
                        (("1" (expand "tick_act_device" -7)
                          (("1" (lift-if -7)
                            (("1" (split -7)
                              (("1"
                                (flatten -1)
                                (("1"
                                  (expand "dev_ex" -2)
                                  (("1"
                                    (lift-if -2)
                                    (("1"
                                      (split -2)
                                      (("1"
                                        (flatten -1)
                                        (("1"
                                          (expand
                                           "coordinator_enter_action"
                                           -2)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand
                                               "coord_act_mono"
                                               -2)
                                              (("1"
                                                (expand
                                                 "c_act_mono"
                                                 -2)
                                                (("1"
                                                  (replace -5 -2)
                                                  (("1"
                                                    (replace -6 -2)
                                                    (("1"
                                                      (expand
                                                       "execute_patient_device"
                                                       -2)
                                                      (("1"
                                                        (expand
                                                         "ex_a"
                                                         -2)
                                                        (("1"
                                                          (expand
                                                           "tick_act_patient"
                                                           -2)
                                                          (("1"
                                                            (expand
                                                             "next_act_patient"
                                                             -2)
                                                            (("1"
                                                              (expand
                                                               "next_act_pm"
                                                               -2)
                                                              (("1"
                                                                (lift-if
                                                                 -2)
                                                                (("1"
                                                                  (split
                                                                   -2)
                                                                  (("1"
                                                                    (flatten
                                                                     -1)
                                                                    (("1"
                                                                      (lift-if
                                                                       -2)
                                                                      (("1"
                                                                        (split
                                                                         -2)
                                                                        (("1"
                                                                          (flatten
                                                                           -1)
                                                                          (("1"
                                                                            (lift-if
                                                                             -2)
                                                                            (("1"
                                                                              (split
                                                                               -2)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (flatten
                                                                                 -1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten
                                                                           -1)
                                                                          (("2"
                                                                            (lift-if
                                                                             -1)
                                                                            (("2"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (flatten
                                                                                 -1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten
                                                                     -1)
                                                                    (("2"
                                                                      (lift-if
                                                                       -1)
                                                                      (("2"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (flatten
                                                                           -1)
                                                                          (("1"
                                                                            (lift-if
                                                                             -2)
                                                                            (("1"
                                                                              (split
                                                                               -2)
                                                                              (("1"
                                                                                (flatten
                                                                                 -1)
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten
                                                                                 -1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten
                                                                           -1)
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten -1)
                                (("2"
                                  (expand "coordinator_enter_action" 1)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (expand "coord_act_mono" 1)
                                      (("2"
                                        (expand "c_act_mono" 1)
                                        (("2"
                                          (replace -3 1)
                                          (("2"
                                            (replace -4 1)
                                            (("2"
                                              (expand
                                               "execute_patient_device"
                                               1)
                                              (("2"
                                                (expand "ex_a" 1)
                                                (("2"
                                                  (expand
                                                   "tick_act_patient"
                                                   1)
                                                  (("2"
                                                    (expand
                                                     "next_act_patient"
                                                     1)
                                                    (("2"
                                                      (lift-if 1)
                                                      (("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "c_p_per_actionx" -1)
                    (("2" (flatten -1)
                      (("2" (expand "c_fun_act" -7)
                        (("2" (expand "coordinator_enter_action" -7)
                          (("2" (assert)
                            (("2" (expand "coord_act_mono" -7)
                              (("2"
                                (expand "c_act_mono" -7)
                                (("2"
                                  (replace -2 -7)
                                  (("2"
                                    (replace -3 -7)
                                    (("2"
                                      (expand
                                       "execute_patient_device"
                                       -7)
                                      (("2"
                                        (expand "ex_a" -7)
                                        (("2"
                                          (expand
                                           "tick_act_patient"
                                           -7)
                                          (("2"
                                            (expand
                                             "next_act_patient"
                                             -7)
                                            (("2"
                                              (lift-if -7)
                                              (("2"
                                                (split -7)
                                                (("1"
                                                  (flatten -1)
                                                  (("1"
                                                    (expand
                                                     "tick_act_device"
                                                     -2)
                                                    (("1"
                                                      (expand
                                                       "next_act_pm"
                                                       -2)
                                                      (("1"
                                                        (lift-if -2)
                                                        (("1"
                                                          (split -2)
                                                          (("1"
                                                            (flatten
                                                             -1)
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten -1)
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten -1)
            (("2" (assert)
              (("2" (split 13)
                (("1" (flatten 1)
                  (("1" (expand "c_d_per_actionx" -1)
                    (("1" (flatten -1)
                      (("1" (expand "c_fun_act" 1)
                        (("1" (expand "coordinator_enter_action" 1)
                          (("1" (assert)
                            (("1" (expand "coord_act_mono" 1)
                              (("1"
                                (expand "c_act_mono" 1)
                                (("1"
                                  (replace -2 1)
                                  (("1"
                                    (replace -3 1)
                                    (("1"
                                      (expand
                                       "execute_patient_device"
                                       1)
                                      (("1"
                                        (expand "ex_a" 1)
                                        (("1"
                                          (expand "tick_act_patient" 1)
                                          (("1"
                                            (expand
                                             "next_act_patient"
                                             1)
                                            (("1"
                                              (lift-if 1)
                                              (("1"
                                                (split 1)
                                                (("1"
                                                  (flatten 1)
                                                  (("1"
                                                    (expand
                                                     "tick_act_device"
                                                     1)
                                                    (("1"
                                                      (expand
                                                       "next_act_pm"
                                                       1)
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten 1)
                  (("2" (expand "c_p_per_actionx" -1)
                    (("2" (flatten -1)
                      (("2" (expand "c_fun_act" 1)
                        (("2" (expand "coordinator_enter_action" 1)
                          (("2" (assert)
                            (("2" (expand "coord_act_mono" 1)
                              (("2"
                                (expand "c_act_mono" 1)
                                (("2"
                                  (replace -2 1)
                                  (("2"
                                    (replace -3 1)
                                    (("2"
                                      (expand
                                       "execute_patient_device"
                                       1)
                                      (("2"
                                        (expand "ex_a" 1)
                                        (("2"
                                          (expand "tick_act_patient" 1)
                                          (("2"
                                            (expand
                                             "next_act_patient"
                                             1)
                                            (("2"
                                              (lift-if 1)
                                              (("2"
                                                (split 1)
                                                (("1"
                                                  (flatten 1)
                                                  (("1"
                                                    (expand
                                                     "tick_act_device"
                                                     1)
                                                    (("1"
                                                      (expand
                                                       "next_act_pm"
                                                       1)
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten 1)
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (c_p_per_actionx const-decl "boolean" ICE_templates_rsce_th nil)
    (tick_act_device const-decl "state" system_th nil)
    (dev_ex const-decl "p_state" patient_th nil)
    (coordinator_enter_action const-decl "state" system_th nil)
    (coord_act_mono const-decl "state" system_th nil)
    (execute_patient_device const-decl "state" system_th nil)
    (tick_act_patient const-decl "state" system_th nil)
    (next_act_pm const-decl "n_state" node_th nil)
    (sub_act_buff const-decl "act_q_type" node_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (execute_ip const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (fun_ip const-decl "d_state" infusion_pumps_th nil)
    (act_send const-decl "n_state" node_th nil)
    (add_act_buff const-decl "act_q_type" node_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (coord_node const-decl "node" node_th nil)
    (empty_act_msg const-decl "act_message_type" node_th nil)
    (no_node const-decl "node" node_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (<= const-decl "bool" reals nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (nil_device const-decl "device" devices_th nil)
    (init_ip_panel const-decl "panel" infusion_pumps_th nil)
    (init_d_state const-decl "d_state" infusion_pumps_th nil)
    (fun_power const-decl "d_state" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (fun_incr const-decl "d_state" infusion_pumps_th nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (/= const-decl "boolean" notequal nil)
    (fun_decr const-decl "d_state" infusion_pumps_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (bolus_timeout const-decl "itimes" infusion_pumps_th nil)
    (fun_bolus const-decl "d_state" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (fun_confirm const-decl "d_state" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (fun_choosetime const-decl "d_state" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (fun_choosevtbi const-decl "d_state" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (fun_chooserate const-decl "d_state" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (fun_infuse const-decl "d_state" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (fun_pause const-decl "d_state" infusion_pumps_th nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (next_act_patient const-decl "state" system_th nil)
    (ex_a const-decl "state" system_th nil)
    (c_act_mono const-decl "state" system_th nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (c_d_per_actionx const-decl "boolean" ICE_templates_rsce_th nil)
    (execute_vs const-decl "v_state" vital_signs_th nil)
    (alarm_vs const-decl "v_state" vital_signs_th nil)
    (switch_vs const-decl "v_state" vital_signs_th nil))
   shostak))
 (lemma2xcfnnqq 0
  (lemma2xcfnnqq-1 nil 3896948027
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "lemma_fun_act_cpx"
           ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "lemma_fun_act_cponx"
                   ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1"
                          (lemma "lemma2xnqq"
                           ("d" "d!1" "p" "p!1" "st"
                            "c_fun_act(a!1, d!1, p!1, st!1)"))
                          (("1" (beta -1)
                            (("1" (split -1)
                              (("1"
                                (flatten -1)
                                (("1"
                                  (split -39)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil)
                               ("3" (assert) nil nil)
                               ("4"
                                (split -31)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("5"
                                (split -31)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("6"
                                (split -31)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("7" (assert) nil nil)
                               ("8"
                                (split -31)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("9" (assert) nil nil)
                               ("10" (assert) nil nil)
                               ("11" (assert) nil nil)
                               ("12" (assert) nil nil)
                               ("13"
                                (split -31)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("14"
                                (split -31)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("15"
                                (expand "c_fun_act" 1)
                                (("15" (propax) nil nil))
                                nil)
                               ("16"
                                (expand "c_fun_act" 1)
                                (("16" (propax) nil nil))
                                nil)
                               ("17"
                                (expand "c_fun_act" 1)
                                (("17" (assert) nil nil))
                                nil)
                               ("18"
                                (replace -7 1)
                                (("18"
                                  (expand "c_fun_act" 1)
                                  (("18" (assert) nil nil))
                                  nil))
                                nil)
                               ("19"
                                (replace -7 1)
                                (("19"
                                  (expand "c_fun_act" 1)
                                  (("19" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil) ("3" (propax) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (split -27)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -27)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (assert) nil nil)
                       ("11" (propax) nil nil)
                       ("12" (split -27)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("13" (split -27)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("14" (propax) nil nil)
                       ("15" (split -27)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("16" (assert) nil nil) ("17" (propax) nil nil)
                       ("18" (assert) nil nil) ("19" (assert) nil nil)
                       ("20" (assert) nil nil) ("21" (propax) nil nil)
                       ("22" (propax) nil nil)
                       ("23" (split -27)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("24" (propax) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (assert) nil nil)
               ("11" (propax) nil nil)
               ("12" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("13" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("14" (propax) nil nil)
               ("15" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("16" (assert) nil nil) ("17" (propax) nil nil)
               ("18" (assert) nil nil) ("19" (assert) nil nil)
               ("20" (assert) nil nil) ("21" (propax) nil nil)
               ("22" (propax) nil nil)
               ("23" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("24" (propax) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (lemma_fun_act_cpx formula-decl nil ICE_templates_rsce_th nil)
    (lemma_fun_act_cponx formula-decl nil ICE_templates_rsce_th nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (lemma2xnqq formula-decl nil ICE_templates_rsce_th nil))
   shostak))
 (lemma_reflect_patient_device_consistent 0
  (lemma_reflect_patient_device_consistent-1 nil 3866710656
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (expand "consistent_patient_d" 8)
          (("" (lemma "panlemma1np" ("p" "p!1" "d" "d!1" "st" "st!1"))
            (("" (beta -1)
              (("" (split -1)
                (("1" (flatten -1)
                  (("1"
                    (lemma "panlemma1npexec"
                     ("p" "p!1" "d" "d!1" "st" "st!1"))
                    (("1" (beta -1)
                      (("1" (split -1)
                        (("1" (flatten -1)
                          (("1"
                            (lemma "lemma2xnpp"
                             ("p" "p!1" "d" "d!1" "st" "st!1"))
                            (("1" (beta -1)
                              (("1"
                                (split -1)
                                (("1"
                                  (flatten -1)
                                  (("1"
                                    (lemma
                                     "panlemma1ip"
                                     ("p" "p!1" "d" "d!1" "st" "st!1"))
                                    (("1"
                                      (beta -1)
                                      (("1"
                                        (split -1)
                                        (("1"
                                          (flatten -1)
                                          (("1"
                                            (split -48)
                                            (("1"
                                              (flatten -1)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand
                                                   "reflect_device_to_patient"
                                                   9)
                                                  (("1"
                                                    (expand
                                                     "tick_pan_patient"
                                                     9)
                                                    (("1"
                                                      (replace -27 9)
                                                      (("1"
                                                        (replace -21 9)
                                                        (("1"
                                                          (expand
                                                           "empty_pan_msg"
                                                           9)
                                                          (("1"
                                                            (replace
                                                             -33
                                                             9)
                                                            (("1"
                                                              (replace
                                                               -48
                                                               9)
                                                              (("1"
                                                                (beta
                                                                 9)
                                                                (("1"
                                                                  (expand
                                                                   "update_t_panel"
                                                                   9)
                                                                  (("1"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten -1)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (expand
                                                   "reflect_device_to_patient"
                                                   8)
                                                  (("2"
                                                    (expand
                                                     "tick_pan_patient"
                                                     8)
                                                    (("2"
                                                      (replace -28 8)
                                                      (("2"
                                                        (replace -23 8)
                                                        (("2"
                                                          (expand
                                                           "empty_pan_msg"
                                                           8)
                                                          (("2"
                                                            (replace
                                                             -34
                                                             8)
                                                            (("2"
                                                              (replace
                                                               -49
                                                               8)
                                                              (("2"
                                                                (beta
                                                                 8)
                                                                (("2"
                                                                  (expand
                                                                   "update_t_panel"
                                                                   8)
                                                                  (("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (propax) nil nil)
                                         ("3" (propax) nil nil)
                                         ("4" (propax) nil nil)
                                         ("5" (propax) nil nil)
                                         ("6"
                                          (split -30)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("7" (assert) nil nil)
                                         ("8"
                                          (split -30)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("9" (assert) nil nil)
                                         ("10" (propax) nil nil)
                                         ("11" (assert) nil nil)
                                         ("12" (propax) nil nil)
                                         ("13" (propax) nil nil)
                                         ("14" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (propax) nil nil)
                                 ("3" (propax) nil nil)
                                 ("4" (propax) nil nil)
                                 ("5" (propax) nil nil)
                                 ("6"
                                  (split -28)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("7" (assert) nil nil)
                                 ("8"
                                  (split -28)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("9" (assert) nil nil)
                                 ("10" (assert) nil nil)
                                 ("11" (propax) nil nil)
                                 ("12" (assert) nil nil)
                                 ("13" (propax) nil nil)
                                 ("14" (propax) nil nil)
                                 ("15"
                                  (split -28)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("16" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (propax) nil nil) ("3" (propax) nil nil)
                         ("4" (propax) nil nil) ("5" (propax) nil nil)
                         ("6" (split -24)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("7" (assert) nil nil)
                         ("8" (split -24)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("9" (assert) nil nil) ("10" (propax) nil nil)
                         ("11" (assert) nil nil)
                         ("12" (propax) nil nil)
                         ("13" (propax) nil nil)
                         ("14" (split -24)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (propax) nil nil) ("3" (propax) nil nil)
                 ("4" (propax) nil nil) ("5" (propax) nil nil)
                 ("6" (split -9)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("7" (assert) nil nil)
                 ("8" (split -9)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("9" (assert) nil nil) ("10" (propax) nil nil)
                 ("11" (assert) nil nil) ("12" (propax) nil nil)
                 ("13" (propax) nil nil) ("14" (assert) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((consistent_patient_d const-decl "boolean" ICE_templates_rsce_th
     nil)
    (reflect_device_to_patient const-decl "state" ICE_templates_rsce_th
     nil)
    (empty_pan_msg const-decl "pan_message_type" node_th nil)
    (update_t_panel const-decl "patient_db_type" system_th nil)
    (tick_pan_patient const-decl "state" system_th nil)
    (panlemma1ip formula-decl nil ICE_templates_rsce_th nil)
    (lemma2xnpp formula-decl nil ICE_templates_rsce_th nil)
    (panlemma1npexec formula-decl nil ICE_templates_rsce_th nil)
    (panlemma1np formula-decl nil ICE_templates_rsce_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (device type-eq-decl nil devices_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (state type-eq-decl nil system_th nil))
   shostak))
 (lemma_reflect_device_p 0
  (lemma_reflect_device_p-1 nil 3867392232
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split)
          (("1" (grind) nil nil)
           ("2" (expand "reflect_device_to_patient" 1)
            (("2" (expand "tick_pan_patient" 1)
              (("2" (lift-if 1)
                (("2" (expand "tick_pan_device" 1)
                  (("2" (lift-if 1) (("2" (propax) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil)
           ("3" (expand "reflect_device_to_patient" 1)
            (("3" (expand "tick_pan_patient" 1)
              (("3" (lift-if 1)
                (("3" (expand "tick_pan_device" 1)
                  (("3" (lift-if 1) (("3" (propax) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil)
           ("4" (grind) nil nil) ("5" (grind) nil nil)
           ("6" (grind) nil nil) ("7" (grind) nil nil)
           ("8" (grind) nil nil) ("9" (grind) nil nil)
           ("10" (grind) nil nil) ("11" (grind) nil nil)
           ("12" (grind) nil nil) ("13" (grind) nil nil)
           ("14" (grind) nil nil) ("15" (grind) nil nil)
           ("16" (grind) nil nil) ("17" (grind) nil nil))
          nil))
        nil))
      nil))
    nil)
   ((nil_device const-decl "device" devices_th nil)
    (dlimit const-decl "nat" coord_t_and_c_th nil)
    (p_null const-decl "patient" patient_th nil)
    (plimit const-decl "nat" coord_t_and_c_th nil)
    (reflect_device_to_patient const-decl "state" ICE_templates_rsce_th
     nil)
    (tick_pan_patient const-decl "state" system_th nil)
    (update_t_panel const-decl "patient_db_type" system_th nil)
    (filter_panel const-decl "panel" coord_t_and_c_th nil)
    (emptyset const-decl "set" sets nil)
    (empty_num_parameter const-decl "num_parameter" coord_t_and_c_th
     nil)
    (empty_enum_parameter const-decl "enum_parameter" coord_t_and_c_th
     nil)
    (coord_node const-decl "node" node_th nil)
    (next_pan_pm const-decl "n_state" node_th nil)
    (sub_pan_buff const-decl "pan_q_type" node_th nil)
    (empty_pan_msg const-decl "pan_message_type" node_th nil)
    (empty_panel const-decl "panel" coord_t_and_c_th nil)
    (no_node const-decl "node" node_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (tick_pan_device const-decl "state" system_th nil)
    (available_act const-decl "panel" vital_signs_th nil)
    (tick_vs const-decl "v_state" vital_signs_th nil)
    (upd_pan const-decl "panel" vital_signs_th nil)
    (per_tick_vs const-decl "boolean" vital_signs_th nil)
    (pan_send const-decl "n_state" node_th nil)
    (add_pan_buff const-decl "pan_q_type" node_th nil)
    (available_act const-decl "panel" infusion_pumps_th nil)
    (per_pause const-decl "boolean" infusion_pumps_th nil)
    (per_infuse const-decl "boolean" infusion_pumps_th nil)
    (per_chooserate const-decl "boolean" infusion_pumps_th nil)
    (per_choosevtbi const-decl "boolean" infusion_pumps_th nil)
    (per_choosetime const-decl "boolean" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (tick const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (no_num const-decl "nonneg_real" coord_t_and_c_th nil)
    (null_value const-decl "posnat" coord_t_and_c_th nil)
    (mindex const-decl "nat" coord_t_and_c_th nil)
    (num_par const-decl "boolean" coord_t_and_c_th nil)
    (bolus_rate const-decl "irates" infusion_pumps_th nil)
    (timeout const-decl "itimes" infusion_pumps_th nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (<= const-decl "bool" reals nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (/= const-decl "boolean" notequal nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   shostak))
 (lemma_reflect_device_p_ds 0
  (lemma_reflect_device_p_ds-1 nil 3867470742
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (lemma "panlemma1np" ("p" "p!1" "d" "d!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "lemma2xnpp"
                   ("p" "p!1" "d" "d!1" "st" "st!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1" (split 9)
                          (("1" (flatten 1)
                            (("1" (assert)
                              (("1"
                                (expand "reflect_device_to_patient" 1)
                                (("1"
                                  (expand "tick_pan_patient" 1)
                                  (("1"
                                    (replace -4 1)
                                    (("1"
                                      (replace -2 1)
                                      (("1"
                                        (expand "empty_pan_msg" 1)
                                        (("1"
                                          (replace -10 1)
                                          (("1"
                                            (replace -25 1)
                                            (("1"
                                              (beta 1)
                                              (("1"
                                                (expand
                                                 "update_t_panel"
                                                 1)
                                                (("1"
                                                  (expand
                                                   "tick_pan_device"
                                                   1)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (flatten 1)
                            (("2" (assert)
                              (("2"
                                (expand "reflect_device_to_patient" 1)
                                (("2"
                                  (expand "tick_pan_patient" 1)
                                  (("2"
                                    (replace -4 1)
                                    (("2"
                                      (expand "empty_pan_msg" 1)
                                      (("2"
                                        (replace -3 1)
                                        (("2"
                                          (beta 1)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (replace -10 1)
                                              (("2"
                                                (replace -25 1)
                                                (("2"
                                                  (beta 1)
                                                  (("2"
                                                    (expand
                                                     "update_t_panel"
                                                     1)
                                                    (("2"
                                                      (expand
                                                       "tick_pan_device"
                                                       1)
                                                      (("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("3" (expand "reflect_device_to_patient" 1)
                            (("3" (expand "tick_pan_patient" 1)
                              (("3"
                                (replace -3 1)
                                (("3"
                                  (assert)
                                  (("3"
                                    (expand "tick_pan_device" 1)
                                    (("3"
                                      (lift-if 1)
                                      (("3" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil) ("3" (propax) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (lift-if 1)
                        (("6" (split 1)
                          (("1" (flatten 1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten 1) (("2" (assert) nil nil))
                            nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (lift-if 4)
                        (("8" (split 4)
                          (("1" (flatten 1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten 1) (("2" (assert) nil nil))
                            nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (assert) nil nil)
                       ("11" (propax) nil nil) ("12" (assert) nil nil)
                       ("13" (propax) nil nil) ("14" (propax) nil nil)
                       ("15" (flatten 1) (("15" (assert) nil nil)) nil)
                       ("16" (propax) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (lift-if 2)
                (("6" (split 2)
                  (("1" (flatten 1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten 1) (("2" (assert) nil nil)) nil))
                  nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (lift-if 4)
                (("8" (split 4)
                  (("1" (flatten 1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten 1) (("2" (assert) nil nil)) nil))
                  nil))
                nil)
               ("9" (assert) nil nil) ("10" (propax) nil nil)
               ("11" (assert) nil nil) ("12" (propax) nil nil)
               ("13" (propax) nil nil) ("14" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (panlemma1np formula-decl nil ICE_templates_rsce_th nil)
    (lemma2xnpp formula-decl nil ICE_templates_rsce_th nil)
    (tick_pan_patient const-decl "state" system_th nil)
    (tick_pan_device const-decl "state" system_th nil)
    (update_t_panel const-decl "patient_db_type" system_th nil)
    (empty_pan_msg const-decl "pan_message_type" node_th nil)
    (reflect_device_to_patient const-decl "state" ICE_templates_rsce_th
     nil))
   shostak))
 (lemma_reflect_device_cnx 0
  (lemma_reflect_device_cnx-1 nil 3864109364
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (lemma "panlemma1np" ("p" "p!1" "d" "d!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "panlemma1ip"
                   ("p" "p!1" "d" "d!1" "st" "st!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1"
                          (lemma "panlemma1ipx"
                           ("p" "p!1" "d" "d!1" "st" "st!1"))
                          (("1" (beta -1)
                            (("1" (split -1)
                              (("1"
                                (flatten -1)
                                (("1"
                                  (lemma
                                   "panlemma1ipy"
                                   ("p" "p!1" "d" "d!1" "st" "st!1"))
                                  (("1"
                                    (beta -1)
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (flatten -1)
                                        (("1"
                                          (split 13)
                                          (("1"
                                            (expand
                                             "reflect_device_to_coordinator"
                                             1)
                                            (("1"
                                              (replace -57 1)
                                              (("1"
                                                (replace -56 1)
                                                (("1"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand
                                             "reflect_device_to_coordinator"
                                             1)
                                            (("2"
                                              (replace -54 1)
                                              (("2"
                                                (replace -53 1)
                                                (("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (expand
                                             "reflect_device_to_coordinator"
                                             1)
                                            (("3"
                                              (replace -51 1)
                                              (("3"
                                                (replace -50 1)
                                                (("3"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("4"
                                            (expand
                                             "reflect_device_to_coordinator"
                                             1)
                                            (("4"
                                              (replace -45 1)
                                              (("4"
                                                (replace -44 1)
                                                (("4"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("5"
                                            (expand
                                             "reflect_device_to_coordinator"
                                             1)
                                            (("5"
                                              (replace -33 1)
                                              (("5"
                                                (replace -32 1)
                                                (("5"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("6"
                                            (expand
                                             "reflect_device_to_coordinator"
                                             1)
                                            (("6"
                                              (replace -36 1)
                                              (("6"
                                                (replace -35 1)
                                                (("6"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("7"
                                            (expand
                                             "reflect_device_to_coordinator"
                                             1)
                                            (("7"
                                              (replace -39 1)
                                              (("7"
                                                (replace -38 1)
                                                (("7"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("8"
                                            (expand
                                             "reflect_device_to_coordinator"
                                             1)
                                            (("8"
                                              (replace -42 1)
                                              (("8"
                                                (replace -41 1)
                                                (("8"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("9"
                                            (expand
                                             "reflect_device_to_coordinator"
                                             1)
                                            (("9"
                                              (replace -15 1)
                                              (("9"
                                                (replace -14 1)
                                                (("9"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("10"
                                            (split -65)
                                            (("1"
                                              (flatten -1)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand
                                                   "reflect_device_to_coordinator"
                                                   1)
                                                  (("1"
                                                    (replace -20 1)
                                                    (("1"
                                                      (replace -19 1)
                                                      (("1"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten -1)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("11"
                                            (split -65)
                                            (("1"
                                              (flatten -1)
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (flatten -1)
                                              (("2"
                                                (expand
                                                 "reflect_device_to_coordinator"
                                                 1)
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("12"
                                            (expand
                                             "reflect_device_to_coordinator"
                                             1)
                                            (("12"
                                              (replace -48 1)
                                              (("12"
                                                (replace -47 1)
                                                (("12"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("13"
                                            (split -65)
                                            (("1"
                                              (flatten -1)
                                              (("1"
                                                (replace -2 1)
                                                (("1"
                                                  (replace -2 -29)
                                                  (("1"
                                                    (expand
                                                     "reflect_device_to_coordinator"
                                                     1)
                                                    (("1"
                                                      (replace -29 1)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         -28)
                                                        (("1"
                                                          (replace
                                                           -28
                                                           1)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten -1)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("14"
                                            (split -65)
                                            (("1"
                                              (flatten -1)
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (assert)
                                              (("2"
                                                (flatten -1)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (expand
                                                     "reflect_device_to_coordinator"
                                                     1)
                                                    (("2"
                                                      (replace -32 1)
                                                      (("2"
                                                        (replace -31 1)
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("15"
                                            (expand
                                             "reflect_device_to_coordinator"
                                             1)
                                            (("15"
                                              (replace -3 1)
                                              (("15"
                                                (replace -2 1)
                                                (("15"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("16"
                                            (expand
                                             "reflect_device_to_coordinator"
                                             1)
                                            (("16"
                                              (replace -24 1)
                                              (("16"
                                                (replace -23 1)
                                                (("16"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("17"
                                            (expand
                                             "reflect_device_to_coordinator"
                                             1)
                                            (("17"
                                              (replace -6 1)
                                              (("17"
                                                (replace -5 1)
                                                (("17"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("18"
                                            (expand
                                             "reflect_device_to_coordinator"
                                             1)
                                            (("18"
                                              (replace -9 1)
                                              (("18"
                                                (replace -8 1)
                                                (("18"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("19"
                                            (expand
                                             "reflect_device_to_coordinator"
                                             1)
                                            (("19"
                                              (replace -12 1)
                                              (("19"
                                                (replace -11 1)
                                                (("19"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (propax) nil nil)
                                       ("3" (propax) nil nil)
                                       ("4" (propax) nil nil)
                                       ("5" (propax) nil nil)
                                       ("6"
                                        (split -53)
                                        (("1"
                                          (flatten -1)
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (flatten -1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("7" (assert) nil nil)
                                       ("8"
                                        (split -53)
                                        (("1"
                                          (flatten -1)
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (flatten -1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("9" (assert) nil nil)
                                       ("10" (assert) nil nil)
                                       ("11" (assert) nil nil)
                                       ("12" (propax) nil nil)
                                       ("13" (assert) nil nil)
                                       ("14" (propax) nil nil)
                                       ("15" (propax) nil nil)
                                       ("16" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (propax) nil nil)
                               ("3" (propax) nil nil)
                               ("4" (propax) nil nil)
                               ("5" (propax) nil nil)
                               ("6"
                                (split -41)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("7" (assert) nil nil)
                               ("8"
                                (split -41)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("9" (assert) nil nil)
                               ("10" (propax) nil nil)
                               ("11" (assert) nil nil)
                               ("12" (propax) nil nil)
                               ("13" (propax) nil nil)
                               ("14" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil) ("3" (propax) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (split -23)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -23)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (propax) nil nil)
                       ("11" (assert) nil nil) ("12" (propax) nil nil)
                       ("13" (propax) nil nil) ("14" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (propax) nil nil)
               ("11" (assert) nil nil) ("12" (propax) nil nil)
               ("13" (propax) nil nil) ("14" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (panlemma1np formula-decl nil ICE_templates_rsce_th nil)
    (panlemma1ip formula-decl nil ICE_templates_rsce_th nil)
    (panlemma1ipx formula-decl nil ICE_templates_rsce_th nil)
    (panlemma1ipy formula-decl nil ICE_templates_rsce_th nil)
    (reflect_device_to_coordinator const-decl "state"
     ICE_templates_rsce_th nil))
   shostak))
 (lemma_reflect_device_c_ds 0
  (lemma_reflect_device_c_ds-1 nil 3860044975
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (lemma "panlemma1np" ("p" "p!1" "d" "d!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "panlemma1npx"
                   ("p" "p!1" "d" "d!1" "st" "st!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1"
                          (lemma "lemma2xnqq"
                           ("p" "p!1" "d" "d!1" "st" "st!1"))
                          (("1" (beta -1)
                            (("1" (split -1)
                              (("1"
                                (flatten -1)
                                (("1"
                                  (split -33)
                                  (("1"
                                    (flatten -1)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (split 12)
                                        (("1"
                                          (expand
                                           "reflect_device_to_coordinator"
                                           1)
                                          (("1"
                                            (expand
                                             "tick_pan_coordinator"
                                             1)
                                            (("1"
                                              (expand
                                               "tick_pan_patient"
                                               1)
                                              (("1"
                                                (replace -13 1)
                                                (("1"
                                                  (replace -3 1)
                                                  (("1"
                                                    (beta 1)
                                                    (("1"
                                                      (expand
                                                       "empty_pan_msg"
                                                       1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (replace
                                                           -19
                                                           1)
                                                          (("1"
                                                            (replace
                                                             -34
                                                             1)
                                                            (("1"
                                                              (beta 1)
                                                              (("1"
                                                                (expand
                                                                 "update_t_panel"
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "tick_pan_device"
                                                                   1)
                                                                  (("1"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand
                                           "reflect_device_to_coordinator"
                                           1)
                                          (("2"
                                            (expand
                                             "tick_pan_coordinator"
                                             1)
                                            (("2"
                                              (replace -23 1)
                                              (("2"
                                                (replace -22 1)
                                                (("2"
                                                  (replace -7 1)
                                                  (("2"
                                                    (beta 1)
                                                    (("2"
                                                      (replace -33 1)
                                                      (("2"
                                                        (replace -20 1)
                                                        (("2"
                                                          (replace
                                                           -19
                                                           1)
                                                          (("2"
                                                            (replace
                                                             -34
                                                             1)
                                                            (("2"
                                                              (beta 1)
                                                              (("2"
                                                                (expand
                                                                 "update_p_panel"
                                                                 1)
                                                                (("2"
                                                                  (replace
                                                                   -12
                                                                   1)
                                                                  (("2"
                                                                    (replace
                                                                     -11
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "filter_panel"
                                                                       1)
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("3"
                                          (expand
                                           "reflect_device_to_coordinator"
                                           1)
                                          (("3"
                                            (expand
                                             "tick_pan_coordinator"
                                             1)
                                            (("3"
                                              (replace -23 1)
                                              (("3"
                                                (replace -22 1)
                                                (("3"
                                                  (replace -7 1)
                                                  (("3"
                                                    (beta 1)
                                                    (("3"
                                                      (replace -33 1)
                                                      (("3"
                                                        (replace -20 1)
                                                        (("3"
                                                          (replace
                                                           -19
                                                           1)
                                                          (("3"
                                                            (replace
                                                             -34
                                                             1)
                                                            (("3"
                                                              (beta 1)
                                                              (("3"
                                                                (replace
                                                                 -12
                                                                 1)
                                                                (("3"
                                                                  (replace
                                                                   -11
                                                                   1)
                                                                  (("3"
                                                                    (expand
                                                                     "update_p_panel"
                                                                     1)
                                                                    (("3"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (expand
                                         "reflect_device_to_coordinator"
                                         11)
                                        (("2"
                                          (expand
                                           "tick_pan_coordinator"
                                           11)
                                          (("2"
                                            (split 11)
                                            (("1"
                                              (expand
                                               "tick_pan_patient"
                                               1)
                                              (("1"
                                                (replace -14 1)
                                                (("1"
                                                  (replace -5 1)
                                                  (("1"
                                                    (beta 1)
                                                    (("1"
                                                      (expand
                                                       "empty_pan_msg"
                                                       1)
                                                      (("1"
                                                        (replace -20 1)
                                                        (("1"
                                                          (replace
                                                           -35
                                                           1)
                                                          (("1"
                                                            (beta 1)
                                                            (("1"
                                                              (expand
                                                               "update_t_panel"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "tick_pan_device"
                                                                 1)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (replace -24 1)
                                              (("2"
                                                (replace -23 1)
                                                (("2"
                                                  (replace -9 1)
                                                  (("2"
                                                    (beta 1)
                                                    (("2"
                                                      (replace -34 1)
                                                      (("2"
                                                        (replace -21 1)
                                                        (("2"
                                                          (replace
                                                           -20
                                                           1)
                                                          (("2"
                                                            (replace
                                                             -35
                                                             1)
                                                            (("2"
                                                              (beta 1)
                                                              (("2"
                                                                (replace
                                                                 -13
                                                                 1)
                                                                (("2"
                                                                  (replace
                                                                   -12
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "update_p_panel"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "filter_panel"
                                                                       1)
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (replace -24 1)
                                              (("3"
                                                (replace -23 1)
                                                (("3"
                                                  (replace -9 1)
                                                  (("3"
                                                    (beta 1)
                                                    (("3"
                                                      (replace -34 1)
                                                      (("3"
                                                        (replace -21 1)
                                                        (("3"
                                                          (replace
                                                           -20
                                                           1)
                                                          (("3"
                                                            (replace
                                                             -35
                                                             1)
                                                            (("3"
                                                              (assert)
                                                              (("3"
                                                                (replace
                                                                 -13
                                                                 1)
                                                                (("3"
                                                                  (replace
                                                                   -12
                                                                   1)
                                                                  (("3"
                                                                    (expand
                                                                     "update_p_panel"
                                                                     1)
                                                                    (("3"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (propax) nil nil)
                               ("3" (propax) nil nil)
                               ("4" (propax) nil nil)
                               ("5" (propax) nil nil)
                               ("6"
                                (split -25)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("7" (assert) nil nil)
                               ("8"
                                (split -25)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("9" (assert) nil nil)
                               ("10" (propax) nil nil)
                               ("11" (assert) nil nil)
                               ("12" (propax) nil nil)
                               ("13" (propax) nil nil)
                               ("14" (propax) nil nil)
                               ("15" (assert) nil nil)
                               ("16" (assert) nil nil)
                               ("17" (propax) nil nil)
                               ("18" (propax) nil nil)
                               ("19" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil) ("3" (propax) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (split -23)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -23)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (propax) nil nil)
                       ("11" (assert) nil nil) ("12" (propax) nil nil)
                       ("13" (propax) nil nil)
                       ("14" (split -23)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (propax) nil nil)
               ("11" (assert) nil nil) ("12" (propax) nil nil)
               ("13" (propax) nil nil) ("14" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (panlemma1np formula-decl nil ICE_templates_rsce_th nil)
    (panlemma1npx formula-decl nil ICE_templates_rsce_th nil)
    (lemma2xnqq formula-decl nil ICE_templates_rsce_th nil)
    (filter_panel const-decl "panel" coord_t_and_c_th nil)
    (update_p_panel const-decl "i_state" coordinator_th nil)
    (reflect_device_to_coordinator const-decl "state"
     ICE_templates_rsce_th nil)
    (tick_pan_patient const-decl "state" system_th nil)
    (empty_pan_msg const-decl "pan_message_type" node_th nil)
    (tick_pan_device const-decl "state" system_th nil)
    (update_t_panel const-decl "patient_db_type" system_th nil)
    (tick_pan_coordinator const-decl "state" system_th nil))
   shostak))
 (p_d_fun_action_lemma_ex 0
  (p_d_fun_action_lemma_ex-1 nil 3867407532
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "lemma_fun_act_p"
           ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "pdfa_lemma"
                   ("a" "a!1" "p" "p!1" "st" "st!1"))
                  (("1"
                    (lemma "p_to_act_ip"
                     ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
                    (("1" (beta -1)
                      (("1" (split -1)
                        (("1" (flatten -1)
                          (("1"
                            (lemma "lemma_reflect_device_p_ds"
                             ("p" "p!1" "d" "d!1" "st"
                              "p_fun_act(a!1, d!1, p!1, st!1)"))
                            (("1" (beta -1)
                              (("1"
                                (split -1)
                                (("1"
                                  (flatten -1)
                                  (("1"
                                    (split -29)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (replace -7 12)
                                        (("1"
                                          (expand "p_d_fun_actionx" 12)
                                          (("1"
                                            (replace -29 12)
                                            (("1"
                                              (replace -2 12)
                                              (("1"
                                                (replace -5 12)
                                                (("1"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (assert)
                                      (("2"
                                        (replace -7 12)
                                        (("2"
                                          (expand "p_d_fun_actionx" 12)
                                          (("2"
                                            (replace -29 12)
                                            (("2"
                                              (replace -3 12)
                                              (("2"
                                                (replace -6 12)
                                                (("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (replace -7 1)
                                  (("2" (assert) nil nil))
                                  nil)
                                 ("3"
                                  (replace -7 1)
                                  (("3" (assert) nil nil))
                                  nil)
                                 ("4"
                                  (split -26)
                                  (("1" (assert) nil nil)
                                   ("2" (assert) nil nil))
                                  nil)
                                 ("5"
                                  (split -26)
                                  (("1" (assert) nil nil)
                                   ("2" (assert) nil nil))
                                  nil)
                                 ("6"
                                  (split -26)
                                  (("1" (assert) nil nil)
                                   ("2" (assert) nil nil))
                                  nil)
                                 ("7" (assert) nil nil)
                                 ("8"
                                  (split -26)
                                  (("1" (assert) nil nil)
                                   ("2" (assert) nil nil))
                                  nil)
                                 ("9" (assert) nil nil)
                                 ("10" (assert) nil nil)
                                 ("11" (assert) nil nil)
                                 ("12" (assert) nil nil)
                                 ("13"
                                  (split -26)
                                  (("1" (assert) nil nil)
                                   ("2" (assert) nil nil))
                                  nil)
                                 ("14" (assert) nil nil)
                                 ("15"
                                  (replace -7 1)
                                  (("15"
                                    (expand "p_fun_act" 1)
                                    (("15" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("16"
                                  (replace -7 1)
                                  (("16"
                                    (expand "p_fun_act" 1)
                                    (("16" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("17"
                                  (replace -7 1)
                                  (("17"
                                    (expand "p_fun_act" 1)
                                    (("17" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (propax) nil nil) ("3" (propax) nil nil)
                         ("4" (propax) nil nil) ("5" (propax) nil nil)
                         ("6" (split -24)
                          (("1" (assert) nil nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("7" (assert) nil nil)
                         ("8" (split -24)
                          (("1" (assert) nil nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("9" (split -24)
                          (("1" (assert) nil nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("10" (propax) nil nil)
                         ("11" (assert) nil nil)
                         ("12" (propax) nil nil)
                         ("13" (assert) nil nil)
                         ("14" (assert) nil nil)
                         ("15" (propax) nil nil)
                         ("16" (propax) nil nil)
                         ("17" (propax) nil nil)
                         ("18" (assert) nil nil)
                         ("19" (propax) nil nil)
                         ("20" (propax) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -11)
                (("1" (assert) nil nil) ("2" (assert) nil nil)) nil)
               ("7" (assert) nil nil)
               ("8" (split -11)
                (("1" (assert) nil nil) ("2" (assert) nil nil)) nil)
               ("9" (assert) nil nil) ("10" (assert) nil nil)
               ("11" (propax) nil nil) ("12" (assert) nil nil)
               ("13" (assert) nil nil) ("14" (propax) nil nil)
               ("15" (propax) nil nil) ("16" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (lemma_fun_act_p formula-decl nil ICE_templates_rsce_th nil)
    (pdfa_lemma formula-decl nil ICE_templates_rsce_th nil)
    (p_d_fun_actionx const-decl "state" ICE_templates_rsce_th nil)
    (p_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (lemma_reflect_device_p_ds formula-decl nil ICE_templates_rsce_th
     nil)
    (p_to_act_ip formula-decl nil ICE_templates_rsce_th nil))
   shostak))
 (p_d_fun_action_lemma_pdispdevice 0
  (p_d_fun_action_lemma_pdispdevice-1 nil 3888898321
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "lemma_fun_act_p"
           ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "pdfa_lemma"
                   ("a" "a!1" "p" "p!1" "st" "st!1"))
                  (("1"
                    (lemma "p_to_act_ip"
                     ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
                    (("1" (beta -1)
                      (("1" (split -1)
                        (("1" (flatten -1)
                          (("1"
                            (lemma "lemma_reflect_device_p_ds"
                             ("p" "p!1" "d" "d!1" "st"
                              "p_fun_act(a!1, d!1, p!1, st!1)"))
                            (("1" (beta -1)
                              (("1"
                                (split -1)
                                (("1"
                                  (flatten -1)
                                  (("1"
                                    (lemma
                                     "panlemma1np"
                                     ("p"
                                      "p!1"
                                      "d"
                                      "d!1"
                                      "st"
                                      "p_fun_act(a!1, d!1, p!1, st!1)"))
                                    (("1"
                                      (beta -1)
                                      (("1"
                                        (split -1)
                                        (("1"
                                          (flatten -1)
                                          (("1"
                                            (lemma
                                             "panlemma1ip"
                                             ("p"
                                              "p!1"
                                              "d"
                                              "d!1"
                                              "st"
                                              "p_fun_act(a!1, d!1, p!1, st!1)"))
                                            (("1"
                                              (beta -1)
                                              (("1"
                                                (split -1)
                                                (("1"
                                                  (flatten -1)
                                                  (("1"
                                                    (lemma
                                                     "lemma2ippannpdv"
                                                     ("p"
                                                      "p!1"
                                                      "d"
                                                      "d!1"
                                                      "st"
                                                      "p_fun_act(a!1, d!1, p!1, st!1)"))
                                                    (("1"
                                                      (beta -1)
                                                      (("1"
                                                        (split -1)
                                                        (("1"
                                                          (flatten -1)
                                                          (("1"
                                                            (split -71)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace
                                                                 -49
                                                                 12)
                                                                (("1"
                                                                  (expand
                                                                   "p_d_fun_actionx"
                                                                   12)
                                                                  (("1"
                                                                    (replace
                                                                     -71
                                                                     12)
                                                                    (("1"
                                                                      (replace
                                                                       -44
                                                                       12)
                                                                      (("1"
                                                                        (expand
                                                                         "reflect_device_to_patient"
                                                                         12)
                                                                        (("1"
                                                                          (expand
                                                                           "tick_pan_patient"
                                                                           12)
                                                                          (("1"
                                                                            (replace
                                                                             -29
                                                                             12)
                                                                            (("1"
                                                                              (replace
                                                                               -2
                                                                               12)
                                                                              (("1"
                                                                                (expand
                                                                                 "empty_pan_msg"
                                                                                 12)
                                                                                (("1"
                                                                                  (replace
                                                                                   -35
                                                                                   12)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -51
                                                                                     12)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -60
                                                                                       12)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -70
                                                                                         12)
                                                                                        (("1"
                                                                                          (beta
                                                                                           12)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "update_t_panel"
                                                                                             12)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (replace
                                                                 -49
                                                                 12)
                                                                (("2"
                                                                  (expand
                                                                   "p_d_fun_actionx"
                                                                   12)
                                                                  (("2"
                                                                    (replace
                                                                     -71
                                                                     12)
                                                                    (("2"
                                                                      (replace
                                                                       -45
                                                                       12)
                                                                      (("2"
                                                                        (expand
                                                                         "reflect_device_to_patient"
                                                                         12)
                                                                        (("2"
                                                                          (expand
                                                                           "tick_pan_patient"
                                                                           12)
                                                                          (("2"
                                                                            (replace
                                                                             -29
                                                                             12)
                                                                            (("2"
                                                                              (replace
                                                                               -3
                                                                               12)
                                                                              (("2"
                                                                                (expand
                                                                                 "empty_pan_msg"
                                                                                 12)
                                                                                (("2"
                                                                                  (replace
                                                                                   -35
                                                                                   12)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -51
                                                                                     12)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -61
                                                                                       12)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -70
                                                                                         12)
                                                                                        (("2"
                                                                                          (beta
                                                                                           12)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "update_t_panel"
                                                                                             12)
                                                                                            (("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (replace
                                                           -43
                                                           1)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (replace
                                                           -43
                                                           1)
                                                          (("3"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("4"
                                                          (split -62)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("5"
                                                          (split -62)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("6"
                                                          (split -62)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("7"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("8"
                                                          (split -62)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("9"
                                                          (replace
                                                           -43
                                                           1)
                                                          (("9"
                                                            (expand
                                                             "p_fun_act"
                                                             1)
                                                            (("9"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("10"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("11"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("12"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("13"
                                                          (replace
                                                           -43
                                                           1)
                                                          (("13"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("14"
                                                          (split -62)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("15"
                                                          (split -62)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("16"
                                                          (replace
                                                           -43
                                                           1)
                                                          (("16"
                                                            (expand
                                                             "p_fun_act"
                                                             1)
                                                            (("16"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (replace -25 1)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (replace -25 1)
                                                  (("3"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("4"
                                                  (split -44)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("5"
                                                  (split -44)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("6"
                                                  (split -44)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("7" (assert) nil nil)
                                                 ("8"
                                                  (split -44)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("9" (assert) nil nil)
                                                 ("10"
                                                  (assert)
                                                  nil
                                                  nil)
                                                 ("11"
                                                  (assert)
                                                  nil
                                                  nil)
                                                 ("12"
                                                  (replace -25 1)
                                                  (("12"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("13"
                                                  (split -44)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("14"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (replace -10 1)
                                          (("2" (assert) nil nil))
                                          nil)
                                         ("3"
                                          (replace -10 1)
                                          (("3" (assert) nil nil))
                                          nil)
                                         ("4"
                                          (split -29)
                                          (("1" (assert) nil nil)
                                           ("2" (assert) nil nil))
                                          nil)
                                         ("5"
                                          (split -29)
                                          (("1" (assert) nil nil)
                                           ("2" (assert) nil nil))
                                          nil)
                                         ("6"
                                          (split -29)
                                          (("1" (assert) nil nil)
                                           ("2" (assert) nil nil))
                                          nil)
                                         ("7" (assert) nil nil)
                                         ("8"
                                          (split -29)
                                          (("1" (assert) nil nil)
                                           ("2" (assert) nil nil))
                                          nil)
                                         ("9" (assert) nil nil)
                                         ("10" (assert) nil nil)
                                         ("11" (assert) nil nil)
                                         ("12"
                                          (replace -10 1)
                                          (("12" (assert) nil nil))
                                          nil)
                                         ("13"
                                          (split -29)
                                          (("1" (assert) nil nil)
                                           ("2" (assert) nil nil))
                                          nil)
                                         ("14" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (replace -7 1)
                                  (("2" (assert) nil nil))
                                  nil)
                                 ("3"
                                  (replace -7 1)
                                  (("3" (assert) nil nil))
                                  nil)
                                 ("4"
                                  (split -26)
                                  (("1" (assert) nil nil)
                                   ("2" (assert) nil nil))
                                  nil)
                                 ("5"
                                  (split -26)
                                  (("1" (assert) nil nil)
                                   ("2" (assert) nil nil))
                                  nil)
                                 ("6"
                                  (split -26)
                                  (("1" (assert) nil nil)
                                   ("2" (assert) nil nil))
                                  nil)
                                 ("7" (assert) nil nil)
                                 ("8"
                                  (split -26)
                                  (("1" (assert) nil nil)
                                   ("2" (assert) nil nil))
                                  nil)
                                 ("9" (assert) nil nil)
                                 ("10" (assert) nil nil)
                                 ("11" (assert) nil nil)
                                 ("12"
                                  (replace -7 1)
                                  (("12" (assert) nil nil))
                                  nil)
                                 ("13"
                                  (split -26)
                                  (("1" (assert) nil nil)
                                   ("2" (assert) nil nil))
                                  nil)
                                 ("14" (assert) nil nil)
                                 ("15"
                                  (replace -7 1)
                                  (("15"
                                    (expand "p_fun_act" 1)
                                    (("15" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("16"
                                  (replace -7 1)
                                  (("16"
                                    (expand "p_fun_act" 1)
                                    (("16" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("17"
                                  (replace -7 1)
                                  (("17"
                                    (expand "p_fun_act" 1)
                                    (("17" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (propax) nil nil) ("3" (propax) nil nil)
                         ("4" (propax) nil nil) ("5" (propax) nil nil)
                         ("6" (split -24)
                          (("1" (assert) nil nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("7" (assert) nil nil)
                         ("8" (split -24)
                          (("1" (assert) nil nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("9" (split -24)
                          (("1" (assert) nil nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("10" (propax) nil nil)
                         ("11" (assert) nil nil)
                         ("12" (propax) nil nil)
                         ("13" (assert) nil nil)
                         ("14" (assert) nil nil)
                         ("15" (propax) nil nil)
                         ("16" (propax) nil nil)
                         ("17" (propax) nil nil)
                         ("18" (split -24)
                          (("1" (assert) nil nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("19" (propax) nil nil)
                         ("20" (propax) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -11)
                (("1" (assert) nil nil) ("2" (assert) nil nil)) nil)
               ("7" (assert) nil nil)
               ("8" (split -11)
                (("1" (assert) nil nil) ("2" (assert) nil nil)) nil)
               ("9" (split -11)
                (("1" (assert) nil nil) ("2" (assert) nil nil)) nil)
               ("10" (assert) nil nil) ("11" (propax) nil nil)
               ("12" (assert) nil nil) ("13" (assert) nil nil)
               ("14" (propax) nil nil) ("15" (propax) nil nil)
               ("16" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (lemma_fun_act_p formula-decl nil ICE_templates_rsce_th nil)
    (pdfa_lemma formula-decl nil ICE_templates_rsce_th nil)
    (p_d_fun_actionx const-decl "state" ICE_templates_rsce_th nil)
    (tick_pan_patient const-decl "state" system_th nil)
    (update_t_panel const-decl "patient_db_type" system_th nil)
    (empty_pan_msg const-decl "pan_message_type" node_th nil)
    (reflect_device_to_patient const-decl "state" ICE_templates_rsce_th
     nil)
    (lemma2ippannpdv formula-decl nil ICE_templates_rsce_th nil)
    (panlemma1ip formula-decl nil ICE_templates_rsce_th nil)
    (panlemma1np formula-decl nil ICE_templates_rsce_th nil)
    (p_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (lemma_reflect_device_p_ds formula-decl nil ICE_templates_rsce_th
     nil)
    (p_to_act_ip formula-decl nil ICE_templates_rsce_th nil))
   shostak))
 (lemma_cd_fun_act_ip 0
  (lemma_cd_fun_act_ip-1 nil 3860235778
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (lemma "cdfa_lemma" ("a" "a!1" "st" "st!1"))
          ((""
            (lemma "lemma_fun_act_cp"
             ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
            (("" (beta -1)
              (("" (split -1)
                (("1" (flatten -1)
                  (("1"
                    (lemma "p_to_act_ip_coord"
                     ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
                    (("1" (beta -1)
                      (("1" (split -1)
                        (("1" (flatten -1)
                          (("1"
                            (lemma "lemma_reflect_device_cnx"
                             ("p" "p!1" "d" "d!1" "st"
                              "c_fun_act(a!1, d!1, p!1, st!1)"))
                            (("1" (beta -1)
                              (("1"
                                (split -1)
                                (("1"
                                  (flatten -1)
                                  (("1"
                                    (split -56)
                                    (("1"
                                      (flatten -1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (replace -42 18)
                                          (("1"
                                            (expand
                                             "c_d_fun_actionx"
                                             18)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten -1)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (replace -42 18)
                                          (("2"
                                            (expand
                                             "c_d_fun_actionx"
                                             18)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (replace -5 1)
                                  (("2"
                                    (replace -9 1)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (replace -5 1)
                                  (("3"
                                    (replace -9 1)
                                    (("3" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("4"
                                  (replace -11 1)
                                  (("4"
                                    (replace -5 1)
                                    (("4"
                                      (replace -9 1)
                                      (("4"
                                        (lift-if 1)
                                        (("4"
                                          (split 1)
                                          (("1"
                                            (split -37)
                                            (("1"
                                              (flatten -1)
                                              (("1"
                                                (replace -2 1)
                                                (("1"
                                                  (replace -2 -14)
                                                  (("1"
                                                    (replace -14 1)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten -1)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (split -37)
                                            (("1"
                                              (flatten -1)
                                              (("1"
                                                (replace -2 1)
                                                (("1"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten -1)
                                              (("2"
                                                (replace -2 1)
                                                (("2"
                                                  (assert 1)
                                                  (("2"
                                                    (replace -2 -15)
                                                    (("2"
                                                      (replace -15 1)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("5"
                                  (replace -9 1)
                                  (("5"
                                    (replace -11 1)
                                    (("5"
                                      (lift-if 1)
                                      (("5"
                                        (replace -5 1)
                                        (("5"
                                          (split -37)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("6"
                                  (replace -11 1)
                                  (("6"
                                    (split -37)
                                    (("1"
                                      (flatten -1)
                                      (("1" (assert) nil nil))
                                      nil)
                                     ("2"
                                      (flatten -1)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("7"
                                  (replace -5 1)
                                  (("7" (assert) nil nil))
                                  nil)
                                 ("8"
                                  (replace -11 1)
                                  (("8"
                                    (split -37)
                                    (("1"
                                      (flatten -1)
                                      (("1" (assert) nil nil))
                                      nil)
                                     ("2"
                                      (flatten -1)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("9"
                                  (replace -5 1)
                                  (("9"
                                    (expand "c_fun_act" 1)
                                    (("9" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("10"
                                  (expand "c_fun_act" 1)
                                  (("10" (propax) nil nil))
                                  nil)
                                 ("11" (assert) nil nil)
                                 ("12"
                                  (replace -10 1)
                                  (("12" (propax) nil nil))
                                  nil)
                                 ("13" (assert) nil nil)
                                 ("14"
                                  (replace -5 1)
                                  (("14"
                                    (replace -3 1)
                                    (("14" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("15"
                                  (replace -4 1)
                                  (("15"
                                    (replace -11 1)
                                    (("15"
                                      (split -37)
                                      (("1"
                                        (flatten -1)
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (flatten -1)
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("16"
                                  (split -37)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("17"
                                  (expand "c_fun_act" 1)
                                  (("17" (propax) nil nil))
                                  nil)
                                 ("18"
                                  (expand "c_fun_act" 1)
                                  (("18" (propax) nil nil))
                                  nil)
                                 ("19"
                                  (expand "c_fun_act" 1)
                                  (("19" (propax) nil nil))
                                  nil)
                                 ("20"
                                  (replace -5 1)
                                  (("20"
                                    (expand "c_fun_act" 1)
                                    (("20" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("21"
                                  (expand "c_fun_act" 1)
                                  (("21" (assert) nil nil))
                                  nil)
                                 ("22"
                                  (replace -5 1)
                                  (("22"
                                    (expand "c_fun_act" 1)
                                    (("22" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("23"
                                  (replace -5 1)
                                  (("23"
                                    (expand "c_fun_act" 1)
                                    (("23" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("24"
                                  (replace -5 1)
                                  (("24"
                                    (expand "c_fun_act" 1)
                                    (("24" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (propax) nil nil) ("3" (propax) nil nil)
                         ("4" (propax) nil nil) ("5" (propax) nil nil)
                         ("6" (split -35)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("7" (assert) nil nil)
                         ("8" (split -35)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("9" (assert) nil nil) ("10" (assert) nil nil)
                         ("11" (propax) nil nil)
                         ("12" (split -35)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("13" (split -35)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("14" (propax) nil nil)
                         ("15" (split -35)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("16" (assert) nil nil)
                         ("17" (propax) nil nil)
                         ("18" (assert) nil nil)
                         ("19" (assert) nil nil)
                         ("20" (propax) nil nil)
                         ("21" (propax) nil nil)
                         ("22" (propax) nil nil)
                         ("23" (propax) nil nil)
                         ("24" (propax) nil nil)
                         ("25" (propax) nil nil)
                         ("26" (propax) nil nil)
                         ("27" (propax) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (propax) nil nil) ("3" (propax) nil nil)
                 ("4" (propax) nil nil) ("5" (propax) nil nil)
                 ("6" (split -17)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("7" (assert) nil nil)
                 ("8" (split -17)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("9" (assert) nil nil) ("10" (assert) nil nil)
                 ("11" (propax) nil nil)
                 ("12" (split -17)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("13" (split -17)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("14" (propax) nil nil)
                 ("15" (split -17)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("16" (assert) nil nil) ("17" (propax) nil nil)
                 ("18" (assert) nil nil) ("19" (assert) nil nil)
                 ("20" (assert) nil nil) ("21" (propax) nil nil)
                 ("22" (propax) nil nil) ("23" (propax) nil nil)
                 ("24" (propax) nil nil) ("25" (propax) nil nil)
                 ("26" (propax) nil nil) ("27" (propax) nil nil)
                 ("28" (propax) nil nil) ("29" (propax) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (<= const-decl "bool" reals nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (cdfa_lemma formula-decl nil ICE_templates_rsce_th nil)
    (c_d_fun_actionx const-decl "state" ICE_templates_rsce_th nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (lemma_reflect_device_cnx formula-decl nil ICE_templates_rsce_th
     nil)
    (p_to_act_ip_coord formula-decl nil ICE_templates_rsce_th nil)
    (lemma_fun_act_cp formula-decl nil ICE_templates_rsce_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil))
   shostak))
 (lemma_cd_fun_act_ip_coord 0
  (lemma_cd_fun_act_ip_coord-1 nil 3861180145
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (lemma "cdfa_lemma" ("a" "a!1" "st" "st!1"))
          ((""
            (lemma "lemma_fun_act_cp"
             ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
            (("" (beta -1)
              (("" (split -1)
                (("1" (flatten -1)
                  (("1"
                    (lemma "p_to_act_ip_coord"
                     ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
                    (("1" (beta -1)
                      (("1" (split -1)
                        (("1" (flatten -1)
                          (("1"
                            (lemma "lemma2xnqq"
                             ("p" "p!1" "d" "d!1" "st"
                              "c_fun_act(a!1, d!1, p!1, st!1)"))
                            (("1" (beta -1)
                              (("1"
                                (split -1)
                                (("1"
                                  (flatten -1)
                                  (("1"
                                    (lemma
                                     "panlemma1np"
                                     ("p"
                                      "p!1"
                                      "d"
                                      "d!1"
                                      "st"
                                      "c_fun_act(a!1, d!1, p!1, st!1)"))
                                    (("1"
                                      (beta -1)
                                      (("1"
                                        (split -1)
                                        (("1"
                                          (flatten -1)
                                          (("1"
                                            (lemma
                                             "panlemma1npx"
                                             ("p"
                                              "p!1"
                                              "d"
                                              "d!1"
                                              "st"
                                              "c_fun_act(a!1, d!1, p!1, st!1)"))
                                            (("1"
                                              (beta -1)
                                              (("1"
                                                (split -1)
                                                (("1"
                                                  (flatten -1)
                                                  (("1"
                                                    (replace -46 18)
                                                    (("1"
                                                      (expand
                                                       "c_d_fun_actionx"
                                                       18)
                                                      (("1"
                                                        (replace
                                                         -63
                                                         18)
                                                        (("1"
                                                          (replace
                                                           -64
                                                           18)
                                                          (("1"
                                                            (split -62)
                                                            (("1"
                                                              (flatten
                                                               -1)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "reflect_device_to_coordinator"
                                                                   19)
                                                                  (("1"
                                                                    (expand
                                                                     "tick_pan_coordinator"
                                                                     19)
                                                                    (("1"
                                                                      (replace
                                                                       -15
                                                                       19)
                                                                      (("1"
                                                                        (replace
                                                                         -14
                                                                         19)
                                                                        (("1"
                                                                          (replace
                                                                           -30
                                                                           19)
                                                                          (("1"
                                                                            (replace
                                                                             -24
                                                                             19)
                                                                            (("1"
                                                                              (beta
                                                                               19)
                                                                              (("1"
                                                                                (replace
                                                                                 -12
                                                                                 19)
                                                                                (("1"
                                                                                  (replace
                                                                                   -11
                                                                                   19)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -32
                                                                                     19)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -31
                                                                                       19)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -39
                                                                                         19)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -59
                                                                                           19)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -60
                                                                                             19)
                                                                                            (("1"
                                                                                              (beta
                                                                                               19)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -4
                                                                                                 19)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -3
                                                                                                   19)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "update_p_panel"
                                                                                                     19)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "filter_panel"
                                                                                                       19)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -47
                                                                                                         19)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -28
                                                                                                           19)
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten
                                                               -1)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (expand
                                                                   "reflect_device_to_coordinator"
                                                                   18)
                                                                  (("2"
                                                                    (expand
                                                                     "tick_pan_coordinator"
                                                                     18)
                                                                    (("2"
                                                                      (replace
                                                                       -16
                                                                       18)
                                                                      (("2"
                                                                        (replace
                                                                         -15
                                                                         18)
                                                                        (("2"
                                                                          (replace
                                                                           -31
                                                                           18)
                                                                          (("2"
                                                                            (replace
                                                                             -26
                                                                             18)
                                                                            (("2"
                                                                              (beta
                                                                               18)
                                                                              (("2"
                                                                                (replace
                                                                                 -33
                                                                                 18)
                                                                                (("2"
                                                                                  (replace
                                                                                   -60
                                                                                   18)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -13
                                                                                     18)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -12
                                                                                       18)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -32
                                                                                         18)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -41
                                                                                           18)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -61
                                                                                             18)
                                                                                            (("2"
                                                                                              (beta
                                                                                               18)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "update_p_panel"
                                                                                                 18)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "filter_panel"
                                                                                                   18)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -5
                                                                                                     18)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -4
                                                                                                       18)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -48
                                                                                                         18)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -30
                                                                                                           18)
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2" (assert) nil nil)
                                                 ("3" (assert) nil nil)
                                                 ("4"
                                                  (replace -34 1)
                                                  (("4"
                                                    (split -60)
                                                    (("1"
                                                      (flatten -1)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten -1)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("5"
                                                  (split -60)
                                                  (("1"
                                                    (flatten -1)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten -1)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("6"
                                                  (split -60)
                                                  (("1"
                                                    (flatten -1)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten -1)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("7" (assert) nil nil)
                                                 ("8"
                                                  (split -60)
                                                  (("1"
                                                    (flatten -1)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten -1)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("9" (assert) nil nil)
                                                 ("10"
                                                  (assert)
                                                  nil
                                                  nil)
                                                 ("11"
                                                  (assert)
                                                  nil
                                                  nil)
                                                 ("12"
                                                  (assert)
                                                  nil
                                                  nil)
                                                 ("13"
                                                  (split -60)
                                                  (("1"
                                                    (flatten -1)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten -1)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("14"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (assert) nil nil)
                                         ("3" (assert) nil nil)
                                         ("4"
                                          (split -45)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("5"
                                          (split -45)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("6"
                                          (split -45)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("7" (assert) nil nil)
                                         ("8"
                                          (split -45)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("9" (assert) nil nil)
                                         ("10" (assert) nil nil)
                                         ("11" (assert) nil nil)
                                         ("12" (assert) nil nil)
                                         ("13"
                                          (split -45)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("14" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (assert) nil nil)
                                 ("3" (assert) nil nil)
                                 ("4"
                                  (split -37)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("5"
                                  (split -37)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("6"
                                  (split -37)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("7"
                                  (replace -5 1)
                                  (("7" (assert) nil nil))
                                  nil)
                                 ("8"
                                  (split -37)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("9" (assert) nil nil)
                                 ("10"
                                  (replace -10 1)
                                  (("10" (propax) nil nil))
                                  nil)
                                 ("11" (assert) nil nil)
                                 ("12"
                                  (replace -5 1)
                                  (("12"
                                    (replace -3 1)
                                    (("12" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("13"
                                  (split -37)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("14"
                                  (split -37)
                                  (("1"
                                    (flatten -1)
                                    (("1"
                                      (flatten 2)
                                      (("1"
                                        (replace -13 2)
                                        (("1"
                                          (replace -16 2)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (replace -3 2)
                                              (("1"
                                                (expand "execute_ip" 2)
                                                (("1"
                                                  (expand "fun_ip" 2)
                                                  (("1"
                                                    (lift-if -3)
                                                    (("1"
                                                      (split -3)
                                                      (("1"
                                                        (flatten -1)
                                                        (("1"
                                                          (split -2)
                                                          (("1"
                                                            (expand
                                                             "fun_incr"
                                                             -1)
                                                            (("1"
                                                              (expand
                                                               "per_incr"
                                                               -1)
                                                              (("1"
                                                                (flatten
                                                                 -1)
                                                                (("1"
                                                                  (split
                                                                   -2)
                                                                  (("1"
                                                                    (lift-if
                                                                     -3)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (split
                                                                         -3)
                                                                        (("1"
                                                                          (expand
                                                                           "update_panel"
                                                                           -1)
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "update_panel"
                                                                           -1)
                                                                          (("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (lift-if
                                                                       -3)
                                                                      (("2"
                                                                        (expand
                                                                         "update_panel"
                                                                         -3)
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (assert)
                                                                    (("3"
                                                                      (lift-if
                                                                       -3)
                                                                      (("3"
                                                                        (expand
                                                                         "update_panel"
                                                                         -3)
                                                                        (("3"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "update_panel"
                                                             -1)
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (split -1)
                                                          (("1"
                                                            (expand
                                                             "update_panel"
                                                             -1)
                                                            (("1"
                                                              (expand
                                                               "fun_decr"
                                                               -1)
                                                              (("1"
                                                                (flatten
                                                                 -1)
                                                                (("1"
                                                                  (split
                                                                   -2)
                                                                  (("1"
                                                                    (flatten
                                                                     -1)
                                                                    (("1"
                                                                      (lift-if
                                                                       -2)
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten
                                                             -1)
                                                            (("2"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (flatten
                                                                 -1)
                                                                (("1"
                                                                  (expand
                                                                   "update_panel"
                                                                   -2)
                                                                  (("1"
                                                                    (expand
                                                                     "fun_bolus"
                                                                     -2)
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 -1)
                                                                (("2"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (flatten
                                                                     -1)
                                                                    (("1"
                                                                      (expand
                                                                       "update_panel"
                                                                       -2)
                                                                      (("1"
                                                                        (expand
                                                                         "fun_confirm"
                                                                         -2)
                                                                        (("1"
                                                                          (expand
                                                                           "per_confirm"
                                                                           -2)
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten
                                                                     -1)
                                                                    (("2"
                                                                      (split
                                                                       -1)
                                                                      (("1"
                                                                        (flatten
                                                                         -1)
                                                                        (("1"
                                                                          (expand
                                                                           "update_panel"
                                                                           -2)
                                                                          (("1"
                                                                            (expand
                                                                             "fun_choosetime"
                                                                             -2)
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten
                                                                         -1)
                                                                        (("2"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (flatten
                                                                             -1)
                                                                            (("1"
                                                                              (expand
                                                                               "update_panel"
                                                                               -2)
                                                                              (("1"
                                                                                (expand
                                                                                 "fun_choosevtbi"
                                                                                 -2)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten
                                                                             -1)
                                                                            (("2"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (flatten
                                                                                 -1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "update_panel"
                                                                                   -2)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "fun_chooserate"
                                                                                     -2)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten
                                                                                 -1)
                                                                                (("2"
                                                                                  (split
                                                                                   -1)
                                                                                  (("1"
                                                                                    (flatten
                                                                                     -1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "update_panel"
                                                                                       -2)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "fun_infuse"
                                                                                         -2)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten
                                                                                     -1)
                                                                                    (("2"
                                                                                      (split
                                                                                       -1)
                                                                                      (("1"
                                                                                        (flatten
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "update_panel"
                                                                                           -2)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "fun_pause"
                                                                                             -2)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "update_panel"
                                                                                         -1)
                                                                                        (("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (replace -5 1)
                                        (("2"
                                          (expand "execute_vs" 1)
                                          (("2"
                                            (expand "alarm_vs" 1)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("15"
                                  (expand "c_fun_act" 1)
                                  (("15" (propax) nil nil))
                                  nil)
                                 ("16"
                                  (expand "c_fun_act" 1)
                                  (("16" (propax) nil nil))
                                  nil)
                                 ("17"
                                  (expand "c_fun_act" 1)
                                  (("17" (assert) nil nil))
                                  nil)
                                 ("18"
                                  (replace -5 1)
                                  (("18"
                                    (expand "c_fun_act" 1)
                                    (("18" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("19"
                                  (replace -5 1)
                                  (("19"
                                    (expand "c_fun_act" 1)
                                    (("19" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (propax) nil nil) ("3" (propax) nil nil)
                         ("4" (propax) nil nil) ("5" (propax) nil nil)
                         ("6" (split -35)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("7" (assert) nil nil)
                         ("8" (split -35)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("9" (assert) nil nil) ("10" (assert) nil nil)
                         ("11" (propax) nil nil)
                         ("12" (split -35)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("13" (split -35)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("14" (propax) nil nil)
                         ("15" (split -35)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("16" (assert) nil nil)
                         ("17" (propax) nil nil)
                         ("18" (assert) nil nil)
                         ("19" (assert) nil nil)
                         ("20" (propax) nil nil)
                         ("21" (propax) nil nil)
                         ("22" (propax) nil nil)
                         ("23" (propax) nil nil)
                         ("24" (propax) nil nil)
                         ("25" (propax) nil nil)
                         ("26" (propax) nil nil)
                         ("27" (split -35)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (propax) nil nil) ("3" (propax) nil nil)
                 ("4" (propax) nil nil) ("5" (propax) nil nil)
                 ("6" (split -17)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("7" (assert) nil nil)
                 ("8" (split -17)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("9" (assert) nil nil) ("10" (assert) nil nil)
                 ("11" (propax) nil nil)
                 ("12" (split -17)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("13" (split -17)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("14" (propax) nil nil)
                 ("15" (split -17)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("16" (assert) nil nil) ("17" (propax) nil nil)
                 ("18" (assert) nil nil) ("19" (assert) nil nil)
                 ("20" (assert) nil nil) ("21" (propax) nil nil)
                 ("22" (propax) nil nil) ("23" (propax) nil nil)
                 ("24" (propax) nil nil)
                 ("25" (split -17)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("26" (propax) nil nil) ("27" (propax) nil nil)
                 ("28" (propax) nil nil) ("29" (propax) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (<= const-decl "bool" reals nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (cdfa_lemma formula-decl nil ICE_templates_rsce_th nil)
    (fun_ip const-decl "d_state" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (fun_incr const-decl "d_state" infusion_pumps_th nil)
    (fun_decr const-decl "d_state" infusion_pumps_th nil)
    (fun_bolus const-decl "d_state" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (fun_confirm const-decl "d_state" infusion_pumps_th nil)
    (fun_choosetime const-decl "d_state" infusion_pumps_th nil)
    (fun_choosevtbi const-decl "d_state" infusion_pumps_th nil)
    (fun_chooserate const-decl "d_state" infusion_pumps_th nil)
    (fun_infuse const-decl "d_state" infusion_pumps_th nil)
    (fun_pause const-decl "d_state" infusion_pumps_th nil)
    (execute_ip const-decl "d_state" infusion_pumps_th nil)
    (execute_vs const-decl "v_state" vital_signs_th nil)
    (alarm_vs const-decl "v_state" vital_signs_th nil)
    (c_d_fun_actionx const-decl "state" ICE_templates_rsce_th nil)
    (reflect_device_to_coordinator const-decl "state"
     ICE_templates_rsce_th nil)
    (filter_panel const-decl "panel" coord_t_and_c_th nil)
    (update_p_panel const-decl "i_state" coordinator_th nil)
    (tick_pan_coordinator const-decl "state" system_th nil)
    (panlemma1npx formula-decl nil ICE_templates_rsce_th nil)
    (panlemma1np formula-decl nil ICE_templates_rsce_th nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (lemma2xnqq formula-decl nil ICE_templates_rsce_th nil)
    (p_to_act_ip_coord formula-decl nil ICE_templates_rsce_th nil)
    (lemma_fun_act_cp formula-decl nil ICE_templates_rsce_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil))
   shostak))
 (lemma_pd_fun_act_ip 0
  (lemma_pd_fun_act_ip-1 nil 3867824588
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (lemma "pdfa_lemma" ("a" "a!1" "p" "p!1" "st" "st!1"))
          ((""
            (lemma "lemma_fun_act_p"
             ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
            (("" (beta -1)
              (("" (split -1)
                (("1" (flatten -1)
                  (("1"
                    (lemma "p_to_act_ip"
                     ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
                    (("1" (beta -1)
                      (("1" (split -1)
                        (("1" (flatten -1)
                          (("1"
                            (lemma "lemma_reflect_device_p"
                             ("p" "p!1" "d" "d!1" "st"
                              "p_fun_act(a!1, d!1, p!1, st!1)"))
                            (("1" (beta -1)
                              (("1"
                                (split -1)
                                (("1"
                                  (flatten -1)
                                  (("1"
                                    (lemma
                                     "lemma_reflect_device_p_ds"
                                     ("p"
                                      "p!1"
                                      "d"
                                      "d!1"
                                      "st"
                                      "p_fun_act(a!1, d!1, p!1, st!1)"))
                                    (("1"
                                      (beta -1)
                                      (("1"
                                        (split -1)
                                        (("1"
                                          (flatten -1)
                                          (("1"
                                            (replace -35 12)
                                            (("1"
                                              (expand
                                               "p_d_fun_actionx"
                                               12)
                                              (("1"
                                                (replace -47 12)
                                                (("1"
                                                  (split 12)
                                                  (("1"
                                                    (replace -4 1)
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (replace -5 1)
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (replace -3 1)
                                                    (("3"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("4"
                                                    (replace -7 1)
                                                    (("4"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("5"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("6"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("7"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("8"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("9"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("10"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("11"
                                                    (split -46)
                                                    (("1"
                                                      (flatten -1)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten -1)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("12"
                                                    (split -46)
                                                    (("1"
                                                      (flatten -1)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten -1)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("13"
                                                    (split -46)
                                                    (("1"
                                                      (flatten -1)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten -1)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("14"
                                                    (split -46)
                                                    (("1"
                                                      (flatten -1)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten -1)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (replace -23 1)
                                          (("2" (assert) nil nil))
                                          nil)
                                         ("3"
                                          (replace -23 1)
                                          (("3" (assert) nil nil))
                                          nil)
                                         ("4"
                                          (split -43)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("5"
                                          (split -43)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("6"
                                          (split -43)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("7" (assert) nil nil)
                                         ("8"
                                          (split -43)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("9" (assert) nil nil)
                                         ("10" (assert) nil nil)
                                         ("11" (assert) nil nil)
                                         ("12"
                                          (replace -23 1)
                                          (("12" (assert) nil nil))
                                          nil)
                                         ("13"
                                          (split -43)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("14" (assert) nil nil)
                                         ("15"
                                          (replace -23 1)
                                          (("15"
                                            (expand "p_fun_act" 1)
                                            (("15"
                                              (replace -39 1)
                                              (("15" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("16"
                                          (replace -23 1)
                                          (("16"
                                            (expand "p_fun_act" 1)
                                            (("16" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("17"
                                          (replace -23 1)
                                          (("17"
                                            (expand "p_fun_act" 1)
                                            (("17" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (replace -6 1)
                                  (("2" (assert) nil nil))
                                  nil)
                                 ("3"
                                  (replace -6 1)
                                  (("3" (assert) nil nil))
                                  nil)
                                 ("4"
                                  (split -26)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("5"
                                  (split -26)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("6"
                                  (split -26)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("7"
                                  (replace -6 1)
                                  (("7" (assert) nil nil))
                                  nil)
                                 ("8"
                                  (split -26)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("9"
                                  (replace -6 1)
                                  (("9"
                                    (expand "p_fun_act" 1)
                                    (("9" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("10" (assert) nil nil)
                                 ("11" (assert) nil nil)
                                 ("12" (assert) nil nil)
                                 ("13"
                                  (replace -6 1)
                                  (("13" (assert) nil nil))
                                  nil)
                                 ("14"
                                  (split -26)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("15" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (propax) nil nil) ("3" (propax) nil nil)
                         ("4" (propax) nil nil) ("5" (propax) nil nil)
                         ("6" (split -24)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("7" (assert) nil nil)
                         ("8" (split -24)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("9" (split -24)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("10" (propax) nil nil)
                         ("11" (assert) nil nil)
                         ("12" (propax) nil nil)
                         ("13" (assert) nil nil)
                         ("14" (assert) nil nil)
                         ("15" (propax) nil nil)
                         ("16" (propax) nil nil)
                         ("17" (propax) nil nil)
                         ("18" (split -24)
                          (("1" (flatten -1)
                            (("1" (flatten 2)
                              (("1"
                                (expand "p_d_per_action" -28)
                                (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (flatten -1)
                            (("2" (expand "p_d_per_action" -29)
                              (("2" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("19" (propax) nil nil)
                         ("20" (split -24)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (propax) nil nil) ("3" (propax) nil nil)
                 ("4" (propax) nil nil) ("5" (propax) nil nil)
                 ("6" (split -12)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("7" (assert) nil nil)
                 ("8" (split -12)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("9" (split -12)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("10" (assert) nil nil) ("11" (propax) nil nil)
                 ("12" (assert) nil nil) ("13" (assert) nil nil)
                 ("14" (propax) nil nil) ("15" (propax) nil nil)
                 ("16" (assert) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (pdfa_lemma formula-decl nil ICE_templates_rsce_th nil)
    (p_d_per_action const-decl "boolean" ICE_templates_rsce_th nil)
    (p_d_fun_actionx const-decl "state" ICE_templates_rsce_th nil)
    (lemma_reflect_device_p_ds formula-decl nil ICE_templates_rsce_th
     nil)
    (p_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (lemma_reflect_device_p formula-decl nil ICE_templates_rsce_th nil)
    (p_to_act_ip formula-decl nil ICE_templates_rsce_th nil)
    (lemma_fun_act_p formula-decl nil ICE_templates_rsce_th nil)
    (device type-eq-decl nil devices_th nil))
   shostak))
 (lemma_cd_fun_act_xx 0
  (lemma_cd_fun_act_xx-1 nil 3864982591
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (lemma "cdfa_lemma" ("a" "a!1" "st" "st!1"))
          ((""
            (lemma "lemma_fun_act_cp"
             ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
            (("" (beta -1)
              (("" (split -1)
                (("1" (flatten -1)
                  (("1"
                    (lemma "p_to_act_ip_coord"
                     ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
                    (("1" (beta -1)
                      (("1" (split -1)
                        (("1" (flatten -1)
                          (("1"
                            (lemma "lemma_reflect_device_cnx"
                             ("p" "p!1" "d" "d!1" "st"
                              "c_fun_act(a!1, d!1, p!1, st!1)"))
                            (("1" (beta -1)
                              (("1"
                                (split -1)
                                (("1"
                                  (flatten -1)
                                  (("1"
                                    (lemma
                                     "lemma_reflect_device_c_ds"
                                     ("p"
                                      "p!1"
                                      "d"
                                      "d!1"
                                      "st"
                                      "c_fun_act(a!1, d!1, p!1, st!1)"))
                                    (("1"
                                      (beta -1)
                                      (("1"
                                        (split -1)
                                        (("1"
                                          (flatten -1)
                                          (("1"
                                            (lemma
                                             "lemma_cd_fun_act_ip_coord"
                                             ("a"
                                              "a!1"
                                              "p"
                                              "p!1"
                                              "d"
                                              "d!1"
                                              "st"
                                              "st!1"))
                                            (("1"
                                              (beta -1)
                                              (("1"
                                                (split -1)
                                                (("1"
                                                  (flatten -1)
                                                  (("1"
                                                    (split -63)
                                                    (("1"
                                                      (flatten -1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (replace
                                                           -49
                                                           19)
                                                          (("1"
                                                            (split 19)
                                                            (("1"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("1"
                                                                (replace
                                                                 -65
                                                                 1)
                                                                (("1"
                                                                  (replace
                                                                   -66
                                                                   1)
                                                                  (("1"
                                                                    (replace
                                                                     -11
                                                                     1)
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("2"
                                                                (replace
                                                                 -65
                                                                 1)
                                                                (("2"
                                                                  (replace
                                                                   -66
                                                                   1)
                                                                  (("2"
                                                                    (replace
                                                                     -12
                                                                     1)
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("3"
                                                                (replace
                                                                 -65
                                                                 1)
                                                                (("3"
                                                                  (replace
                                                                   -66
                                                                   1)
                                                                  (("3"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("4"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("4"
                                                                (replace
                                                                 -65
                                                                 1)
                                                                (("4"
                                                                  (replace
                                                                   -66
                                                                   1)
                                                                  (("4"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("5"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("5"
                                                                (replace
                                                                 -65
                                                                 1)
                                                                (("5"
                                                                  (replace
                                                                   -66
                                                                   1)
                                                                  (("5"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("6"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("6"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("7"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("7"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("8"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("8"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("9"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("9"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("10"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("10"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("11"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("11"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("12"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("12"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("13"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("13"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("14"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("14"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("15"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("15"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("16"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("16"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("17"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("17"
                                                                (replace
                                                                 -65
                                                                 1)
                                                                (("17"
                                                                  (replace
                                                                   -66
                                                                   1)
                                                                  (("17"
                                                                    (replace
                                                                     -9
                                                                     1)
                                                                    (("17"
                                                                      (replace
                                                                       -48
                                                                       1)
                                                                      (("17"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("18"
                                                              (expand
                                                               "c_d_fun_actionx"
                                                               1)
                                                              (("18"
                                                                (replace
                                                                 -65
                                                                 1)
                                                                (("18"
                                                                  (replace
                                                                   -66
                                                                   1)
                                                                  (("18"
                                                                    (replace
                                                                     -6
                                                                     1)
                                                                    (("18"
                                                                      (replace
                                                                       -29
                                                                       1)
                                                                      (("18"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten -1)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (replace
                                                           -50
                                                           18)
                                                          (("2"
                                                            (expand
                                                             "c_d_fun_actionx"
                                                             18)
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2" (propax) nil nil)
                                                 ("3" (propax) nil nil)
                                                 ("4" (propax) nil nil)
                                                 ("5" (propax) nil nil)
                                                 ("6"
                                                  (split -60)
                                                  (("1"
                                                    (flatten -1)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten -1)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("7"
                                                  (split -60)
                                                  (("1"
                                                    (flatten -1)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten -1)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("8"
                                                  (split -60)
                                                  (("1"
                                                    (flatten -1)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten -1)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("9"
                                                  (split -60)
                                                  (("1"
                                                    (flatten -1)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten -1)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("10"
                                                  (assert)
                                                  nil
                                                  nil)
                                                 ("11"
                                                  (propax)
                                                  nil
                                                  nil)
                                                 ("12"
                                                  (split -60)
                                                  (("1"
                                                    (flatten -1)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten -1)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("13"
                                                  (split -60)
                                                  (("1"
                                                    (flatten -1)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten -1)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("14"
                                                  (propax)
                                                  nil
                                                  nil)
                                                 ("15"
                                                  (split -60)
                                                  (("1"
                                                    (flatten -1)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten -1)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("16"
                                                  (assert)
                                                  nil
                                                  nil)
                                                 ("17"
                                                  (assert)
                                                  nil
                                                  nil)
                                                 ("18"
                                                  (propax)
                                                  nil
                                                  nil)
                                                 ("19"
                                                  (propax)
                                                  nil
                                                  nil)
                                                 ("20"
                                                  (assert)
                                                  nil
                                                  nil)
                                                 ("21"
                                                  (assert)
                                                  nil
                                                  nil)
                                                 ("22"
                                                  (propax)
                                                  nil
                                                  nil)
                                                 ("23"
                                                  (assert)
                                                  nil
                                                  nil)
                                                 ("24"
                                                  (assert)
                                                  nil
                                                  nil)
                                                 ("25"
                                                  (propax)
                                                  nil
                                                  nil)
                                                 ("26"
                                                  (assert)
                                                  nil
                                                  nil)
                                                 ("27"
                                                  (assert)
                                                  nil
                                                  nil)
                                                 ("28"
                                                  (assert)
                                                  nil
                                                  nil)
                                                 ("29"
                                                  (propax)
                                                  nil
                                                  nil)
                                                 ("30"
                                                  (propax)
                                                  nil
                                                  nil)
                                                 ("31"
                                                  (propax)
                                                  nil
                                                  nil)
                                                 ("32"
                                                  (propax)
                                                  nil
                                                  nil)
                                                 ("33"
                                                  (propax)
                                                  nil
                                                  nil)
                                                 ("34"
                                                  (propax)
                                                  nil
                                                  nil)
                                                 ("35"
                                                  (propax)
                                                  nil
                                                  nil)
                                                 ("36"
                                                  (propax)
                                                  nil
                                                  nil)
                                                 ("37"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (replace -24 1)
                                          (("2"
                                            (replace -28 1)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("3"
                                          (replace -24 1)
                                          (("3"
                                            (replace -28 1)
                                            (("3" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("4"
                                          (split -56)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("5"
                                          (split -56)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("6"
                                          (split -56)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("7" (assert) nil nil)
                                         ("8"
                                          (split -56)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("9" (assert) nil nil)
                                         ("10" (assert) nil nil)
                                         ("11" (assert) nil nil)
                                         ("12" (assert) nil nil)
                                         ("13"
                                          (split -56)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("14"
                                          (split -56)
                                          (("1"
                                            (flatten -1)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (replace -22 2)
                                                (("1"
                                                  (expand
                                                   "execute_ip"
                                                   2)
                                                  (("1"
                                                    (expand
                                                     "update_panel"
                                                     2)
                                                    (("1"
                                                      (expand
                                                       "fun_ip"
                                                       -3)
                                                      (("1"
                                                        (lift-if -3)
                                                        (("1"
                                                          (split -3)
                                                          (("1"
                                                            (flatten
                                                             -1)
                                                            (("1"
                                                              (expand
                                                               "fun_incr"
                                                               -2)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten
                                                             -1)
                                                            (("2"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (flatten
                                                                 -1)
                                                                (("1"
                                                                  (expand
                                                                   "fun_decr"
                                                                   -2)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten
                                                                 -1)
                                                                (("2"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (expand
                                                                     "fun_bolus"
                                                                     -1)
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten
                                                                     -1)
                                                                    (("2"
                                                                      (split
                                                                       -1)
                                                                      (("1"
                                                                        (expand
                                                                         "fun_confirm"
                                                                         -1)
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten
                                                                         -1)
                                                                        (("2"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "fun_choosetime"
                                                                             -1)
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten
                                                                             -1)
                                                                            (("2"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "fun_choosevtbi"
                                                                                 -1)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten
                                                                                 -1)
                                                                                (("2"
                                                                                  (split
                                                                                   -1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "fun_chooserate"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten
                                                                                     -1)
                                                                                    (("2"
                                                                                      (split
                                                                                       -1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "fun_infuse"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten
                                                                                         -1)
                                                                                        (("2"
                                                                                          (split
                                                                                           -1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "fun_pause"
                                                                                             -1)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (replace -23 1)
                                                (("2"
                                                  (expand
                                                   "execute_vs"
                                                   1)
                                                  (("2"
                                                    (expand
                                                     "alarm_vs"
                                                     1)
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("15"
                                          (expand "c_fun_act" 1)
                                          (("15" (propax) nil nil))
                                          nil)
                                         ("16"
                                          (expand "c_fun_act" 1)
                                          (("16" (propax) nil nil))
                                          nil)
                                         ("17"
                                          (replace -24 1)
                                          (("17"
                                            (expand "c_fun_act" 1)
                                            (("17" (propax) nil nil))
                                            nil))
                                          nil)
                                         ("18"
                                          (expand "c_fun_act" 1)
                                          (("18" (propax) nil nil))
                                          nil)
                                         ("19"
                                          (expand "c_fun_act" 1)
                                          (("19" (assert) nil nil))
                                          nil)
                                         ("20"
                                          (replace -24 1)
                                          (("20"
                                            (expand "c_fun_act" 1)
                                            (("20" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("21"
                                          (replace -24 1)
                                          (("21"
                                            (expand "c_fun_act" 1)
                                            (("21" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (replace -5 1)
                                  (("2" (assert) nil nil))
                                  nil)
                                 ("3"
                                  (replace -5 1)
                                  (("3" (assert) nil nil))
                                  nil)
                                 ("4"
                                  (split -37)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("5"
                                  (split -37)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("6"
                                  (replace -5 1)
                                  (("6"
                                    (split -37)
                                    (("1"
                                      (flatten -1)
                                      (("1" (assert) nil nil))
                                      nil)
                                     ("2"
                                      (flatten -1)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("7"
                                  (replace -5 1)
                                  (("7" (assert) nil nil))
                                  nil)
                                 ("8"
                                  (split -37)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("9"
                                  (replace -5 1)
                                  (("9"
                                    (expand "c_fun_act" 1)
                                    (("9" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("10"
                                  (expand "c_fun_act" 1)
                                  (("10" (propax) nil nil))
                                  nil)
                                 ("11" (assert) nil nil)
                                 ("12" (assert) nil nil)
                                 ("13" (assert) nil nil)
                                 ("14"
                                  (replace -5 1)
                                  (("14" (assert) nil nil))
                                  nil)
                                 ("15"
                                  (split -37)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("16"
                                  (split -37)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("17"
                                  (expand "c_fun_act" 1)
                                  (("17" (propax) nil nil))
                                  nil)
                                 ("18"
                                  (expand "c_fun_act" 1)
                                  (("18" (propax) nil nil))
                                  nil)
                                 ("19"
                                  (expand "c_fun_act" 1)
                                  (("19" (propax) nil nil))
                                  nil)
                                 ("20"
                                  (replace -5 1)
                                  (("20"
                                    (expand "c_fun_act" 1)
                                    (("20" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("21"
                                  (expand "c_fun_act" 1)
                                  (("21" (assert) nil nil))
                                  nil)
                                 ("22"
                                  (replace -5 1)
                                  (("22"
                                    (expand "c_fun_act" 1)
                                    (("22" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("23"
                                  (replace -5 1)
                                  (("23"
                                    (expand "c_fun_act" 1)
                                    (("23" (propax) nil nil))
                                    nil))
                                  nil)
                                 ("24"
                                  (replace -5 1)
                                  (("24"
                                    (expand "c_fun_act" 1)
                                    (("24" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (propax) nil nil) ("3" (propax) nil nil)
                         ("4" (propax) nil nil) ("5" (propax) nil nil)
                         ("6" (split -35)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("7" (assert) nil nil)
                         ("8" (split -35)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("9" (assert) nil nil) ("10" (assert) nil nil)
                         ("11" (propax) nil nil)
                         ("12" (split -35)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("13" (split -35)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("14" (propax) nil nil)
                         ("15" (split -35)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil)
                         ("16" (assert) nil nil)
                         ("17" (propax) nil nil)
                         ("18" (assert) nil nil)
                         ("19" (assert) nil nil)
                         ("20" (propax) nil nil)
                         ("21" (propax) nil nil)
                         ("22" (propax) nil nil)
                         ("23" (propax) nil nil)
                         ("24" (propax) nil nil)
                         ("25" (propax) nil nil)
                         ("26" (propax) nil nil)
                         ("27" (split -35)
                          (("1" (flatten -1) (("1" (assert) nil nil))
                            nil)
                           ("2" (flatten -1) (("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (propax) nil nil) ("3" (propax) nil nil)
                 ("4" (propax) nil nil) ("5" (propax) nil nil)
                 ("6" (split -17)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("7" (assert) nil nil)
                 ("8" (split -17)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("9" (assert) nil nil) ("10" (assert) nil nil)
                 ("11" (propax) nil nil)
                 ("12" (split -17)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("13" (split -17)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("14" (propax) nil nil)
                 ("15" (split -17)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("16" (assert) nil nil) ("17" (propax) nil nil)
                 ("18" (assert) nil nil) ("19" (assert) nil nil)
                 ("20" (assert) nil nil) ("21" (propax) nil nil)
                 ("22" (propax) nil nil) ("23" (propax) nil nil)
                 ("24" (propax) nil nil)
                 ("25" (split -17)
                  (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                   ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                  nil)
                 ("26" (propax) nil nil) ("27" (propax) nil nil)
                 ("28" (propax) nil nil) ("29" (propax) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (<= const-decl "bool" reals nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (cdfa_lemma formula-decl nil ICE_templates_rsce_th nil)
    (execute_ip const-decl "d_state" infusion_pumps_th nil)
    (fun_ip const-decl "d_state" infusion_pumps_th nil)
    (fun_incr const-decl "d_state" infusion_pumps_th nil)
    (fun_decr const-decl "d_state" infusion_pumps_th nil)
    (fun_bolus const-decl "d_state" infusion_pumps_th nil)
    (fun_confirm const-decl "d_state" infusion_pumps_th nil)
    (fun_choosetime const-decl "d_state" infusion_pumps_th nil)
    (fun_choosevtbi const-decl "d_state" infusion_pumps_th nil)
    (fun_chooserate const-decl "d_state" infusion_pumps_th nil)
    (fun_infuse const-decl "d_state" infusion_pumps_th nil)
    (fun_pause const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (execute_vs const-decl "v_state" vital_signs_th nil)
    (alarm_vs const-decl "v_state" vital_signs_th nil)
    (c_d_fun_actionx const-decl "state" ICE_templates_rsce_th nil)
    (lemma_cd_fun_act_ip_coord formula-decl nil ICE_templates_rsce_th
     nil)
    (lemma_reflect_device_c_ds formula-decl nil ICE_templates_rsce_th
     nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (lemma_reflect_device_cnx formula-decl nil ICE_templates_rsce_th
     nil)
    (p_to_act_ip_coord formula-decl nil ICE_templates_rsce_th nil)
    (lemma_fun_act_cp formula-decl nil ICE_templates_rsce_th nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil))
   shostak))
 (c_d_fun_action_lemma_onal 0
  (c_d_fun_action_lemma_onal-1 nil 3884331382
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "lemma_cd_fun_act_xx"
           ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1" (split -39)
                  (("1" (flatten -1)
                    (("1" (assert)
                      (("1" (split 19)
                        (("1" (expand "c_d_per_action" -44)
                          (("1" (flatten -44)
                            (("1" (replace -41 -45)
                              (("1"
                                (replace -42 -45)
                                (("1"
                                  (expand
                                   "consistent_coordinator_d"
                                   -43)
                                  (("1"
                                    (replace -43 -45)
                                    (("1"
                                      (expand "filter_panel" -45)
                                      (("1"
                                        (flatten -45)
                                        (("1"
                                          (replace -21 1)
                                          (("1"
                                            (expand "execute_ip" 1)
                                            (("1"
                                              (expand "update_panel" 1)
                                              (("1"
                                                (expand "upd_pan" 1)
                                                (("1"
                                                  (expand "tick" 1)
                                                  (("1"
                                                    (expand
                                                     "update_panel"
                                                     -1)
                                                    (("1"
                                                      (expand
                                                       "available_act"
                                                       -47)
                                                      (("1"
                                                        (split -47)
                                                        (("1"
                                                          (flatten -1)
                                                          (("1"
                                                            (replace
                                                             -1
                                                             -3)
                                                            (("1"
                                                              (expand
                                                               "fun_ip"
                                                               -3)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "fun_incr"
                                                                   -3)
                                                                  (("1"
                                                                    (lift-if
                                                                     -3)
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (flatten -1)
                                                          (("2"
                                                            (replace
                                                             -1
                                                             -3)
                                                            (("2"
                                                              (expand
                                                               "fun_ip"
                                                               -3)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (expand
                                                                   "fun_decr"
                                                                   -3)
                                                                  (("2"
                                                                    (lift-if
                                                                     -3)
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (flatten -1)
                                                          (("3"
                                                            (replace
                                                             -1
                                                             -3)
                                                            (("3"
                                                              (expand
                                                               "fun_ip"
                                                               -3)
                                                              (("3"
                                                                (assert)
                                                                (("3"
                                                                  (expand
                                                                   "fun_bolus"
                                                                   -3)
                                                                  (("3"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("4"
                                                          (flatten -1)
                                                          (("4"
                                                            (replace
                                                             -1
                                                             -3)
                                                            (("4"
                                                              (expand
                                                               "fun_ip"
                                                               -3)
                                                              (("4"
                                                                (assert)
                                                                (("4"
                                                                  (expand
                                                                   "fun_confirm"
                                                                   -3)
                                                                  (("4"
                                                                    (lift-if
                                                                     -3)
                                                                    (("4"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("5"
                                                          (flatten -1)
                                                          (("5"
                                                            (replace
                                                             -1
                                                             -3)
                                                            (("5"
                                                              (expand
                                                               "fun_ip"
                                                               -3)
                                                              (("5"
                                                                (assert)
                                                                (("5"
                                                                  (expand
                                                                   "fun_choosetime"
                                                                   -3)
                                                                  (("5"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("6"
                                                          (flatten -1)
                                                          (("6"
                                                            (replace
                                                             -1
                                                             -3)
                                                            (("6"
                                                              (expand
                                                               "fun_ip"
                                                               -3)
                                                              (("6"
                                                                (assert)
                                                                (("6"
                                                                  (expand
                                                                   "fun_choosevtbi"
                                                                   -3)
                                                                  (("6"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("7"
                                                          (flatten -1)
                                                          (("7"
                                                            (replace
                                                             -1
                                                             -3)
                                                            (("7"
                                                              (expand
                                                               "fun_ip"
                                                               -3)
                                                              (("7"
                                                                (assert)
                                                                (("7"
                                                                  (expand
                                                                   "fun_chooserate"
                                                                   -3)
                                                                  (("7"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("8"
                                                          (flatten -1)
                                                          (("8"
                                                            (replace
                                                             -1
                                                             -3)
                                                            (("8"
                                                              (expand
                                                               "fun_ip"
                                                               -3)
                                                              (("8"
                                                                (assert)
                                                                (("8"
                                                                  (expand
                                                                   "fun_infuse"
                                                                   -3)
                                                                  (("8"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("9"
                                                          (flatten -1)
                                                          (("9"
                                                            (replace
                                                             -1
                                                             -3)
                                                            (("9"
                                                              (expand
                                                               "fun_ip"
                                                               -3)
                                                              (("9"
                                                                (assert)
                                                                (("9"
                                                                  (expand
                                                                   "fun_pause"
                                                                   -3)
                                                                  (("9"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten 1)
                          (("2" (replace -29 -8)
                            (("2" (expand "execute_ip" -8)
                              (("2"
                                (expand "update_panel" -8)
                                (("2"
                                  (expand "upd_pan" -8)
                                  (("2"
                                    (expand "tick" -8)
                                    (("2"
                                      (expand "update_panel" -8)
                                      (("2"
                                        (expand "c_d_per_action" -52)
                                        (("2"
                                          (replace -49 -52)
                                          (("2"
                                            (replace -50 -52)
                                            (("2"
                                              (flatten -52)
                                              (("2"
                                                (expand
                                                 "consistent_coordinator_d"
                                                 -51)
                                                (("2"
                                                  (replace -51 -53)
                                                  (("2"
                                                    (expand
                                                     "filter_panel"
                                                     -53)
                                                    (("2"
                                                      (flatten -53)
                                                      (("2"
                                                        (expand
                                                         "available_act"
                                                         -54)
                                                        (("2"
                                                          (split -54)
                                                          (("1"
                                                            (flatten
                                                             -1)
                                                            (("1"
                                                              (replace
                                                               -1
                                                               -10)
                                                              (("1"
                                                                (expand
                                                                 "fun_ip"
                                                                 -10)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (lift-if
                                                                     -10)
                                                                    (("1"
                                                                      (expand
                                                                       "fun_incr"
                                                                       -10)
                                                                      (("1"
                                                                        (expand
                                                                         "per_incr"
                                                                         -2)
                                                                        (("1"
                                                                          (flatten
                                                                           -2)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "timeout"
                                                                               -11)
                                                                              (("1"
                                                                                (split
                                                                                 -3)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("3"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten
                                                             -1)
                                                            (("2"
                                                              (replace
                                                               -1
                                                               -10)
                                                              (("2"
                                                                (expand
                                                                 "fun_ip"
                                                                 -10)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "per_decr"
                                                                     -2)
                                                                    (("2"
                                                                      (expand
                                                                       "fun_decr"
                                                                       -10)
                                                                      (("2"
                                                                        (flatten
                                                                         -2)
                                                                        (("2"
                                                                          (expand
                                                                           "timeout"
                                                                           -11)
                                                                          (("2"
                                                                            (split
                                                                             -3)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              nil
                                                                              nil)
                                                                             ("3"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (flatten
                                                             -1)
                                                            (("3"
                                                              (replace
                                                               -1
                                                               -10)
                                                              (("3"
                                                                (expand
                                                                 "fun_ip"
                                                                 -10)
                                                                (("3"
                                                                  (assert)
                                                                  (("3"
                                                                    (expand
                                                                     "per_bolus"
                                                                     -2)
                                                                    (("3"
                                                                      (expand
                                                                       "fun_bolus"
                                                                       -10)
                                                                      (("3"
                                                                        (flatten
                                                                         -2)
                                                                        (("3"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("4"
                                                            (flatten
                                                             -1)
                                                            (("4"
                                                              (replace
                                                               -1
                                                               -10)
                                                              (("4"
                                                                (expand
                                                                 "fun_ip"
                                                                 -10)
                                                                (("4"
                                                                  (assert)
                                                                  (("4"
                                                                    (expand
                                                                     "fun_confirm"
                                                                     -10)
                                                                    (("4"
                                                                      (expand
                                                                       "per_confirm"
                                                                       -2)
                                                                      (("4"
                                                                        (flatten
                                                                         -2)
                                                                        (("4"
                                                                          (assert)
                                                                          (("4"
                                                                            (expand
                                                                             "timeout"
                                                                             -11)
                                                                            (("4"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("5"
                                                            (flatten
                                                             -1)
                                                            (("5"
                                                              (replace
                                                               -1
                                                               -10)
                                                              (("5"
                                                                (expand
                                                                 "fun_ip"
                                                                 -10)
                                                                (("5"
                                                                  (assert)
                                                                  (("5"
                                                                    (expand
                                                                     "fun_choosetime"
                                                                     -10)
                                                                    (("5"
                                                                      (expand
                                                                       "timeout"
                                                                       -10)
                                                                      (("5"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("6"
                                                            (flatten
                                                             -1)
                                                            (("6"
                                                              (replace
                                                               -1
                                                               -10)
                                                              (("6"
                                                                (expand
                                                                 "fun_ip"
                                                                 -10)
                                                                (("6"
                                                                  (assert)
                                                                  (("6"
                                                                    (expand
                                                                     "fun_choosevtbi"
                                                                     -10)
                                                                    (("6"
                                                                      (expand
                                                                       "timeout"
                                                                       -10)
                                                                      (("6"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("7"
                                                            (flatten
                                                             -1)
                                                            (("7"
                                                              (replace
                                                               -1
                                                               -10)
                                                              (("7"
                                                                (expand
                                                                 "fun_ip"
                                                                 -10)
                                                                (("7"
                                                                  (assert)
                                                                  (("7"
                                                                    (expand
                                                                     "fun_chooserate"
                                                                     -10)
                                                                    (("7"
                                                                      (expand
                                                                       "timeout"
                                                                       -10)
                                                                      (("7"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("8"
                                                            (flatten
                                                             -1)
                                                            (("8"
                                                              (replace
                                                               -1
                                                               -10)
                                                              (("8"
                                                                (expand
                                                                 "fun_ip"
                                                                 -10)
                                                                (("8"
                                                                  (assert)
                                                                  (("8"
                                                                    (expand
                                                                     "fun_infuse"
                                                                     -10)
                                                                    (("8"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("9"
                                                            (flatten
                                                             -1)
                                                            (("9"
                                                              (replace
                                                               -1
                                                               -10)
                                                              (("9"
                                                                (expand
                                                                 "fun_ip"
                                                                 -10)
                                                                (("9"
                                                                  (assert)
                                                                  (("9"
                                                                    (expand
                                                                     "fun_pause"
                                                                     -10)
                                                                    (("9"
                                                                      (expand
                                                                       "timeout"
                                                                       -10)
                                                                      (("9"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (flatten -1)
                    (("2" (assert)
                      (("2" (expand "c_d_per_action" -45)
                        (("2" (replace -42 -45)
                          (("2" (replace -43 -45)
                            (("2" (flatten -45)
                              (("2"
                                (expand "consistent_coordinator_d" -44)
                                (("2"
                                  (replace -44 -46)
                                  (("2"
                                    (expand "filter_panel" -46)
                                    (("2"
                                      (flatten -46)
                                      (("2"
                                        (expand "available_act" -47)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -16)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -16)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (assert) nil nil)
               ("11" (propax) nil nil) ("12" (assert) nil nil)
               ("13" (assert) nil nil) ("14" (propax) nil nil)
               ("15" (assert) nil nil) ("16" (assert) nil nil)
               ("17" (assert) nil nil) ("18" (propax) nil nil)
               ("19" (propax) nil nil) ("20" (assert) nil nil)
               ("21" (assert) nil nil) ("22" (propax) nil nil)
               ("23" (assert) nil nil) ("24" (assert) nil nil)
               ("25" (propax) nil nil) ("26" (assert) nil nil)
               ("27" (assert) nil nil) ("28" (assert) nil nil)
               ("29" (propax) nil nil) ("30" (propax) nil nil)
               ("31" (propax) nil nil) ("32" (propax) nil nil)
               ("33" (propax) nil nil) ("34" (propax) nil nil)
               ("35" (propax) nil nil) ("36" (propax) nil nil)
               ("37" (assert)
                (("37" (expand "c_d_per_action" -20)
                  (("37" (propax) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (lemma_cd_fun_act_xx formula-decl nil ICE_templates_rsce_th nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (timeout const-decl "itimes" infusion_pumps_th nil)
    (per_incr const-decl "boolean" infusion_pumps_th nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (per_decr const-decl "boolean" infusion_pumps_th nil)
    (per_bolus const-decl "boolean" infusion_pumps_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (c_d_per_action const-decl "boolean" ICE_templates_rsce_th nil)
    (consistent_coordinator_d const-decl "boolean"
     ICE_templates_rsce_th nil)
    (filter_panel const-decl "panel" coord_t_and_c_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (tick const-decl "d_state" infusion_pumps_th nil)
    (available_act const-decl "panel" infusion_pumps_th nil)
    (fun_pause const-decl "d_state" infusion_pumps_th nil)
    (fun_infuse const-decl "d_state" infusion_pumps_th nil)
    (fun_chooserate const-decl "d_state" infusion_pumps_th nil)
    (fun_choosevtbi const-decl "d_state" infusion_pumps_th nil)
    (fun_choosetime const-decl "d_state" infusion_pumps_th nil)
    (fun_confirm const-decl "d_state" infusion_pumps_th nil)
    (fun_bolus const-decl "d_state" infusion_pumps_th nil)
    (fun_decr const-decl "d_state" infusion_pumps_th nil)
    (fun_ip const-decl "d_state" infusion_pumps_th nil)
    (fun_incr const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (execute_ip const-decl "d_state" infusion_pumps_th nil)
    (available_act const-decl "panel" vital_signs_th nil))
   shostak))
 (lemma_reflect_device_consistent_c_d 0
  (lemma_reflect_device_consistent_c_d-1 nil 3864377762
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (lemma "panlemma1np" ("p" "p!1" "d" "d!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "panlemma1npx"
                   ("p" "p!1" "d" "d!1" "st" "st!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1"
                          (lemma "panlemma1npexec"
                           ("p" "p!1" "d" "d!1" "st" "st!1"))
                          (("1" (beta -1)
                            (("1" (split -1)
                              (("1"
                                (flatten -1)
                                (("1"
                                  (lemma
                                   "lemma2xnqq"
                                   ("p" "p!1" "d" "d!1" "st" "st!1"))
                                  (("1"
                                    (beta -1)
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (flatten -1)
                                        (("1"
                                          (lemma
                                           "lemma_reflect_device_c_ds"
                                           ("p"
                                            "p!1"
                                            "d"
                                            "d!1"
                                            "st"
                                            "st!1"))
                                          (("1"
                                            (beta -1)
                                            (("1"
                                              (split -1)
                                              (("1"
                                                (flatten -1)
                                                (("1"
                                                  (split -43)
                                                  (("1"
                                                    (flatten -1)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "consistent_coordinator_d"
                                                         12)
                                                        (("1"
                                                          (expand
                                                           "reflect_device_to_coordinator"
                                                           12)
                                                          (("1"
                                                            (expand
                                                             "tick_pan_coordinator"
                                                             12)
                                                            (("1"
                                                              (replace
                                                               -31
                                                               12)
                                                              (("1"
                                                                (replace
                                                                 -30
                                                                 12)
                                                                (("1"
                                                                  (replace
                                                                   -11
                                                                   12)
                                                                  (("1"
                                                                    (beta
                                                                     12)
                                                                    (("1"
                                                                      (replace
                                                                       -41
                                                                       12)
                                                                      (("1"
                                                                        (replace
                                                                         -28
                                                                         12)
                                                                        (("1"
                                                                          (replace
                                                                           -27
                                                                           12)
                                                                          (("1"
                                                                            (replace
                                                                             -42
                                                                             12)
                                                                            (("1"
                                                                              (beta
                                                                               12)
                                                                              (("1"
                                                                                (expand
                                                                                 "update_p_panel"
                                                                                 12)
                                                                                (("1"
                                                                                  (replace
                                                                                   -17
                                                                                   12)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -15
                                                                                     12)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "filter_panel"
                                                                                       12)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten -1)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (expand
                                                         "consistent_coordinator_d"
                                                         11)
                                                        (("2"
                                                          (expand
                                                           "reflect_device_to_coordinator"
                                                           11)
                                                          (("2"
                                                            (expand
                                                             "tick_pan_coordinator"
                                                             11)
                                                            (("2"
                                                              (replace
                                                               -32
                                                               11)
                                                              (("2"
                                                                (replace
                                                                 -31
                                                                 11)
                                                                (("2"
                                                                  (replace
                                                                   -13
                                                                   11)
                                                                  (("2"
                                                                    (beta
                                                                     11)
                                                                    (("2"
                                                                      (replace
                                                                       -29
                                                                       11)
                                                                      (("2"
                                                                        (replace
                                                                         -28
                                                                         11)
                                                                        (("2"
                                                                          (expand
                                                                           "update_p_panel"
                                                                           11)
                                                                          (("2"
                                                                            (replace
                                                                             -21
                                                                             11)
                                                                            (("2"
                                                                              (replace
                                                                               -20
                                                                               11)
                                                                              (("2"
                                                                                (replace
                                                                                 -19
                                                                                 11)
                                                                                (("2"
                                                                                  (replace
                                                                                   -17
                                                                                   11)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -42
                                                                                     11)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -43
                                                                                       11)
                                                                                      (("2"
                                                                                        (beta
                                                                                         11)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "filter_panel"
                                                                                           11)
                                                                                          (("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (propax) nil nil)
                                               ("3" (propax) nil nil)
                                               ("4" (propax) nil nil)
                                               ("5" (propax) nil nil)
                                               ("6"
                                                (split -39)
                                                (("1"
                                                  (flatten -1)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten -1)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("7" (assert) nil nil)
                                               ("8"
                                                (split -39)
                                                (("1"
                                                  (flatten -1)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten -1)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("9" (assert) nil nil)
                                               ("10" (propax) nil nil)
                                               ("11" (assert) nil nil)
                                               ("12" (propax) nil nil)
                                               ("13" (propax) nil nil)
                                               ("14"
                                                (split -39)
                                                (("1"
                                                  (flatten -1)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten -1)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("15" (assert) nil nil)
                                               ("16" (assert) nil nil)
                                               ("17" (assert) nil nil)
                                               ("18" (assert) nil nil)
                                               ("19" (propax) nil nil)
                                               ("20" (propax) nil nil)
                                               ("21" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (propax) nil nil)
                                       ("3" (propax) nil nil)
                                       ("4" (propax) nil nil)
                                       ("5" (propax) nil nil)
                                       ("6"
                                        (split -31)
                                        (("1"
                                          (flatten -1)
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (flatten -1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("7" (assert) nil nil)
                                       ("8"
                                        (split -31)
                                        (("1"
                                          (flatten -1)
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (flatten -1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("9" (assert) nil nil)
                                       ("10" (propax) nil nil)
                                       ("11" (assert) nil nil)
                                       ("12" (propax) nil nil)
                                       ("13" (propax) nil nil)
                                       ("14"
                                        (split -31)
                                        (("1"
                                          (flatten -1)
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (flatten -1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("15" (assert) nil nil)
                                       ("16" (assert) nil nil)
                                       ("17" (propax) nil nil)
                                       ("18" (propax) nil nil)
                                       ("19" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (propax) nil nil)
                               ("3" (propax) nil nil)
                               ("4" (propax) nil nil)
                               ("5" (propax) nil nil)
                               ("6"
                                (split -27)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("7" (assert) nil nil)
                               ("8"
                                (split -27)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("9" (assert) nil nil)
                               ("10" (propax) nil nil)
                               ("11" (assert) nil nil)
                               ("12" (propax) nil nil)
                               ("13" (propax) nil nil)
                               ("14"
                                (split -27)
                                (("1"
                                  (assert)
                                  (("1"
                                    (flatten -1)
                                    (("1" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil) ("3" (propax) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (split -25)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -25)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (propax) nil nil)
                       ("11" (assert) nil nil) ("12" (propax) nil nil)
                       ("13" (propax) nil nil) ("14" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -10)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -10)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (propax) nil nil)
               ("11" (assert) nil nil) ("12" (propax) nil nil)
               ("13" (propax) nil nil) ("14" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (panlemma1np formula-decl nil ICE_templates_rsce_th nil)
    (panlemma1npx formula-decl nil ICE_templates_rsce_th nil)
    (panlemma1npexec formula-decl nil ICE_templates_rsce_th nil)
    (lemma2xnqq formula-decl nil ICE_templates_rsce_th nil)
    (lemma_reflect_device_c_ds formula-decl nil ICE_templates_rsce_th
     nil)
    (reflect_device_to_coordinator const-decl "state"
     ICE_templates_rsce_th nil)
    (filter_panel const-decl "panel" coord_t_and_c_th nil)
    (update_p_panel const-decl "i_state" coordinator_th nil)
    (tick_pan_coordinator const-decl "state" system_th nil)
    (consistent_coordinator_d const-decl "boolean"
     ICE_templates_rsce_th nil))
   shostak))
 (setup_coordinator_shortcut_devdisp 0
  (setup_coordinator_shortcut_devdisp-1 nil 3882961180
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (lemma "panlemma1np" ("p" "p!1" "d" "d!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "panlemma1npx"
                   ("p" "p!1" "d" "d!1" "st" "st!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1"
                          (lemma "lemma2xnqq"
                           ("p" "p!1" "d" "d!1" "st" "st!1"))
                          (("1" (beta -1)
                            (("1" (split -1)
                              (("1"
                                (flatten -1)
                                (("1"
                                  (split -33)
                                  (("1"
                                    (flatten -1)
                                    (("1"
                                      (expand
                                       "reflect_device_to_coordinator"
                                       11)
                                      (("1"
                                        (expand
                                         "tick_pan_coordinator"
                                         11)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (replace -7 11)
                                            (("1"
                                              (beta 11)
                                              (("1"
                                                (replace -23 11)
                                                (("1"
                                                  (replace -22 11)
                                                  (("1"
                                                    (replace -33 11)
                                                    (("1"
                                                      (replace -20 11)
                                                      (("1"
                                                        (replace
                                                         -19
                                                         11)
                                                        (("1"
                                                          (replace
                                                           -34
                                                           11)
                                                          (("1"
                                                            (beta 11)
                                                            (("1"
                                                              (replace
                                                               -12
                                                               11)
                                                              (("1"
                                                                (replace
                                                                 -11
                                                                 11)
                                                                (("1"
                                                                  (expand
                                                                   "update_p_panel"
                                                                   11)
                                                                  (("1"
                                                                    (expand
                                                                     "filter_panel"
                                                                     11)
                                                                    (("1"
                                                                      (expand
                                                                       "available_act"
                                                                       11)
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (expand
                                         "reflect_device_to_coordinator"
                                         10)
                                        (("2"
                                          (expand
                                           "tick_pan_coordinator"
                                           10)
                                          (("2"
                                            (replace -9 10)
                                            (("2"
                                              (beta 10)
                                              (("2"
                                                (replace -24 10)
                                                (("2"
                                                  (replace -23 10)
                                                  (("2"
                                                    (replace -21 10)
                                                    (("2"
                                                      (replace -20 10)
                                                      (("2"
                                                        (replace
                                                         -34
                                                         10)
                                                        (("2"
                                                          (replace
                                                           -35
                                                           10)
                                                          (("2"
                                                            (beta 10)
                                                            (("2"
                                                              (replace
                                                               -13
                                                               10)
                                                              (("2"
                                                                (replace
                                                                 -12
                                                                 10)
                                                                (("2"
                                                                  (expand
                                                                   "update_p_panel"
                                                                   10)
                                                                  (("2"
                                                                    (expand
                                                                     "filter_panel"
                                                                     10)
                                                                    (("2"
                                                                      (expand
                                                                       "available_act"
                                                                       10)
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (propax) nil nil)
                               ("3" (propax) nil nil)
                               ("4" (propax) nil nil)
                               ("5" (propax) nil nil)
                               ("6"
                                (split -25)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("7" (assert) nil nil)
                               ("8"
                                (split -25)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("9" (assert) nil nil)
                               ("10" (propax) nil nil)
                               ("11" (assert) nil nil)
                               ("12" (propax) nil nil)
                               ("13" (propax) nil nil)
                               ("14"
                                (split -25)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("15" (assert) nil nil)
                               ("16" (assert) nil nil)
                               ("17" (propax) nil nil)
                               ("18" (propax) nil nil)
                               ("19" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil) ("3" (propax) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (split -23)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -23)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (propax) nil nil)
                       ("11" (assert) nil nil) ("12" (propax) nil nil)
                       ("13" (propax) nil nil) ("14" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (propax) nil nil)
               ("11" (assert) nil nil) ("12" (propax) nil nil)
               ("13" (propax) nil nil) ("14" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (panlemma1np formula-decl nil ICE_templates_rsce_th nil)
    (panlemma1npx formula-decl nil ICE_templates_rsce_th nil)
    (lemma2xnqq formula-decl nil ICE_templates_rsce_th nil)
    (reflect_device_to_coordinator const-decl "state"
     ICE_templates_rsce_th nil)
    (update_p_panel const-decl "i_state" coordinator_th nil)
    (available_act const-decl "panel" infusion_pumps_th nil)
    (filter_panel const-decl "panel" coord_t_and_c_th nil)
    (tick_pan_coordinator const-decl "state" system_th nil)
    (available_act const-decl "panel" vital_signs_th nil))
   shostak))
 (setup_coordinator_shortcut_devdisp_fun_act 0
  (setup_coordinator_shortcut_devdisp_fun_act-1 nil 3861791801
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "p_to_act_ip_coord"
           ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "lemma_fun_act_cp"
                   ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1"
                          (lemma "lemma_fun_act_cpon"
                           ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
                          (("1" (beta -1)
                            (("1" (split -1)
                              (("1"
                                (flatten -1)
                                (("1"
                                  (lemma
                                   "setup_coordinator_shortcut_devdisp"
                                   ("d"
                                    "d!1"
                                    "p"
                                    "p!1"
                                    "st"
                                    "c_fun_act(a!1, d!1, p!1, st!1)"))
                                  (("1"
                                    (beta -1)
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (flatten -1)
                                        (("1"
                                          (split -34)
                                          (("1"
                                            (flatten -1)
                                            (("1"
                                              (expand
                                               "c_d_fun_actionx"
                                               19)
                                              (("1"
                                                (replace -39 19)
                                                (("1"
                                                  (replace -40 19)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2"
                                              (expand
                                               "c_d_fun_actionx"
                                               18)
                                              (("2"
                                                (replace -40 18)
                                                (("2"
                                                  (replace -41 18)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (replace -5 1)
                                        (("2"
                                          (replace -9 1)
                                          (("2" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (replace -5 1)
                                        (("3"
                                          (replace -9 1)
                                          (("3" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("4"
                                        (replace -11 1)
                                        (("4"
                                          (split -30)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("5"
                                        (replace -11 1)
                                        (("5"
                                          (split -30)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("6"
                                        (replace -11 1)
                                        (("6"
                                          (split -30)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("7"
                                        (replace -5 1)
                                        (("7" (assert) nil nil))
                                        nil)
                                       ("8"
                                        (replace -11 1)
                                        (("8"
                                          (split -30)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("9" (assert) nil nil)
                                       ("10" (assert) nil nil)
                                       ("11" (assert) nil nil)
                                       ("12"
                                        (replace -5 1)
                                        (("12" (assert) nil nil))
                                        nil)
                                       ("13"
                                        (replace -11 1)
                                        (("13"
                                          (split -30)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("14"
                                        (split -30)
                                        (("1"
                                          (flatten -1)
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (flatten -1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("15" (assert) nil nil)
                                       ("16" (assert) nil nil)
                                       ("17" (assert) nil nil)
                                       ("18" (assert) nil nil)
                                       ("19" (assert) nil nil)
                                       ("20"
                                        (expand "c_fun_act" 1)
                                        (("20" (propax) nil nil))
                                        nil)
                                       ("21"
                                        (expand "c_fun_act" 1)
                                        (("21" (propax) nil nil))
                                        nil)
                                       ("22"
                                        (expand "c_fun_act" 1)
                                        (("22" (assert) nil nil))
                                        nil)
                                       ("23"
                                        (replace -5 1)
                                        (("23"
                                          (expand "c_fun_act" 1)
                                          (("23" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("24"
                                        (replace -5 1)
                                        (("24"
                                          (expand "c_fun_act" 1)
                                          (("24" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("25"
                                        (replace -5 1)
                                        (("25"
                                          (expand "c_fun_act" 1)
                                          (("25" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (propax) nil nil)
                               ("3" (propax) nil nil)
                               ("4" (propax) nil nil)
                               ("5" (propax) nil nil)
                               ("6"
                                (split -28)
                                (("1" (flatten 1) nil nil)
                                 ("2" (flatten 1) nil nil))
                                nil)
                               ("7" (assert) nil nil)
                               ("8"
                                (split -28)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("9" (assert) nil nil)
                               ("10" (assert) nil nil)
                               ("11" (propax) nil nil)
                               ("12"
                                (split -28)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("13"
                                (split -28)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("14" (propax) nil nil)
                               ("15"
                                (split -28)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("16" (assert) nil nil)
                               ("17" (propax) nil nil)
                               ("18" (assert) nil nil)
                               ("19" (assert) nil nil)
                               ("20" (assert) nil nil)
                               ("21" (propax) nil nil)
                               ("22" (propax) nil nil)
                               ("23" (propax) nil nil)
                               ("24" (propax) nil nil)
                               ("25"
                                (split -28)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("26" (propax) nil nil)
                               ("27" (propax) nil nil)
                               ("28" (propax) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil) ("3" (propax) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (split -10)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -10)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (assert) nil nil)
                       ("11" (propax) nil nil)
                       ("12" (split -10)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("13" (split -10)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("14" (propax) nil nil)
                       ("15" (split -10)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("16" (assert) nil nil) ("17" (propax) nil nil)
                       ("18" (assert) nil nil) ("19" (assert) nil nil)
                       ("20" (assert) nil nil) ("21" (propax) nil nil)
                       ("22" (propax) nil nil) ("23" (propax) nil nil)
                       ("24" (propax) nil nil)
                       ("25" (split -10)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("26" (propax) nil nil) ("27" (propax) nil nil)
                       ("28" (expand "c_d_per_action" -21)
                        (("28" (assert) nil nil)) nil)
                       ("29" (propax) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (assert) nil nil)
               ("11" (propax) nil nil)
               ("12" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("13" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("14" (propax) nil nil)
               ("15" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("16" (assert) nil nil) ("17" (propax) nil nil)
               ("18" (assert) nil nil) ("19" (assert) nil nil)
               ("20" (propax) nil nil) ("21" (propax) nil nil)
               ("22" (propax) nil nil) ("23" (propax) nil nil)
               ("24" (propax) nil nil) ("25" (propax) nil nil)
               ("26" (propax) nil nil)
               ("27" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (p_to_act_ip_coord formula-decl nil ICE_templates_rsce_th nil)
    (lemma_fun_act_cp formula-decl nil ICE_templates_rsce_th nil)
    (lemma_fun_act_cpon formula-decl nil ICE_templates_rsce_th nil)
    (setup_coordinator_shortcut_devdisp formula-decl nil
     ICE_templates_rsce_th nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (c_d_fun_actionx const-decl "state" ICE_templates_rsce_th nil)
    (c_d_per_action const-decl "boolean" ICE_templates_rsce_th nil))
   shostak))
 (setup_coordinator_shortcut_devdisp_cmds 0
  (setup_coordinator_shortcut_devdisp_cmds-1 nil 3861856456
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (lemma "panlemma1np" ("p" "p!1" "d" "d!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "panlemma1npx"
                   ("p" "p!1" "d" "d!1" "st" "st!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1"
                          (lemma "lemma2xnqq"
                           ("p" "p!1" "d" "d!1" "st" "st!1"))
                          (("1" (beta -1)
                            (("1" (split -1)
                              (("1"
                                (flatten -1)
                                (("1"
                                  (split -33)
                                  (("1"
                                    (flatten -1)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (expand
                                         "reflect_device_to_coordinator"
                                         11)
                                        (("1"
                                          (expand
                                           "tick_pan_coordinator"
                                           11)
                                          (("1"
                                            (replace -7 11)
                                            (("1"
                                              (beta 11)
                                              (("1"
                                                (replace -23 11)
                                                (("1"
                                                  (replace -22 11)
                                                  (("1"
                                                    (replace -20 11)
                                                    (("1"
                                                      (replace -19 11)
                                                      (("1"
                                                        (replace
                                                         -33
                                                         11)
                                                        (("1"
                                                          (replace
                                                           -34
                                                           11)
                                                          (("1"
                                                            (beta 11)
                                                            (("1"
                                                              (replace
                                                               -12
                                                               11)
                                                              (("1"
                                                                (replace
                                                                 -11
                                                                 11)
                                                                (("1"
                                                                  (expand
                                                                   "update_p_panel"
                                                                   11)
                                                                  (("1"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten -1)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (expand
                                         "reflect_device_to_coordinator"
                                         10)
                                        (("2"
                                          (expand
                                           "tick_pan_coordinator"
                                           10)
                                          (("2"
                                            (replace -9 10)
                                            (("2"
                                              (beta 10)
                                              (("2"
                                                (replace -24 10)
                                                (("2"
                                                  (replace -23 10)
                                                  (("2"
                                                    (replace -21 10)
                                                    (("2"
                                                      (replace -20 10)
                                                      (("2"
                                                        (replace
                                                         -34
                                                         10)
                                                        (("2"
                                                          (replace
                                                           -35
                                                           10)
                                                          (("2"
                                                            (beta 10)
                                                            (("2"
                                                              (replace
                                                               -13
                                                               10)
                                                              (("2"
                                                                (replace
                                                                 -12
                                                                 10)
                                                                (("2"
                                                                  (expand
                                                                   "update_p_panel"
                                                                   10)
                                                                  (("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (propax) nil nil)
                               ("3" (propax) nil nil)
                               ("4" (propax) nil nil)
                               ("5" (propax) nil nil)
                               ("6"
                                (split -25)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("7" (assert) nil nil)
                               ("8"
                                (split -25)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("9" (assert) nil nil)
                               ("10" (propax) nil nil)
                               ("11" (assert) nil nil)
                               ("12" (propax) nil nil)
                               ("13" (propax) nil nil)
                               ("14"
                                (split -25)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("15" (assert) nil nil)
                               ("16" (assert) nil nil)
                               ("17" (propax) nil nil)
                               ("18" (propax) nil nil)
                               ("19" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil) ("3" (propax) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (split -23)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -23)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (propax) nil nil)
                       ("11" (assert) nil nil) ("12" (propax) nil nil)
                       ("13" (propax) nil nil)
                       ("14" (split -23)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (propax) nil nil)
               ("11" (assert) nil nil) ("12" (propax) nil nil)
               ("13" (propax) nil nil)
               ("14" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (panlemma1np formula-decl nil ICE_templates_rsce_th nil)
    (panlemma1npx formula-decl nil ICE_templates_rsce_th nil)
    (lemma2xnqq formula-decl nil ICE_templates_rsce_th nil)
    (tick_pan_coordinator const-decl "state" system_th nil)
    (update_p_panel const-decl "i_state" coordinator_th nil)
    (reflect_device_to_coordinator const-decl "state"
     ICE_templates_rsce_th nil))
   shostak))
 (setup_coordinator_shortcut_cmds_dev_disp_fun_act 0
  (setup_coordinator_shortcut_cmds_dev_disp_fun_act-1 nil 3861858719
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "p_to_act_ip_coord"
           ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "lemma_fun_act_cp"
                   ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1"
                          (lemma "lemma_fun_act_cpon"
                           ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
                          (("1" (beta -1)
                            (("1" (split -1)
                              (("1"
                                (flatten -1)
                                (("1"
                                  (lemma
                                   "setup_coordinator_shortcut_devdisp_cmds"
                                   ("d"
                                    "d!1"
                                    "p"
                                    "p!1"
                                    "st"
                                    "c_fun_act(a!1, d!1, p!1, st!1)"))
                                  (("1"
                                    (beta -1)
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (flatten -1)
                                        (("1"
                                          (split -32)
                                          (("1"
                                            (flatten -1)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand
                                                 "c_d_fun_actionx"
                                                 19)
                                                (("1"
                                                  (replace -37 19)
                                                  (("1"
                                                    (replace -38 19)
                                                    (("1"
                                                      (replace -3 19)
                                                      (("1"
                                                        (replace
                                                         -24
                                                         19)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand
                                                 "c_d_fun_actionx"
                                                 18)
                                                (("2"
                                                  (replace -38 18)
                                                  (("2"
                                                    (replace -39 18)
                                                    (("2"
                                                      (replace -5 18)
                                                      (("2"
                                                        (replace
                                                         -25
                                                         18)
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (replace -9 1)
                                        (("2"
                                          (replace -5 1)
                                          (("2" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (replace -9 1)
                                        (("3"
                                          (replace -5 1)
                                          (("3" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("4"
                                        (replace -11 1)
                                        (("4"
                                          (replace -5 1)
                                          (("4"
                                            (split -30)
                                            (("1"
                                              (flatten -1)
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (flatten -1)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("5"
                                        (replace -11 1)
                                        (("5"
                                          (replace -5 1)
                                          (("5"
                                            (split -30)
                                            (("1"
                                              (flatten -1)
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (flatten -1)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("6"
                                        (replace -5 1)
                                        (("6"
                                          (replace -11 1)
                                          (("6"
                                            (split -30)
                                            (("1"
                                              (flatten -1)
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (flatten -1)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("7" (assert) nil nil)
                                       ("8"
                                        (replace -11 1)
                                        (("8"
                                          (split -30)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("9" (assert) nil nil)
                                       ("10" (assert) nil nil)
                                       ("11" (assert) nil nil)
                                       ("12"
                                        (replace -5 1)
                                        (("12" (assert) nil nil))
                                        nil)
                                       ("13"
                                        (replace -11 1)
                                        (("13"
                                          (split -30)
                                          (("1"
                                            (flatten -1)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("14"
                                        (replace -14 1)
                                        (("14"
                                          (replace -11 1)
                                          (("14"
                                            (split -30)
                                            (("1"
                                              (flatten -1)
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (flatten -1)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("15" (assert) nil nil)
                                       ("16" (assert) nil nil)
                                       ("17" (assert) nil nil)
                                       ("18" (assert) nil nil)
                                       ("19" (assert) nil nil)
                                       ("20"
                                        (expand "c_fun_act" 1)
                                        (("20" (propax) nil nil))
                                        nil)
                                       ("21"
                                        (expand "c_fun_act" 1)
                                        (("21" (propax) nil nil))
                                        nil)
                                       ("22"
                                        (expand "c_fun_act" 1)
                                        (("22" (assert) nil nil))
                                        nil)
                                       ("23"
                                        (replace -5 1)
                                        (("23"
                                          (expand "c_fun_act" 1)
                                          (("23" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("24"
                                        (replace -5 1)
                                        (("24"
                                          (expand "c_fun_act" 1)
                                          (("24" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("25"
                                        (replace -5 1)
                                        (("25"
                                          (expand "c_fun_act" 1)
                                          (("25" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (propax) nil nil)
                               ("3" (propax) nil nil)
                               ("4" (propax) nil nil)
                               ("5" (propax) nil nil)
                               ("6"
                                (split -28)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("7" (assert) nil nil)
                               ("8"
                                (split -28)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("9" (assert) nil nil)
                               ("10" (assert) nil nil)
                               ("11" (propax) nil nil)
                               ("12"
                                (split -28)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("13"
                                (split -28)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("14" (propax) nil nil)
                               ("15"
                                (split -28)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("16" (assert) nil nil)
                               ("17" (propax) nil nil)
                               ("18" (assert) nil nil)
                               ("19" (assert) nil nil)
                               ("20" (assert) nil nil)
                               ("21" (propax) nil nil)
                               ("22" (propax) nil nil)
                               ("23" (propax) nil nil)
                               ("24" (propax) nil nil)
                               ("25"
                                (split -28)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("26" (propax) nil nil)
                               ("27" (propax) nil nil)
                               ("28" (propax) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil) ("3" (propax) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (split -10)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -10)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (assert) nil nil)
                       ("11" (propax) nil nil)
                       ("12" (split -10)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("13" (split -10)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("14" (propax) nil nil)
                       ("15" (split -10)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("16" (assert) nil nil) ("17" (propax) nil nil)
                       ("18" (assert) nil nil) ("19" (assert) nil nil)
                       ("20" (assert) nil nil) ("21" (propax) nil nil)
                       ("22" (propax) nil nil) ("23" (propax) nil nil)
                       ("24" (propax) nil nil)
                       ("25" (split -10)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("26" (propax) nil nil) ("27" (propax) nil nil)
                       ("28" (expand "c_d_per_action" -16)
                        (("28" (assert) nil nil)) nil)
                       ("29" (propax) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (assert) nil nil)
               ("11" (propax) nil nil)
               ("12" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("13" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("14" (propax) nil nil)
               ("15" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("16" (assert) nil nil) ("17" (propax) nil nil)
               ("18" (assert) nil nil) ("19" (assert) nil nil)
               ("20" (propax) nil nil) ("21" (propax) nil nil)
               ("22" (propax) nil nil) ("23" (propax) nil nil)
               ("24" (propax) nil nil) ("25" (propax) nil nil)
               ("26" (propax) nil nil)
               ("27" (split -8)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (p_to_act_ip_coord formula-decl nil ICE_templates_rsce_th nil)
    (lemma_fun_act_cp formula-decl nil ICE_templates_rsce_th nil)
    (lemma_fun_act_cpon formula-decl nil ICE_templates_rsce_th nil)
    (setup_coordinator_shortcut_devdisp_cmds formula-decl nil
     ICE_templates_rsce_th nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (c_d_fun_actionx const-decl "state" ICE_templates_rsce_th nil)
    (c_d_per_action const-decl "boolean" ICE_templates_rsce_th nil))
   shostak))
 (c_consistent_actionnxdevdisp 0
  (c_consistent_actionnxdevdisp-1 nil 3861862598
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "p_to_act_ip_coord"
           ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "setup_coordinator_shortcut_devdisp_fun_act"
                   ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1"
                          (lemma
                           "setup_coordinator_shortcut_cmds_dev_disp_fun_act"
                           ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
                          (("1" (beta -1)
                            (("1" (split -1)
                              (("1"
                                (flatten -1)
                                (("1"
                                  (lemma
                                   "cdfa_lemma"
                                   ("a" "a!1" "st" "st!1"))
                                  (("1"
                                    (split -22)
                                    (("1"
                                      (flatten -1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (split 19)
                                          (("1"
                                            (replace -3 1)
                                            (("1"
                                              (replace -6 1)
                                              (("1"
                                                (split -10)
                                                (("1"
                                                  (replace -1 1)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand
                                                   "c_d_per_action"
                                                   -29)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (replace -3 1)
                                            (("2"
                                              (replace -8 1)
                                              (("2"
                                                (split -10)
                                                (("1"
                                                  (replace -1 1)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand
                                                   "c_d_per_action"
                                                   -29)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (replace -3 1)
                                            (("3"
                                              (replace -4 1)
                                              (("3"
                                                (split -10)
                                                (("1"
                                                  (replace -1 1)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand
                                                   "c_d_per_action"
                                                   -29)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten -1)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (split 18)
                                          (("1"
                                            (replace -4 1)
                                            (("1"
                                              (replace -8 1)
                                              (("1"
                                                (split -12)
                                                (("1"
                                                  (replace -1 1)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand
                                                   "c_d_per_action"
                                                   -30)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (replace -4 1)
                                            (("2"
                                              (replace -10 1)
                                              (("2"
                                                (split -12)
                                                (("1"
                                                  (replace -1 1)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand
                                                   "c_d_per_action"
                                                   -30)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (replace -4 1)
                                            (("3"
                                              (replace -6 1)
                                              (("3"
                                                (split -12)
                                                (("1"
                                                  (replace -1 1)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand
                                                   "c_d_per_action"
                                                   -30)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (propax) nil nil)
                               ("3" (propax) nil nil)
                               ("4" (propax) nil nil)
                               ("5" (propax) nil nil)
                               ("6"
                                (split -19)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("7" (assert) nil nil)
                               ("8"
                                (split -19)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("9" (assert) nil nil)
                               ("10" (propax) nil nil)
                               ("11" (assert) nil nil)
                               ("12" (assert) nil nil)
                               ("13" (assert) nil nil)
                               ("14" (propax) nil nil)
                               ("15" (propax) nil nil)
                               ("16" (propax) nil nil)
                               ("17" (propax) nil nil)
                               ("18" (propax) nil nil)
                               ("19" (propax) nil nil)
                               ("20" (propax) nil nil)
                               ("21" (propax) nil nil)
                               ("22" (propax) nil nil)
                               ("23" (assert) nil nil)
                               ("24" (assert) nil nil)
                               ("25" (propax) nil nil)
                               ("26"
                                (split -19)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("27"
                                (split -19)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("28" (propax) nil nil)
                               ("29"
                                (split -19)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("30" (assert) nil nil)
                               ("31" (assert) nil nil)
                               ("32" (propax) nil nil)
                               ("33" (propax) nil nil)
                               ("34" (assert) nil nil)
                               ("35" (assert) nil nil)
                               ("36" (propax) nil nil)
                               ("37" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil) ("3" (propax) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (split -15)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -15)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (propax) nil nil)
                       ("11" (assert) nil nil) ("12" (assert) nil nil)
                       ("13" (assert) nil nil) ("14" (propax) nil nil)
                       ("15" (propax) nil nil) ("16" (propax) nil nil)
                       ("17" (propax) nil nil) ("18" (propax) nil nil)
                       ("19" (propax) nil nil) ("20" (propax) nil nil)
                       ("21" (propax) nil nil) ("22" (assert) nil nil)
                       ("23" (assert) nil nil) ("24" (propax) nil nil)
                       ("25" (split -15)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("26" (split -15)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("27" (propax) nil nil)
                       ("28" (split -15)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("29" (assert) nil nil) ("30" (assert) nil nil)
                       ("31" (propax) nil nil) ("32" (propax) nil nil)
                       ("33" (assert) nil nil) ("34" (assert) nil nil)
                       ("35" (propax) nil nil) ("36" (assert) nil nil)
                       ("37" (propax) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -13)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -13)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (assert) nil nil)
               ("11" (propax) nil nil)
               ("12" (split -13)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("13" (split -13)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("14" (propax) nil nil)
               ("15" (split -13)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("16" (assert) nil nil) ("17" (propax) nil nil)
               ("18" (assert) nil nil) ("19" (assert) nil nil)
               ("20" (propax) nil nil) ("21" (propax) nil nil)
               ("22" (propax) nil nil) ("23" (propax) nil nil)
               ("24" (propax) nil nil) ("25" (propax) nil nil)
               ("26" (propax) nil nil)
               ("27" (split -13)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (p_to_act_ip_coord formula-decl nil ICE_templates_rsce_th nil)
    (setup_coordinator_shortcut_devdisp_fun_act formula-decl nil
     ICE_templates_rsce_th nil)
    (setup_coordinator_shortcut_cmds_dev_disp_fun_act formula-decl nil
     ICE_templates_rsce_th nil)
    (cdfa_lemma formula-decl nil ICE_templates_rsce_th nil)
    (c_d_per_action const-decl "boolean" ICE_templates_rsce_th nil))
   shostak))
 (c_access_devdisp 0
  (c_access_devdisp-1 nil 3864791561
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        (("" (split 27)
          (("1"
            (lemma "c_consistent_actionnxdevdisp"
             ("a" "hold" "d" "d!1" "p" "p!1" "st" "st!1"))
            (("1" (beta -1)
              (("1" (split -1)
                (("1" (flatten -1)
                  (("1" (assert)
                    (("1" (flatten 1)
                      (("1" (replace -1 1)
                        (("1" (expand "filter_panel" 1)
                          (("1" (expand "enum_par" 1)
                            (("1" (expand "execute_ip" 1)
                              (("1"
                                (expand "update_panel" 1)
                                (("1"
                                  (expand "upd_pan" 1)
                                  (("1"
                                    (expand "fun_ip" 1)
                                    (("1"
                                      (expand "c_d_per_action" -7)
                                      (("1"
                                        (flatten -7)
                                        (("1"
                                          (expand
                                           "consistent_coordinator_d"
                                           -27)
                                          (("1"
                                            (replace -31 -8)
                                            (("1"
                                              (replace -32 -8)
                                              (("1"
                                                (replace -27 -8)
                                                (("1"
                                                  (expand
                                                   "filter_panel"
                                                   -8)
                                                  (("1"
                                                    (expand
                                                     "available_act"
                                                     -8)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "fun_pause"
                                                         1)
                                                        (("1"
                                                          (expand
                                                           "tick"
                                                           1)
                                                          (("1"
                                                            (expand
                                                             "timeout"
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "update_panel"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "upd_pan"
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "enum_par"
                                                                   1)
                                                                  (("1"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (propax) nil nil) ("3" (propax) nil nil)
                 ("4" (assert) nil nil) ("5" (assert) nil nil)
                 ("6" (assert) nil nil) ("7" (assert) nil nil)
                 ("8" (assert) nil nil) ("9" (assert) nil nil)
                 ("10" (assert) nil nil) ("11" (propax) nil nil)
                 ("12" (assert) nil nil) ("13" (assert) nil nil)
                 ("14" (assert) nil nil) ("15" (assert) nil nil)
                 ("16" (assert) nil nil) ("17" (assert) nil nil)
                 ("18" (propax) nil nil) ("19" (propax) nil nil)
                 ("20" (assert) nil nil) ("21" (assert) nil nil)
                 ("22" (propax) nil nil) ("23" (assert) nil nil)
                 ("24" (assert) nil nil) ("25" (propax) nil nil)
                 ("26" (assert) nil nil) ("27" (assert) nil nil)
                 ("28" (assert) nil nil) ("29" (propax) nil nil)
                 ("30" (assert) nil nil) ("31" (assert) nil nil)
                 ("32" (propax) nil nil) ("33" (propax) nil nil)
                 ("34" (propax) nil nil) ("35" (propax) nil nil)
                 ("36" (propax) nil nil) ("37" (propax) nil nil)
                 ("38" (assert) nil nil))
                nil))
              nil))
            nil)
           ("2"
            (lemma "c_consistent_actionnxdevdisp"
             ("a" "confirm" "d" "d!1" "p" "p!1" "st" "st!1"))
            (("2" (beta -1)
              (("2" (split -1)
                (("1" (flatten -1)
                  (("1" (assert)
                    (("1" (flatten 1)
                      (("1" (replace -1 1)
                        (("1" (expand "consistent_coordinator_d" -26)
                          (("1" (expand "c_d_per_action" -7)
                            (("1" (flatten -7)
                              (("1"
                                (replace -31 -8)
                                (("1"
                                  (replace -32 -8)
                                  (("1"
                                    (replace -27 -8)
                                    (("1"
                                      (expand "filter_panel" -8)
                                      (("1"
                                        (expand "available_act" -8)
                                        (("1"
                                          (expand "execute_ip" 1)
                                          (("1"
                                            (expand "fun_ip" 1)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand
                                                 "fun_confirm"
                                                 1)
                                                (("1"
                                                  (expand
                                                   "update_panel"
                                                   1)
                                                  (("1"
                                                    (expand
                                                     "upd_pan"
                                                     1)
                                                    (("1"
                                                      (expand "tick" 1)
                                                      (("1"
                                                        (expand
                                                         "update_panel"
                                                         1)
                                                        (("1"
                                                          (expand
                                                           "upd_pan"
                                                           1)
                                                          (("1"
                                                            (expand
                                                             "filter_panel"
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "timeout"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "enum_par"
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "per_confirm"
                                                                   -8)
                                                                  (("1"
                                                                    (flatten
                                                                     -8)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (propax) nil nil) ("3" (propax) nil nil)
                 ("4" (assert) nil nil) ("5" (assert) nil nil)
                 ("6" (assert) nil nil) ("7" (assert) nil nil)
                 ("8" (assert) nil nil) ("9" (assert) nil nil)
                 ("10" (assert) nil nil) ("11" (propax) nil nil)
                 ("12" (assert) nil nil) ("13" (assert) nil nil)
                 ("14" (assert) nil nil) ("15" (assert) nil nil)
                 ("16" (assert) nil nil) ("17" (assert) nil nil)
                 ("18" (propax) nil nil) ("19" (propax) nil nil)
                 ("20" (assert) nil nil) ("21" (assert) nil nil)
                 ("22" (propax) nil nil) ("23" (assert) nil nil)
                 ("24" (assert) nil nil) ("25" (propax) nil nil)
                 ("26" (assert) nil nil) ("27" (assert) nil nil)
                 ("28" (assert) nil nil) ("29" (propax) nil nil)
                 ("30" (assert) nil nil) ("31" (assert) nil nil)
                 ("32" (propax) nil nil) ("33" (propax) nil nil)
                 ("34" (propax) nil nil) ("35" (propax) nil nil)
                 ("36" (propax) nil nil) ("37" (propax) nil nil)
                 ("38" (assert) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((filter_panel const-decl "panel" coord_t_and_c_th nil)
    (execute_ip const-decl "d_state" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (c_d_per_action const-decl "boolean" ICE_templates_rsce_th nil)
    (consistent_coordinator_d const-decl "boolean"
     ICE_templates_rsce_th nil)
    (tick const-decl "d_state" infusion_pumps_th nil)
    (timeout const-decl "itimes" infusion_pumps_th nil)
    (fun_pause const-decl "d_state" infusion_pumps_th nil)
    (available_act const-decl "panel" infusion_pumps_th nil)
    (fun_ip const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (c_consistent_actionnxdevdisp formula-decl nil
     ICE_templates_rsce_th nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (boolean nonempty-type-decl nil booleans nil)
    (hold? adt-recognizer-decl "[action_id -> boolean]"
     coord_t_and_c_th nil)
    (hold adt-constructor-decl "(hold?)" coord_t_and_c_th nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (device type-eq-decl nil devices_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (state type-eq-decl nil system_th nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (fun_confirm const-decl "d_state" infusion_pumps_th nil)
    (confirm? adt-recognizer-decl "[action_id -> boolean]"
     coord_t_and_c_th nil)
    (confirm adt-constructor-decl "(confirm?)" coord_t_and_c_th nil))
   shostak))
 (c_access_devdispx 0
  (c_access_devdispx-1 nil 3866001363
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "c_consistent_actionnxdevdisp"
           ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1" (assert)
                  (("1" (split 18)
                    (("1" (flatten 1)
                      (("1" (split -1)
                        (("1" (replace -1 -2)
                          (("1" (replace -1 1)
                            (("1" (replace -2 1)
                              (("1"
                                (expand "filter_panel" 1)
                                (("1"
                                  (expand "enum_par" 1)
                                  (("1"
                                    (replace -1 -39)
                                    (("1"
                                      (expand "c_d_per_action" -39)
                                      (("1"
                                        (replace -32 -39)
                                        (("1"
                                          (replace -33 -39)
                                          (("1"
                                            (flatten -39)
                                            (("1"
                                              (expand
                                               "consistent_coordinator_d"
                                               -28)
                                              (("1"
                                                (replace -28 -40)
                                                (("1"
                                                  (expand
                                                   "filter_panel"
                                                   -40)
                                                  (("1"
                                                    (expand
                                                     "available_act"
                                                     -40)
                                                    (("1"
                                                      (expand
                                                       "execute_ip"
                                                       1)
                                                      (("1"
                                                        (expand
                                                         "fun_ip"
                                                         1)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "fun_pause"
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "update_panel"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "upd_pan"
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "tick"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "update_panel"
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "timeout"
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "upd_pan"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "enum_par"
                                                                           1)
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (replace -1 1)
                          (("2" (replace -1 -39)
                            (("2" (expand "c_d_per_action" -39)
                              (("2"
                                (flatten -39)
                                (("2"
                                  (expand
                                   "consistent_coordinator_d"
                                   -28)
                                  (("2"
                                    (replace -32 -40)
                                    (("2"
                                      (replace -33 -40)
                                      (("2"
                                        (replace -28 -40)
                                        (("2"
                                          (expand "filter_panel" -40)
                                          (("2"
                                            (expand
                                             "available_act"
                                             -40)
                                            (("2"
                                              (replace -1 -2)
                                              (("2"
                                                (replace -2 1)
                                                (("2"
                                                  (expand
                                                   "filter_panel"
                                                   1)
                                                  (("2"
                                                    (expand
                                                     "enum_par"
                                                     1)
                                                    (("2"
                                                      (expand
                                                       "execute_ip"
                                                       1)
                                                      (("2"
                                                        (expand
                                                         "fun_ip"
                                                         1)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "fun_confirm"
                                                             1)
                                                            (("2"
                                                              (expand
                                                               "update_panel"
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "upd_pan"
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "tick"
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "update_panel"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "upd_pan"
                                                                       1)
                                                                      (("2"
                                                                        (expand
                                                                         "enum_par"
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           "timeout"
                                                                           1)
                                                                          (("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten 1)
                      (("2" (split -1)
                        (("1" (replace -1 1)
                          (("1" (replace -1 -39)
                            (("1" (expand "c_d_per_action" -39)
                              (("1"
                                (flatten -39)
                                (("1"
                                  (replace -32 -40)
                                  (("1"
                                    (replace -33 -40)
                                    (("1"
                                      (expand
                                       "consistent_coordinator_d"
                                       -28)
                                      (("1"
                                        (replace -28 -40)
                                        (("1"
                                          (expand "filter_panel" -40)
                                          (("1"
                                            (expand
                                             "available_act"
                                             -40)
                                            (("1"
                                              (replace -1 -2)
                                              (("1"
                                                (replace -2 1)
                                                (("1"
                                                  (expand
                                                   "filter_panel"
                                                   1)
                                                  (("1"
                                                    (expand
                                                     "enum_par"
                                                     1)
                                                    (("1"
                                                      (expand
                                                       "execute_ip"
                                                       1)
                                                      (("1"
                                                        (expand
                                                         "fun_ip"
                                                         1)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "fun_pause"
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "update_panel"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "upd_pan"
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "tick"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "update_panel"
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "upd_pan"
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "enum_par"
                                                                         1)
                                                                        (("1"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (replace -1 -2)
                          (("2" (replace -1 -39)
                            (("2" (expand "c_d_per_action" -39)
                              (("2"
                                (flatten -39)
                                (("2"
                                  (replace -32 -40)
                                  (("2"
                                    (replace -33 -40)
                                    (("2"
                                      (expand
                                       "consistent_coordinator_d"
                                       -28)
                                      (("2"
                                        (replace -28 -40)
                                        (("2"
                                          (expand "filter_panel" -40)
                                          (("2"
                                            (expand
                                             "available_act"
                                             -40)
                                            (("2"
                                              (replace -1 1)
                                              (("2"
                                                (replace -2 1)
                                                (("2"
                                                  (expand
                                                   "filter_panel"
                                                   1)
                                                  (("2"
                                                    (expand
                                                     "enum_par"
                                                     1)
                                                    (("2"
                                                      (expand
                                                       "execute_ip"
                                                       1)
                                                      (("2"
                                                        (expand
                                                         "fun_ip"
                                                         1)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "fun_confirm"
                                                             1)
                                                            (("2"
                                                              (expand
                                                               "update_panel"
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "upd_pan"
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "tick"
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "update_panel"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "upd_pan"
                                                                       1)
                                                                      (("2"
                                                                        (expand
                                                                         "enum_par"
                                                                         1)
                                                                        (("2"
                                                                          (lift-if
                                                                           1)
                                                                          (("2"
                                                                            (split
                                                                             1)
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (expand
                                                                                 "per_confirm"
                                                                                 -40)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (assert) nil nil) ("5" (assert) nil nil)
               ("6" (assert) nil nil) ("7" (assert) nil nil)
               ("8" (assert) nil nil) ("9" (assert) nil nil)
               ("10" (assert) nil nil) ("11" (propax) nil nil)
               ("12" (assert) nil nil) ("13" (assert) nil nil)
               ("14" (assert) nil nil) ("15" (assert) nil nil)
               ("16" (assert) nil nil) ("17" (assert) nil nil)
               ("18" (propax) nil nil) ("19" (propax) nil nil)
               ("20" (assert) nil nil) ("21" (assert) nil nil)
               ("22" (propax) nil nil) ("23" (assert) nil nil)
               ("24" (assert) nil nil) ("25" (propax) nil nil)
               ("26" (assert) nil nil) ("27" (assert) nil nil)
               ("28" (assert) nil nil) ("29" (propax) nil nil)
               ("30" (assert) nil nil) ("31" (assert) nil nil)
               ("32" (propax) nil nil) ("33" (propax) nil nil)
               ("34" (propax) nil nil) ("35" (propax) nil nil)
               ("36" (propax) nil nil) ("37" (propax) nil nil)
               ("38" (propax) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (c_consistent_actionnxdevdisp formula-decl nil
     ICE_templates_rsce_th nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (per_confirm const-decl "boolean" infusion_pumps_th nil)
    (fun_confirm const-decl "d_state" infusion_pumps_th nil)
    (enum_par const-decl "boolean" coord_t_and_c_th nil)
    (c_d_per_action const-decl "boolean" ICE_templates_rsce_th nil)
    (consistent_coordinator_d const-decl "boolean"
     ICE_templates_rsce_th nil)
    (execute_ip const-decl "d_state" infusion_pumps_th nil)
    (update_panel const-decl "d_state" infusion_pumps_th nil)
    (tick const-decl "d_state" infusion_pumps_th nil)
    (timeout const-decl "itimes" infusion_pumps_th nil)
    (upd_pan const-decl "panel" infusion_pumps_th nil)
    (fun_pause const-decl "d_state" infusion_pumps_th nil)
    (fun_ip const-decl "d_state" infusion_pumps_th nil)
    (available_act const-decl "panel" infusion_pumps_th nil)
    (filter_panel const-decl "panel" coord_t_and_c_th nil))
   shostak))
 (panlemma1cfunact 0
  (panlemma1cfunact-1 nil 3896434590
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "lemma_fun_act_cpx"
           ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "lemma2xcfnnqq"
                   ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1"
                          (lemma "panlemma1np"
                           ("d" "d!1" "p" "p!1" "st"
                            "c_fun_act(a!1, d!1, p!1, st!1)"))
                          (("1" (beta -1)
                            (("1" (split -1)
                              (("1"
                                (flatten -1)
                                (("1"
                                  (split 18)
                                  (("1" (propax) nil nil)
                                   ("2" (assert) nil nil)
                                   ("3" (assert) nil nil)
                                   ("4" (propax) nil nil)
                                   ("5" (assert) nil nil)
                                   ("6" (assert) nil nil)
                                   ("7" (assert) nil nil)
                                   ("8" (propax) nil nil)
                                   ("9" (assert) nil nil)
                                   ("10" (assert) nil nil)
                                   ("11" (assert) nil nil)
                                   ("12" (propax) nil nil)
                                   ("13" (assert) nil nil)
                                   ("14" (assert) nil nil)
                                   ("15" (assert) nil nil)
                                   ("16" (propax) nil nil)
                                   ("17" (propax) nil nil)
                                   ("18" (propax) nil nil)
                                   ("19" (propax) nil nil)
                                   ("20" (propax) nil nil)
                                   ("21" (propax) nil nil)
                                   ("22" (propax) nil nil)
                                   ("23" (propax) nil nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil)
                               ("3" (assert) nil nil)
                               ("4"
                                (split -35)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("5"
                                (split -35)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("6"
                                (split -35)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("7" (assert) nil nil)
                               ("8"
                                (split -35)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("9" (assert) nil nil)
                               ("10" (assert) nil nil)
                               ("11" (assert) nil nil)
                               ("12" (assert) nil nil)
                               ("13"
                                (split -35)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("14" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil) ("3" (propax) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (split -27)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -27)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (propax) nil nil)
                       ("11" (assert) nil nil) ("12" (assert) nil nil)
                       ("13" (assert) nil nil) ("14" (propax) nil nil)
                       ("15" (propax) nil nil) ("16" (propax) nil nil)
                       ("17" (propax) nil nil) ("18" (assert) nil nil)
                       ("19" (assert) nil nil) ("20" (propax) nil nil)
                       ("21" (split -27)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("22" (split -27)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("23" (propax) nil nil)
                       ("24" (split -27)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("25" (assert) nil nil) ("26" (assert) nil nil)
                       ("27" (propax) nil nil) ("28" (assert) nil nil)
                       ("29" (assert) nil nil) ("30" (propax) nil nil)
                       ("31" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (assert) nil nil)
               ("11" (propax) nil nil)
               ("12" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("13" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("14" (propax) nil nil)
               ("15" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("16" (assert) nil nil) ("17" (propax) nil nil)
               ("18" (assert) nil nil) ("19" (assert) nil nil)
               ("20" (assert) nil nil) ("21" (propax) nil nil)
               ("22" (propax) nil nil)
               ("23" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("24" (propax) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (lemma_fun_act_cpx formula-decl nil ICE_templates_rsce_th nil)
    (lemma2xcfnnqq formula-decl nil ICE_templates_rsce_th nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (panlemma1np formula-decl nil ICE_templates_rsce_th nil))
   shostak))
 (panlemma1bfunact 0
  (panlemma1bfunact-1 nil 3897104022
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "lemma_fun_act_cpx"
           ("a" "a!1" "p" "p!1" "d" "d!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "panlemma1ipy"
                   ("p" "p!1" "d" "d!1" "st"
                    "c_fun_act(a!1, d!1, p!1, st!1)"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1"
                          (lemma "panlemma1np"
                           ("p" "p!1" "d" "d!1" "st"
                            "c_fun_act(a!1, d!1, p!1, st!1)"))
                          (("1" (beta -1)
                            (("1" (split -1)
                              (("1"
                                (flatten -1)
                                (("1"
                                  (split 18)
                                  (("1" (propax) nil nil)
                                   ("2"
                                    (replace -16 1)
                                    (("2" (propax) nil nil))
                                    nil)
                                   ("3"
                                    (replace -17 1)
                                    (("3"
                                      (replace -16 1)
                                      (("3" (propax) nil nil))
                                      nil))
                                    nil)
                                   ("4"
                                    (replace -18 1)
                                    (("4"
                                      (replace -17 1)
                                      (("4"
                                        (replace -16 1)
                                        (("4" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("5" (propax) nil nil)
                                   ("6"
                                    (replace -19 1)
                                    (("6" (propax) nil nil))
                                    nil)
                                   ("7"
                                    (replace -20 1)
                                    (("7"
                                      (replace -19 1)
                                      (("7" (propax) nil nil))
                                      nil))
                                    nil)
                                   ("8"
                                    (replace -21 1)
                                    (("8"
                                      (replace -20 1)
                                      (("8"
                                        (replace -19 1)
                                        (("8" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("9" (propax) nil nil)
                                   ("10"
                                    (replace -22 1)
                                    (("10" (propax) nil nil))
                                    nil)
                                   ("11"
                                    (replace -23 1)
                                    (("11"
                                      (replace -22 1)
                                      (("11" (propax) nil nil))
                                      nil))
                                    nil)
                                   ("12"
                                    (replace -24 1)
                                    (("12"
                                      (replace -23 1)
                                      (("12"
                                        (replace -22 1)
                                        (("12" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("13" (propax) nil nil)
                                   ("14"
                                    (replace -13 1)
                                    (("14" (propax) nil nil))
                                    nil)
                                   ("15"
                                    (replace -14 1)
                                    (("15"
                                      (replace -13 1)
                                      (("15" (propax) nil nil))
                                      nil))
                                    nil)
                                   ("16"
                                    (replace -15 1)
                                    (("16"
                                      (replace -14 1)
                                      (("16"
                                        (replace -13 1)
                                        (("16" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil)
                               ("3" (assert) nil nil)
                               ("4"
                                (split -39)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("5"
                                (split -39)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("6"
                                (split -39)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("7" (assert) nil nil)
                               ("8"
                                (split -39)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("9" (assert) nil nil)
                               ("10" (assert) nil nil)
                               ("11" (assert) nil nil)
                               ("12" (assert) nil nil)
                               ("13"
                                (split -39)
                                (("1"
                                  (flatten -1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (flatten -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("14" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert) nil nil) ("3" (assert) nil nil)
                       ("4" (split -27)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("5" (split -27)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("6" (split -27)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -27)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (replace -3 1)
                        (("9" (expand "c_fun_act" 1)
                          (("9" (propax) nil nil)) nil))
                        nil)
                       ("10" (expand "c_fun_act" 1)
                        (("10" (propax) nil nil)) nil)
                       ("11" (assert) nil nil) ("12" (assert) nil nil)
                       ("13" (assert) nil nil) ("14" (assert) nil nil)
                       ("15" (split -27)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("16" (split -27)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (assert) nil nil)
               ("11" (propax) nil nil)
               ("12" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("13" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("14" (propax) nil nil)
               ("15" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("16" (assert) nil nil) ("17" (propax) nil nil)
               ("18" (assert) nil nil) ("19" (assert) nil nil)
               ("20" (assert) nil nil) ("21" (propax) nil nil)
               ("22" (propax) nil nil)
               ("23" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("24" (propax) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (lemma_fun_act_cpx formula-decl nil ICE_templates_rsce_th nil)
    (c_fun_act const-decl "state" ICE_templates_rsce_th nil)
    (panlemma1ipy formula-decl nil ICE_templates_rsce_th nil)
    (panlemma1np formula-decl nil ICE_templates_rsce_th nil))
   shostak))
 (panlemma1xfunact 0
  (panlemma1xfunact-1 nil 3897978629
   ("" (skosimp*)
    (("" (beta)
      (("" (flatten)
        ((""
          (lemma "panlemma1cfunact"
           ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
          (("" (beta -1)
            (("" (split -1)
              (("1" (flatten -1)
                (("1"
                  (lemma "panlemma1bfunact"
                   ("a" "a!1" "d" "d!1" "p" "p!1" "st" "st!1"))
                  (("1" (beta -1)
                    (("1" (split -1)
                      (("1" (flatten -1)
                        (("1" (split 18)
                          (("1" (propax) nil nil)
                           ("2" (propax) nil nil)
                           ("3" (propax) nil nil)
                           ("4" (propax) nil nil)
                           ("5" (propax) nil nil)
                           ("6" (propax) nil nil)
                           ("7" (propax) nil nil)
                           ("8" (propax) nil nil)
                           ("9" (propax) nil nil)
                           ("10" (propax) nil nil)
                           ("11" (propax) nil nil)
                           ("12" (propax) nil nil)
                           ("13" (propax) nil nil)
                           ("14" (propax) nil nil)
                           ("15" (propax) nil nil)
                           ("16" (propax) nil nil)
                           ("17" (propax) nil nil)
                           ("18" (propax) nil nil)
                           ("19" (propax) nil nil)
                           ("20" (propax) nil nil)
                           ("21" (propax) nil nil)
                           ("22" (propax) nil nil)
                           ("23" (propax) nil nil)
                           ("24" (propax) nil nil)
                           ("25" (propax) nil nil)
                           ("26" (propax) nil nil)
                           ("27" (propax) nil nil)
                           ("28" (propax) nil nil)
                           ("29" (propax) nil nil)
                           ("30" (propax) nil nil)
                           ("31" (propax) nil nil)
                           ("32" (propax) nil nil)
                           ("33" (propax) nil nil)
                           ("34" (propax) nil nil)
                           ("35" (propax) nil nil)
                           ("36" (propax) nil nil)
                           ("37" (propax) nil nil)
                           ("38" (propax) nil nil)
                           ("39" (propax) nil nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil) ("3" (propax) nil nil)
                       ("4" (propax) nil nil) ("5" (propax) nil nil)
                       ("6" (split -32)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("7" (assert) nil nil)
                       ("8" (split -32)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("9" (assert) nil nil) ("10" (propax) nil nil)
                       ("11" (assert) nil nil) ("12" (assert) nil nil)
                       ("13" (assert) nil nil) ("14" (propax) nil nil)
                       ("15" (propax) nil nil) ("16" (propax) nil nil)
                       ("17" (propax) nil nil) ("18" (assert) nil nil)
                       ("19" (assert) nil nil) ("20" (propax) nil nil)
                       ("21" (split -32)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("22" (split -32)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("23" (propax) nil nil)
                       ("24" (split -32)
                        (("1" (flatten -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (flatten -1) (("2" (assert) nil nil))
                          nil))
                        nil)
                       ("25" (assert) nil nil) ("26" (assert) nil nil)
                       ("27" (propax) nil nil) ("28" (assert) nil nil)
                       ("29" (assert) nil nil) ("30" (propax) nil nil)
                       ("31" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil)
               ("6" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("7" (assert) nil nil)
               ("8" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("9" (assert) nil nil) ("10" (propax) nil nil)
               ("11" (assert) nil nil) ("12" (assert) nil nil)
               ("13" (assert) nil nil) ("14" (propax) nil nil)
               ("15" (propax) nil nil) ("16" (propax) nil nil)
               ("17" (propax) nil nil) ("18" (assert) nil nil)
               ("19" (assert) nil nil) ("20" (propax) nil nil)
               ("21" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("22" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("23" (propax) nil nil)
               ("24" (split -9)
                (("1" (flatten -1) (("1" (assert) nil nil)) nil)
                 ("2" (flatten -1) (("2" (assert) nil nil)) nil))
                nil)
               ("25" (assert) nil nil) ("26" (assert) nil nil)
               ("27" (propax) nil nil) ("28" (assert) nil nil)
               ("29" (assert) nil nil) ("30" (propax) nil nil)
               ("31" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state type-eq-decl nil system_th nil)
    (node_to_patient type-eq-decl nil system_th nil)
    (patients_type type-eq-decl nil patient_th nil)
    (patient_db_type type-eq-decl nil system_th nil)
    (n_state type-eq-decl nil node_th nil)
    (node_to_pd type-eq-decl nil system_th nil)
    (i_state type-eq-decl nil coordinator_th nil)
    (patient type-eq-decl nil coord_t_and_c_th nil)
    (device type-eq-decl nil devices_th nil)
    (maxtime formal-const-decl
     "{maxtime: posnat | maxinfuse <= maxtime}" ICE_templates_rsce_th
     nil)
    (maxinfuse formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (maxrate formal-const-decl "posnat" ICE_templates_rsce_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nlimit const-decl "nat" coord_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (action_id type-decl nil coord_t_and_c_th nil)
    (panlemma1cfunact formula-decl nil ICE_templates_rsce_th nil)
    (panlemma1bfunact formula-decl nil ICE_templates_rsce_th nil))
   shostak)))

